<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on tanaike</title>
    <link>https://tanaikech.github.io/post/</link>
    <description>Recent content in Posts on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 13 Jun 2017 10:28:25 +0900</lastBuildDate>
    <atom:link href="https://tanaikech.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Updated: CLI Tool - goris</title>
      <link>https://tanaikech.github.io/2017/06/13/updated-cli-tool---goris</link>
      <pubDate>Tue, 13 Jun 2017 10:28:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/13/updated-cli-tool---goris</guid>
      <description>&lt;p&gt;goris is a CLI tool to search for images with Google Reverse Image Search.&lt;/p&gt;

&lt;p&gt;Today, it was updated to v1.1.0. Please check it out. &lt;a href=&#34;https://github.com/tanaikech/goris&#34;&gt;https://github.com/tanaikech/goris&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When images are matched to a searched image, web pages with matching images are retrieved. These are web pages displayed on Google top page. When this is not used, images are retrieved. This was added as a boolean option. (This was added by a request.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Giving and Retrieving Parameters for Chart at GAS</title>
      <link>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas</link>
      <pubDate>Mon, 12 Jun 2017 11:11:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas</guid>
      <description>

&lt;p&gt;This sample script is for retrieving parameters from a chart. The chart created by both Google Apps Script and manually operation can be used.&lt;/p&gt;

&lt;h2 id=&#34;creates-chart&#34;&gt;Creates Chart&lt;/h2&gt;

&lt;p&gt;When a chart is created, it supposes following parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var parameters = {
  &amp;quot;title&amp;quot;: &amp;quot;x axis&amp;quot;,
  &amp;quot;fontName&amp;quot;: &amp;quot;Arial&amp;quot;,
  &amp;quot;minValue&amp;quot;: 0,
  &amp;quot;maxValue&amp;quot;: 100,
  &amp;quot;titleTextStyle&amp;quot;: {
    &amp;quot;color&amp;quot;: &amp;quot;#c0c0c0&amp;quot;,
    &amp;quot;fontSize&amp;quot;: 10,
    &amp;quot;fontName&amp;quot;: &amp;quot;Roboto&amp;quot;,
    &amp;quot;italic&amp;quot;: true,
    &amp;quot;bold&amp;quot;: false
  }
};

.setOption(&#39;hAxis&#39;, parameters)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;retrieve-parameters-from-chart&#34;&gt;Retrieve Parameters From Chart&lt;/h2&gt;

&lt;p&gt;For the chart created by above parameters, in order to retrieve the parameters, it uses following script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var hAxis_title = chart.getOptions().get(&#39;hAxis.title&#39;)
var hAxis_fontName = chart.getOptions().get(&#39;hAxis.fontName&#39;)
var hAxis_minValue = chart.getOptions().get(&#39;hAxis.minValue&#39;)
var hAxis_maxValue = chart.getOptions().get(&#39;hAxis.maxValue&#39;)
var hAxis_titleTextStyle_color = chart.getOptions().get(&#39;hAxis.titleTextStyle.color&#39;)
var hAxis_titleTextStyle_fontSize = chart.getOptions().get(&#39;hAxis.titleTextStyle.fontSize&#39;)
var hAxis_titleTextStyle_fontName = chart.getOptions().get(&#39;hAxis.titleTextStyle.fontName&#39;)
var hAxis_titleTextStyle_italic = chart.getOptions().get(&#39;hAxis.titleTextStyle.italic&#39;)
var hAxis_titleTextStyle_bold = chart.getOptions().get(&#39;hAxis.titleTextStyle.bold&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Result :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x axis
Arial
0.0
100.0
#c0c0c0
10.0
Roboto
true
false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At Google chart, the parameters is constructed by JSON data. So when the chart is created, JSON data is used.
In the same way, when the parameters is retrieved from the chart, it retrieves from the JSON data.&lt;/p&gt;

&lt;p&gt;By using this method, it is possible to create a Google Apps Script from the charts which was manually created.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Error Handling for Subprocess at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python</link>
      <pubDate>Fri, 09 Jun 2017 14:27:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python</guid>
      <description>&lt;p&gt;This sample is for error handling for subprocess.Popen. It confirms whether the execution file is existing. If the execution file is also not in the path, the error message is shown.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import subprocess

res = subprocess.Popen(
    &amp;quot;application&amp;quot;,  #  &amp;lt;- Execution file
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
    shell=True
).communicate()

if len(res[1]) == 0:
    print(&amp;quot;ok: Application is existing.&amp;quot;)
else:
    print(&amp;quot;Error: Application is not found.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Using Constructor Between Classes at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/using-constructor-between-classes-at-python</link>
      <pubDate>Fri, 09 Jun 2017 10:52:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/using-constructor-between-classes-at-python</guid>
      <description>

&lt;p&gt;This sample is for using constructor between classes at Python.&lt;/p&gt;

&lt;h2 id=&#34;sample&#34;&gt;Sample :&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class test1:

    def __init__(self):
        self.msg = &amp;quot;sample text&amp;quot;


class test2:

    def __init__(self):
        self.msg = test1().msg


print(test2().msg)

&amp;gt;&amp;gt;&amp;gt; sample text
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Slice Created by Split at Golang</title>
      <link>https://tanaikech.github.io/2017/06/09/slice-created-by-split-at-golang</link>
      <pubDate>Fri, 09 Jun 2017 09:16:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/slice-created-by-split-at-golang</guid>
      <description>

&lt;p&gt;When a string without no strings is split by &lt;code&gt;strings.Split()&lt;/code&gt;, the created slice is the same to the slice created by &lt;code&gt;make()&lt;/code&gt;. The length of the slice doesn&amp;rsquo;t become zero.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample script :&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;strings&amp;quot;
)

func main() {
    sample1a := strings.Split(&amp;quot;&amp;quot;, &amp;quot; &amp;quot;)
    fmt.Printf(&amp;quot;%v, %v, &#39;%v&#39;, %v, %+q\n&amp;quot;, sample1a, len(sample1a), sample1a[0], len(sample1a[0]), sample1a[0])

    sample1b := make([]string, 1)
    fmt.Printf(&amp;quot;%v, %v, &#39;%v&#39;, %v, %+q\n&amp;quot;, sample1b, len(sample1b), sample1b[0], len(sample1b[0]), sample1b[0])

    var sample2a []string
    fmt.Printf(&amp;quot;%v, %v\n&amp;quot;, sample2a, len(sample2a))

    sample2b := []string{}
    fmt.Printf(&amp;quot;%v, %v\n&amp;quot;, sample2b, len(sample2b))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;strings.Split() : [], 1, &#39;&#39;, 0, &amp;quot;&amp;quot;
make()          : [], 1, &#39;&#39;, 0, &amp;quot;&amp;quot;
var                : [], 0
[]string{}      : [], 0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Effect of Comprehension for GAS</title>
      <link>https://tanaikech.github.io/2017/06/07/effect-of-comprehension-for-gas</link>
      <pubDate>Wed, 07 Jun 2017 09:21:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/07/effect-of-comprehension-for-gas</guid>
      <description>

&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;

&lt;p&gt;There are a limit executing time for Google Apps Script (GAS). It&amp;rsquo;s 6 minutes. So users have to pay attention to the process cost of the script. GAS can use JavaScript 1.7. This means to be able to be used comprehension for GAS.&lt;/p&gt;

&lt;p&gt;In this report, the process cost for the comprehension has been investigated. The normal for loop was used as the competitor. As a result, it was found that the comprehension can be used one of methods for reducing the process cost. For 1 dimensional array, the process cost of comprehension is about &lt;strong&gt;60% lower&lt;/strong&gt; than that of the normal one. For 2 dimensional array, the process cost of comprehension is about &lt;strong&gt;50% lower&lt;/strong&gt; than that of the normal one. Each data is the average for 10 times measurements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170607a_1d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170607a_2d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;sample-script&#34;&gt;Sample Script&lt;/h1&gt;

&lt;p&gt;As a sample, 1 dimensional array and 2 dimensional array were used. The continuous number was imported to 1 dimensional array. For 2 dimensional array, the number of 1 to 100 was imported each element. As the calculation for measuring the process cost, when the element was multiples of 5, it was retrieved. These samples are GAS.&lt;/p&gt;

&lt;h2 id=&#34;for-1d&#34;&gt;For 1D&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function make1dAr(row){
  var ar = [];
  for (var i=0; i&amp;lt;row; i++) {
    ar[i] = i + 1;
  }
  return ar;
}

function comprehension1d(ar){
  return [i for each (i in ar) if(i % 5 == 0)];
}

function normal1d(ar){
  var result = [];
  for (var i=0; i&amp;lt;ar.length; i++) {
    if (ar[i] % 5 == 0) {
      result.push(ar[i]);
    }
  }
  return result;
}

function main1d() {
  var data = make1dAr(1000000);

  var start_P_time1 = Date.now();
  var res = normal1d(data);
  var end_P_time1 = Date.now();
  Logger.log((end_P_time1 - start_P_time1)/1000 + &#39; [s]&#39;)

  var start_P_time1 = Date.now();
  var res = comprehension1d(data);
  var end_P_time1 = Date.now();
  Logger.log((end_P_time1 - start_P_time1)/1000 + &#39; [s]&#39;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;for-2d&#34;&gt;For 2D&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function make2dAr(row){
  var ar1 = [];
  for (var i=0; i&amp;lt;row; i++) {
    var ar2 = [];
    for (var j=0; j&amp;lt;100; j++) {
      ar2[j] = j + 1;
    }
    ar1[i] = ar2;
  }
  return ar1;
}

function comprehension2d(ar){
  return [[j for each (j in i) if(j % 5 == 0)] for each (i in ar)];
}

function normal2d(ar){
  var ar1 = [];
  for (var i=0; i&amp;lt;ar.length; i++) {
    var ar2 = [];
    for (var j=0; j&amp;lt;ar[i].length; j++) {
      if (ar[i][j] % 5 == 0) {
        ar2.push(ar[i][j]);
      }
    }
    ar1.push(ar2)
  }
  return ar1;
}

function main2d() {
  var data = make2dAr(10000);

  var start_P_time1 = Date.now();
  var res = normal2d(data);
  var end_P_time1 = Date.now();
  Logger.log((end_P_time1 - start_P_time1)/1000 + &#39; [s]&#39;)

  var start_P_time1 = Date.now();
  var res = comprehension2d(data);
  var end_P_time1 = Date.now();
  Logger.log((end_P_time1 - start_P_time1)/1000 + &#39; [s]&#39;)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Embedding Animation GIF in A Cell on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet</link>
      <pubDate>Tue, 06 Jun 2017 16:47:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet</guid>
      <description>

&lt;p&gt;This sample script is for embedding animation GIF in a cell using custom function on Spreadsheet.&lt;/p&gt;

&lt;p&gt;I think that this method is one of various ideas.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;There are some limitations.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Images of jpeg and png can be embedded in a cell using &lt;code&gt;=IMAGE()&lt;/code&gt;. But when animation GIF is embedded using it, GIF is not played.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;insertImage()&lt;/code&gt; can insert the animation GIF to sheet. But it is not imported to one cell. It floats on several cells.&lt;/li&gt;
&lt;li&gt;In order to float the animation GIF on one cell, the size of GIF has to be retrieved. But the size of image cannot be retrieved at spreadsheet APIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=IMAGE()&lt;/code&gt; and &lt;code&gt;insertImage()&lt;/code&gt; cannot be used by custom functions.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;I thought a method to floating an animation GIF on one cell using &lt;code&gt;insertImage()&lt;/code&gt;. By this, I thought that it will be easy to use as a sheet with GIF images.&lt;/p&gt;

&lt;p&gt;In order to retrieve the size of image, it uses Google Document APIs. Class InlineImage of Document APIs has &lt;code&gt;getHeight()&lt;/code&gt; and &lt;code&gt;getWidth()&lt;/code&gt;. By this, the image size can be retrieved, and the size of cell can be changed using this. Although I have tried to resize image using &lt;code&gt;setHeight()&lt;/code&gt; and &lt;code&gt;setWidth()&lt;/code&gt;, when the image resized using them is retrieved, the size was original one.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;insertImage()&lt;/code&gt; can be used by Web Apps &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;. From previous research, it has been found that Web Apps can avoid various limitations. Also in the case of this situation, Web Apps could avoid the above limitations.&lt;/p&gt;

&lt;p&gt;To use this sample script, please deploy Web Apps as follows.&lt;/p&gt;

&lt;p&gt;On the Script Editor,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Publish

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;Deploy&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it deploys Web Apps, the approval required authorization can be done, simultaneously.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script :&lt;/h2&gt;

&lt;p&gt;Please copy and paste this script to a bound script of spreadsheet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function gif(filename) {
  var ac = SpreadsheetApp.getActiveSheet().getActiveCell();
  var q1 = &amp;quot;?file=&amp;quot; + filename;
  var q2 = &amp;quot;&amp;amp;row=&amp;quot; + ac.getRow();
  var q3 = &amp;quot;&amp;amp;col=&amp;quot; + ac.getColumn();
  var url = ScriptApp.getService().getUrl() + q1 + q2 + q3;
  UrlFetchApp.fetch(url);
}

function doGet(e) {
  var srcfile = DriveApp.getFilesByName(e.parameters.file).next();
  srcfile.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  var fileid = Drive.Files.insert({
      title: &amp;quot;temp&amp;quot;,
      mimeType: &amp;quot;application/vnd.google-apps.document&amp;quot;,
      parents:  [{&amp;quot;id&amp;quot;: srcfile.getParents().next().getId()}]
  }).getId();
  var img = DocumentApp.openById(fileid)
            .insertImage(
              0,
              UrlFetchApp.fetch(Drive.Files.get(srcfile.getId())
              .webContentLink)
              .getBlob()
            );
  var sheet = SpreadsheetApp.getActiveSheet();
  sheet.setRowHeight(e.parameters.row, img.getHeight() + 4);
  sheet.setColumnWidth(e.parameters.col, img.getWidth() + 3);
  sheet.getRange(e.parameters.row, e.parameters.col).setFormula(&amp;quot;&amp;quot;);
  sheet.insertImage(Drive.Files.get(srcfile.getId()).webContentLink, e.parameters.row, e.parameters.col);
  Utilities.sleep(1000);
  Drive.Files.remove(fileid);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flow-of-script&#34;&gt;Flow of Script :&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;gif()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input &lt;code&gt;=gif(&amp;quot;sample.gif&amp;quot;)&lt;/code&gt; in cell &lt;code&gt;B2&lt;/code&gt;. &lt;code&gt;&amp;quot;sample.gif&amp;quot;&lt;/code&gt; is an animation GIF.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;fetch()&lt;/code&gt;, sends data of &lt;code&gt;&amp;quot;sample.gif&amp;quot;&lt;/code&gt; and the inputted coordinate to &lt;code&gt;doGet()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;doGet()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;doGet()&lt;/code&gt;, get the data.&lt;/li&gt;
&lt;li&gt;Update the permission of GIF.&lt;/li&gt;
&lt;li&gt;Create Document file as new file.&lt;/li&gt;
&lt;li&gt;Import GIF to the Document and retrieve the image size of GIF.&lt;/li&gt;
&lt;li&gt;Using the size, change the size of cell for importing GIF.&lt;/li&gt;
&lt;li&gt;Import GIF to the cell.&lt;/li&gt;
&lt;li&gt;Delete Document file.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;By inputting &lt;code&gt;=gif(&amp;quot;sample.png&amp;quot;)&lt;/code&gt; in cell &lt;code&gt;B2&lt;/code&gt; as a custom function, following result can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Although this demo movie seems short loading time, this loading time is edited. Actual loading time is about 40 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170606c_demo.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When the custom function &lt;code&gt;gif()&lt;/code&gt; is used, loading time is about 40 seconds. (I don&amp;rsquo;t know whether this occurs only my environment.)&lt;/li&gt;
&lt;li&gt;Permissions of GIF are &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/access&#34;&gt;ANYONE_WITH_LINK&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/permission&#34;&gt;VIEW&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;related-tips&#34;&gt;Related Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/&#34;&gt;OCR using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Chart to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Map to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>OCR using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet</link>
      <pubDate>Tue, 06 Jun 2017 07:53:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet</guid>
      <description>

&lt;p&gt;This sample script performs OCR and imports resultant text to a cell using custom function on Spreadsheet.&lt;/p&gt;

&lt;p&gt;Drive API has a function to do OCR. It was used for this sample.&lt;/p&gt;

&lt;p&gt;I think that this method is one of various ideas.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;When OCR is performed and imported the result to a cell on spreadsheet, there are some limitations. &lt;code&gt;DriveApp&lt;/code&gt;, &lt;code&gt;UrlFetchApp&lt;/code&gt;, &lt;code&gt;setFormula()&lt;/code&gt; cannot be used for custom functions.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;In order to avoid these limitations, I used &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;. From previous research, it has been found that Web Apps can avoid various limitations. Also in the case of this situation, Web Apps could avoid the above limitations.&lt;/p&gt;

&lt;p&gt;To use this sample script, please deploy Web Apps as follows.&lt;/p&gt;

&lt;p&gt;On the Script Editor,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Publish

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;Deploy&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it deploys Web Apps, the approval required authorization can be done, simultaneously.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script :&lt;/h2&gt;

&lt;p&gt;Please copy and paste this script to a bound script of spreadsheet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var folderId = &amp;quot;### Folder ID ###&amp;quot;;

function OCR(filename) {
  var ac = SpreadsheetApp.getActiveSheet().getActiveCell();
  var q1 = &amp;quot;?file=&amp;quot; + filename;
  var q2 = &amp;quot;&amp;amp;row=&amp;quot; + ac.getRow();
  var q3 = &amp;quot;&amp;amp;col=&amp;quot; + ac.getColumn();
  var url = ScriptApp.getService().getUrl() + q1 + q2 + q3;
  UrlFetchApp.fetch(url);
}

function doGet(e) {
  var res = doOCR(e.parameters.file);
  SpreadsheetApp
  .getActiveSheet()
  .getRange(e.parameters.row, e.parameters.col, 1, 2)
  .setFormulas([[
    &#39;=T(&amp;quot;&#39; + e.parameters.file + &#39;&amp;quot;)&#39;,
    &#39;=T(&amp;quot;&#39; + res + &#39;&amp;quot;)&#39;
  ]]);
}

function doOCR(src) {
  var srcfile = DriveApp.getFilesByName(src).next();
  var fileid = Drive.Files.insert(
    {
      title: srcfile.getName(),
      mimeType: Drive.Files.get(srcfile.getId(), {fields: &amp;quot;mimeType&amp;quot;}).mimeType,
      parents:  [{&amp;quot;id&amp;quot;: srcfile.getParents().next().getId()}]
    },
    srcfile.getBlob(),
    {
      ocr: true,
      ocrLanguage: &#39;en&#39;
    }
  ).getId();
  var textdata = UrlFetchApp.fetch(
    &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; +
    fileid +
    &amp;quot;/export?mimeType=text/plain&amp;quot;,
    {
      headers : {Authorization: &amp;quot;Bearer &amp;quot; + ScriptApp.getOAuthToken()},
      muteHttpExceptions : true
    }
  ).getContentText();
  Drive.Files.remove(fileid);
  return textdata.replace(&amp;quot;________________&amp;quot;, &amp;quot;&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The text data obtained by OCR is included a text &lt;code&gt;&amp;quot;________________&amp;quot;&lt;/code&gt;. I don&amp;rsquo;t know the reason. But this can be remove using &lt;code&gt;replace()&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;flow-of-script&#34;&gt;Flow of Script :&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OCR()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input &lt;code&gt;=OCR(&amp;quot;sample.png&amp;quot;)&lt;/code&gt; in cell &lt;code&gt;A1&lt;/code&gt;. &lt;code&gt;&amp;quot;sample.png&amp;quot;&lt;/code&gt; is a source image file. Also PDF files can be used for a source file. &lt;code&gt;&amp;quot;sample.png&amp;quot;&lt;/code&gt; is as follows.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170606a_sample.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;fetch()&lt;/code&gt;, sends data of &lt;code&gt;&amp;quot;sample.png&amp;quot;&lt;/code&gt; and the inputted coordinate to &lt;code&gt;doGet()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;doGet()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;doGet()&lt;/code&gt;, get the data.&lt;/li&gt;
&lt;li&gt;The source file is converted to a Google Document using &lt;code&gt;Drive API&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The created Document is converted to text data using &lt;code&gt;Drive API&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Imports the text data by &lt;code&gt;setFormula()&lt;/code&gt;. &lt;code&gt;setFormula()&lt;/code&gt; is used for overwriting &lt;code&gt;=OCR(&amp;quot;sample.png&amp;quot;)&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;By inputting &lt;code&gt;=OCR(&amp;quot;sample.png&amp;quot;)&lt;/code&gt; in cell &lt;code&gt;A1&lt;/code&gt; as a custom function, following result can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170606b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When the custom function &lt;code&gt;OCR()&lt;/code&gt; is used, loading time is about 40 seconds. (I don&amp;rsquo;t know whether this occurs only my environment.)&lt;/li&gt;
&lt;li&gt;Permissions of the created image are &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/access&#34;&gt;ANYONE_WITH_LINK&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/permission&#34;&gt;VIEW&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;related-tips&#34;&gt;Related Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Chart to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Map to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Changing File Name and Reopening Renamed File by Sublime Text</title>
      <link>https://tanaikech.github.io/2017/06/05/changing-file-name-and-reopening-renamed-file-by-sublime-text</link>
      <pubDate>Mon, 05 Jun 2017 10:09:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/05/changing-file-name-and-reopening-renamed-file-by-sublime-text</guid>
      <description>&lt;p&gt;This sample is for changing file name and reopening the file with new name. The flow is as follows.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A file (sample.py) is opened.&lt;/li&gt;
&lt;li&gt;Rename the file from sample.py to newsample.py.&lt;/li&gt;
&lt;li&gt;The opened file is replace to the file with new name.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;os.rename(oldfilewithpath, newname)
view = self.view.window().find_open_file(oldfilewithpath)
if view:
    view.retarget(newname)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Retirving All files in Folder with Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/retirving-all-files-in-folder-with-spreadsheet</link>
      <pubDate>Sun, 04 Jun 2017 18:15:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/retirving-all-files-in-folder-with-spreadsheet</guid>
      <description>

&lt;p&gt;This sample retrieves all files in a folder with spreadsheet. When there are some folders in the folder with spreadsheet, this script can retrieve all files in all folders. This script has to be a container-bound script for spreadsheet.&lt;/p&gt;

&lt;h2 id=&#34;script&#34;&gt;Script :&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function getFileList(){
  var folderlist = (function(folder, folderSt, results){
    var ar = [];
    var folders = folder.getFolders();
    while(folders.hasNext()) ar.push(folders.next());
    folderSt += folder.getId() + &amp;quot;#_aabbccddee_#&amp;quot;;
    var array_folderSt = folderSt.split(&amp;quot;#_aabbccddee_#&amp;quot;);
    array_folderSt.pop()
    results.push(array_folderSt);
    ar.length == 0 &amp;amp;&amp;amp; (folderSt = &amp;quot;&amp;quot;);
    for (var i in ar) arguments.callee(ar[i], folderSt, results);
    return results;
  })(DriveApp.getFolderById(
    DriveApp.getFileById(
      SpreadsheetApp.getActiveSpreadsheet().getId()
    ).getParents().next().getId()
  ),&amp;quot;&amp;quot;,[]);

  var filelist = [];
  for (var i in folderlist){
    var folderid = folderlist[i][folderlist[i].length - 1];
    var temp = [];
    var folder = DriveApp.getFolderById(folderid);
    var files = folder.getFiles();
    var foldername = folder.getName();
    while(files.hasNext()){
      var file = files.next();
      temp.push([foldername, file.getName()]);
    }
    filelist.push(temp);
  }
  return Array.prototype.concat.apply([], filelist);
}

function main() {
  var data = getFileList();
  var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  ss.getRange(1,1,data.length,data[0].length).setValues(data);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170604b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Embedding a Map to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet</link>
      <pubDate>Sun, 04 Jun 2017 12:02:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet</guid>
      <description>

&lt;p&gt;This sample script embeds a map to a cell using custom function on Spreadsheet.&lt;/p&gt;

&lt;p&gt;I think that this method is one of various ideas.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;When the map is embeded to a cell on spreadsheet as an image, the function &lt;code&gt;=IMAGE()&lt;/code&gt; is suitable for this situation. However, &lt;code&gt;setFormula()&lt;/code&gt; for importing &lt;code&gt;=IMAGE()&lt;/code&gt; and &lt;code&gt;DriveApp.createFile()&lt;/code&gt; for creating images from maps also cannot be used for custom functions.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;In order to avoid these limitations, I used &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;. From previous research, it has been found that Web Apps can avoid various limitations. Also in the case of this situation, Web Apps could avoid the above limitations.&lt;/p&gt;

&lt;p&gt;To use this sample script, please deploy Web Apps as follows.&lt;/p&gt;

&lt;p&gt;On the Script Editor,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Publish

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;Deploy&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it deploys Web Apps, the approval required authorization can be done, simultaneously.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script :&lt;/h2&gt;

&lt;p&gt;Please copy and paste this script to a bound script of spreadsheet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var folderId = &amp;quot;### Folder ID ###&amp;quot;;

function embedMap(range, zoom) {
  var ac = SpreadsheetApp.getActiveSheet().getActiveCell();
  var q1 = &amp;quot;?address=&amp;quot; + range;
  var q2 = &amp;quot;&amp;amp;zoom=&amp;quot; + zoom;
  var q3 = &amp;quot;&amp;amp;row=&amp;quot; + ac.getRow();
  var q4 = &amp;quot;&amp;amp;col=&amp;quot; + ac.getColumn();
  UrlFetchApp.fetch(ScriptApp.getService().getUrl() + q1 + q2 + q3 + q4);
}

function doGet(e) {
  var data = Maps.newGeocoder().geocode(e.parameters.address).results[0];
  var file = DriveApp.getFolderById(folderId).createFile(
    Maps.newStaticMap()
    .setSize(800, 600)
    .setCenter(data.geometry.location.lat, data.geometry.location.lng)
    .setZoom(parseInt(e.parameters.zoom, 10))
    .setLanguage(&amp;quot;en&amp;quot;)
    .getBlob()
    .getAs(&#39;image/png&#39;)
    .setName(&amp;quot;map.png&amp;quot;)
  );
  file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  SpreadsheetApp
  .getActiveSheet()
  .getRange(e.parameters.row, e.parameters.col, 1, 2)
  .setFormulas([[
    &#39;=T(&amp;quot;&#39; + data.formatted_address + &#39;&amp;quot;)&#39;,
    &#39;=IMAGE(&amp;quot;&#39; + &amp;quot;http://drive.google.com/uc?id=&amp;quot; + file.getId() + &#39;&amp;quot;)&#39;
  ]]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flow-of-script&#34;&gt;Flow of Script :&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;embedMap()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input &lt;code&gt;=embedMap(&amp;quot;Tokyo station&amp;quot;, 16)&lt;/code&gt; in cell &lt;code&gt;B3&lt;/code&gt;. &lt;code&gt;&amp;quot;Tokyo station&amp;quot;&lt;/code&gt; and &lt;code&gt;16&lt;/code&gt; are a name of place and zoom, respectively.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;fetch()&lt;/code&gt;, sends data of &lt;code&gt;&amp;quot;Tokyo station&amp;quot;, 16&lt;/code&gt; and the inputted coordinate to &lt;code&gt;doGet()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;doGet()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;doGet()&lt;/code&gt;, get the data.&lt;/li&gt;
&lt;li&gt;Creates the map from the name of place.&lt;/li&gt;
&lt;li&gt;Saves a map as an image. (in this case, saves as PNG)&lt;/li&gt;
&lt;li&gt;Updates a permission of the image file to use for &lt;code&gt;=IMAGE()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Embeds the address and image using &lt;code&gt;=T()&lt;/code&gt; and &lt;code&gt;=IMAGE()&lt;/code&gt; which was imported by &lt;code&gt;setFormula()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;By inputting &lt;code&gt;=embedMap(&amp;quot;Tokyo station&amp;quot;, 16)&lt;/code&gt; in cell &lt;code&gt;B3&lt;/code&gt; as a custom function, following result can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170604a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When the custom function &lt;code&gt;embedMap()&lt;/code&gt; is used, loading time is about 40 seconds. (I don&amp;rsquo;t know whether this occurs only my environment.)&lt;/li&gt;
&lt;li&gt;Permissions of the created image are &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/access&#34;&gt;ANYONE_WITH_LINK&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/permission&#34;&gt;VIEW&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;embedMap()&lt;/code&gt; is overwritten by &lt;code&gt;=IMAGE()&lt;/code&gt;. So when the spreadsheet is reopened, the response of &lt;code&gt;=IMAGE()&lt;/code&gt; is much faster than that of &lt;code&gt;embedMap()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;related-tips&#34;&gt;Related Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/&#34;&gt;OCR using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Chart to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Changing from &#39;float64&#39; to &#39;int&#39; for Values did Unmarshal using &#39;map[string]interface{}&#39;</title>
      <link>https://tanaikech.github.io/2017/06/02/changing-from-float64-to-int-for-values-did-unmarshal-using-mapstringinterface</link>
      <pubDate>Fri, 02 Jun 2017 17:22:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/changing-from-float64-to-int-for-values-did-unmarshal-using-mapstringinterface</guid>
      <description>&lt;p&gt;This sample is for changing from &amp;ldquo;float64&amp;rdquo; to &amp;ldquo;int&amp;rdquo; for values did unmarshal using &lt;code&gt;map[string]interface{}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When it did unmarshal using map[string]interface{}, a number with &amp;ldquo;int&amp;rdquo; was changed to &amp;ldquo;float64&amp;rdquo;. And it shows an error as follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Error :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;panic: interface conversion: interface {} is float64, not int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Sample Script :&lt;/strong&gt;
It solves using following script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;encoding/json&amp;quot;
    &amp;quot;fmt&amp;quot;
    &amp;quot;reflect&amp;quot;
)

func main() {
    data := `{&amp;quot;key&amp;quot;: 10}`
    var i map[string]interface{}
    json.Unmarshal([]byte(data), &amp;amp;i)

    val1 := i[&amp;quot;key&amp;quot;]
    fmt.Printf(&amp;quot;%v, %v\n&amp;quot;, val1, reflect.TypeOf(val1)) // 10, float64

    i[&amp;quot;key&amp;quot;] = int(i[&amp;quot;key&amp;quot;].(float64))
    val2 := i[&amp;quot;key&amp;quot;]
    fmt.Printf(&amp;quot;%v, %v\n&amp;quot;, val2, reflect.TypeOf(val2)) // 10, int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://play.golang.org/p/kHroZ1rHVQ&#34;&gt;Go Playground&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replacing JSON Key by Golang</title>
      <link>https://tanaikech.github.io/2017/06/02/replacing-json-key-by-golang</link>
      <pubDate>Fri, 02 Jun 2017 11:56:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/replacing-json-key-by-golang</guid>
      <description>&lt;p&gt;This sample is for replacing JSON key by golang.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;encoding/json&amp;quot;
    &amp;quot;fmt&amp;quot;
)

func main() {
    json1 := `{&amp;quot;key1&amp;quot;: &amp;quot;value1&amp;quot;}`

    obj := map[string]interface{}{}
    json.Unmarshal([]byte(json1), &amp;amp;obj)

    fmt.Println(obj) // &amp;lt;-- map[key1:value1]

    obj[&amp;quot;key2&amp;quot;] = obj[&amp;quot;key1&amp;quot;]
    delete(obj, &amp;quot;key1&amp;quot;)

    fmt.Println(obj) // &amp;lt;-- map[key2:value1]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Benchmark: Splitting Command-Line Arguments by Golang</title>
      <link>https://tanaikech.github.io/2017/06/02/benchmark-splitting-command-line-arguments-by-golang</link>
      <pubDate>Fri, 02 Jun 2017 10:59:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/benchmark-splitting-command-line-arguments-by-golang</guid>
      <description>

&lt;p&gt;This sample script is for splitting command-line arguments by golang. There are 2 types. One is the regular expression is used. Another is that &lt;code&gt;Split()&lt;/code&gt; and &lt;code&gt;TrimSpace()&lt;/code&gt; are used.&lt;/p&gt;

&lt;p&gt;Here, each process speed was compared.&lt;/p&gt;

&lt;h2 id=&#34;script&#34;&gt;Script :&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;regexp&amp;quot;
    &amp;quot;strings&amp;quot;
    &amp;quot;testing&amp;quot;
)

func BenchmarkB1(b *testing.B) {
    str := &amp;quot;test1.txt, test2.txt&amp;quot;
    b.ResetTimer()
    for i := 0; i &amp;lt; b.N; i++ {
        ar := regexp.MustCompile(`\s*,\s*`).Split(str, -1)
        var result []string
        for _, x := range ar {
            result = append(result, x) // --&amp;gt; &#39;test.js&#39;, &#39;test2.py&#39;
        }
        _ = result
    }
}

func BenchmarkB2(b *testing.B) {
    str := &amp;quot;test1.txt, test2.txt&amp;quot;
    b.ResetTimer()
    for i := 0; i &amp;lt; b.N; i++ {
        ar := strings.Split(str, &amp;quot;,&amp;quot;)
        var result []string
        for _, x := range ar {
            result = append(result, strings.TrimSpace(x)) // --&amp;gt; &#39;test.js&#39;, &#39;test2.py&#39;
        }
        _ = result
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go test -bench .
BenchmarkB1-4             100000             13048 ns/op
BenchmarkB2-4            3000000               399 ns/op
PASS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just as expected, the regular expression was slow. And it&amp;rsquo;s much slower than that of &lt;code&gt;Split()&lt;/code&gt; and &lt;code&gt;TrimSpace()&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v121</title>
      <link>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121</link>
      <pubDate>Sun, 28 May 2017 14:20:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121</guid>
      <description>

&lt;h1 id=&#34;ggsrun-was-updated-to-v-1-2-1&#34;&gt;ggsrun was updated to v.1.2.1&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Configuration file (&lt;code&gt;ggsrun.cfg&lt;/code&gt;) became to be able to be read using the environment variable.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check this at &lt;a href=&#34;https://github.com/tanaikech/ggsrun&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>