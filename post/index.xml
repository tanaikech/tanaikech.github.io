<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on tanaike</title>
    <link>https://tanaikech.github.io/post/</link>
    <description>Recent content in Posts on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 12 Jul 2018 08:53:56 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding Query Parameters to URL using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/12/adding-query-parameters-to-url-using-google-apps-script/</link>
      <pubDate>Thu, 12 Jul 2018 08:53:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/12/adding-query-parameters-to-url-using-google-apps-script/</guid>
      <description>Gists
This is for adding the query parameters to the URL. This sample script is prepared by ES5. So this can be also used for Javascript. When I created an endpoint with some query parameters, I had used the scripts of various patterns every time. Today, I prepared this sample script to unify them. If this is also useful for you, I&amp;rsquo;m glad.
Sample script : String.prototype.addQuery = function(obj) { return this + Object.</description>
    </item>
    
    <item>
      <title>Benchmark: Conditional Branch using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/11/benchmark-conditional-branch-using-google-apps-script/</link>
      <pubDate>Wed, 11 Jul 2018 13:36:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/11/benchmark-conditional-branch-using-google-apps-script/</guid>
      <description>Gists

Benchmark: Conditional Branch using Google Apps Script  July 11, 2018
Kanshi Tanaike 
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2018/07/11/updated-gas-library---manifestsapp/</link>
      <pubDate>Wed, 11 Jul 2018 11:03:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/11/updated-gas-library---manifestsapp/</guid>
      <description>ManifestsApp was updated to v1.0.3.
 v1.0.3 (July 11, 2018)
 By Google&amp;rsquo;s update, &amp;ldquo;sheets&amp;rdquo; was added to manifests for installing the configuration of Macro. By this, this library was updated.  You can see the added methods (getSheets(), setSheets()) at Usage. If you set &amp;ldquo;sheets&amp;rdquo;, please put the value of &amp;ldquo;sheets&amp;rdquo; as the resource like below sample.  {&amp;quot;macros&amp;quot;: [{&amp;quot;menuName&amp;quot;: &amp;quot;QuickRowSum&amp;quot;, &amp;quot;functionName&amp;quot;: &amp;quot;calculateRowSum&amp;quot;}]} Don&amp;rsquo;t put {&amp;quot;sheets&amp;quot;: {&amp;quot;macros&amp;quot;: [{&amp;quot;menuName&amp;quot;: &amp;quot;QuickRowSum&amp;quot;, &amp;quot;functionName&amp;quot;: &amp;quot;calculateRowSum&amp;quot;}]}}     You can check this at https://github.</description>
    </item>
    
    <item>
      <title>Limitation of Images for Inserting to Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/10/limitation-of-images-for-inserting-to-spreadsheet-using-google-apps-script/</link>
      <pubDate>Tue, 10 Jul 2018 08:51:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/10/limitation-of-images-for-inserting-to-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Introduction Here I would like to introduce about the limitation of images for inserting to Spreadsheet using Google Apps Script (GAS). When you want to insert the images to Spreadsheet using GAS, insertImage() of class Sheet is usually used for this situation. At this time, an error sometimes occurs. This indicates that there is the limitation for inserting images to Spreadsheet. So I investigated the limitation.
As a result, it was found that the limitation depends on the image area (pixels^2) rather than the file size of it.</description>
    </item>
    
    <item>
      <title>Taking Advantage of Google Apps Script (Tanaike&#39;s list)</title>
      <link>https://tanaikech.github.io/2018/07/09/taking-advantage-of-google-apps-script-tanaikes-list/</link>
      <pubDate>Mon, 09 Jul 2018 09:30:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/09/taking-advantage-of-google-apps-script-tanaikes-list/</guid>
      <description>Here, CLI tools, libraries, Add-ons, Reports, Benchmarks and Sample Scripts for taking advantage of Google Apps Script which are publishing in my blog, Gists and GitHub are summarized. If these are useful for you, I&amp;rsquo;m glad.
You can check this at https://github.com/tanaikech/taking-advantage-of-google-apps-script.</description>
    </item>
    
    <item>
      <title>Retrieving Number of Lines of Google Document</title>
      <link>https://tanaikech.github.io/2018/07/09/retrieving-number-of-lines-of-google-document/</link>
      <pubDate>Mon, 09 Jul 2018 09:02:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/09/retrieving-number-of-lines-of-google-document/</guid>
      <description>Gists
There are no prepared methods for retrieving the number of lines in the Google Document. So I thought this workaround. If the end of each line can be detected, the number of lines can be retrieved. So I tried to add the end markers of each line using OCR.
At Google Documents, when a sentence is over the page width, the sentence automatically has the line break. But the line break has no \r\n or \n.</description>
    </item>
    
    <item>
      <title>Benchmark: Search for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/02/benchmark-search-for-array-processing-using-google-apps-script/</link>
      <pubDate>Mon, 02 Jul 2018 08:55:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/02/benchmark-search-for-array-processing-using-google-apps-script/</guid>
      <description>Gists

Benchmark: Search for Array Processing using Google Apps Script  July 2, 2018
Kanshi Tanaike 
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Resumable Conversion from CSV File with Large Size (&gt; 50 MB) to Several Spreadsheets by Splitting File</title>
      <link>https://tanaikech.github.io/2018/06/26/resumable-conversion-from-csv-file-with-large-size--50-mb-to-several-spreadsheets-by-splitting-file/</link>
      <pubDate>Tue, 26 Jun 2018 13:00:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/26/resumable-conversion-from-csv-file-with-large-size--50-mb-to-several-spreadsheets-by-splitting-file/</guid>
      <description>Gists
Overview This is a sample script which can achieve the resumable conversion from the large CSV-file to several spreadsheets by splitting the CSV file using Google Apps Script (GAS).
Description Is there a situation that you want to convert a CSV file with the large size (&amp;gt; 50 MB) to Spreadsheet? When such large CSV file is converted to Spreadsheet, you will experience the error. The reason is the size and/or also it may be due to the total cells (&amp;gt; 2,000,000 cells) of CSV file.</description>
    </item>
    
    <item>
      <title>Cryptopia API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/06/25/cryptopia-api-for-google-apps-script/</link>
      <pubDate>Mon, 25 Jun 2018 08:48:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/25/cryptopia-api-for-google-apps-script/</guid>
      <description>Gists
By the Google’s update at June 19, 2018, finally, Utilities.computeDigest(), Utilities.computeHmacSha256Signature() and Utilities.computeHmacSignature() got to be able to use the byte arrays. By this, using only native Google Apps Script, the result can be retrieved without using jsSHA. So Cryptopia API can be created using only Google Apps Script. If this is useful for you, I&amp;rsquo;m glad.
Sample script : When you use this, at first, please input the requiring values.</description>
    </item>
    
    <item>
      <title>About Updated Utilities.computeHmacSignature()</title>
      <link>https://tanaikech.github.io/2018/06/24/about-updated-utilities.computehmacsignature/</link>
      <pubDate>Sun, 24 Jun 2018 17:11:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/24/about-updated-utilities.computehmacsignature/</guid>
      <description>Gists
By the Google&amp;rsquo;s update at June 19, 2018, finally, Utilities.computeDigest(), Utilities.computeHmacSha256Signature() and Utilities.computeHmacSignature() got to be able to use the byte arrays. By this, using only native Google Apps Script, the result can be retrieved without using jsSHA. When I used the updated them, the response speed is much faster than that of jsSHA. It is considered that this may be optimized for Google Apps Script. As a sample, it shows 2 samples as follows.</description>
    </item>
    
    <item>
      <title>GAS Library - FilesApp</title>
      <link>https://tanaikech.github.io/2018/06/15/gas-library---filesapp/</link>
      <pubDate>Fri, 15 Jun 2018 10:32:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/15/gas-library---filesapp/</guid>
      <description>Overview FilesApp is a GAS library for retrieving file and folder list in Google Drive using Google Apps Script (GAS). Also this can create a tree from all files and folders in Google Drive.
Description When I create some applications using Google Drive, there are often the case which is required to retrieve the file list and folder list. I had prepared the script each time for each case so far.</description>
    </item>
    
    <item>
      <title>Retrieving a Key with Maximum Value from Object</title>
      <link>https://tanaikech.github.io/2018/06/15/retrieving-a-key-with-maximum-value-from-object/</link>
      <pubDate>Fri, 15 Jun 2018 08:22:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/15/retrieving-a-key-with-maximum-value-from-object/</guid>
      <description>Gists
This sample script is for retrieving a key with the maximum value from an object. This can be also used by Google Apps Script.
var obj = {&amp;quot;a&amp;quot;: 5, &amp;quot;b&amp;quot;: 4, &amp;quot;c&amp;quot;: 3, &amp;quot;d&amp;quot;: 2, &amp;quot;e&amp;quot;: 1}; var res = Object.keys(obj).reduce(function(a, c) { return obj[a] &amp;gt; obj[c] ? a : c; }); Logger.log(res); // &amp;gt;&amp;gt;&amp;gt; a  </description>
    </item>
    
    <item>
      <title>Retrieving Reformatted Scripts without Comments in a Project using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/28/retrieving-reformatted-scripts-without-comments-in-a-project-using-google-apps-script/</link>
      <pubDate>Mon, 28 May 2018 12:55:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/28/retrieving-reformatted-scripts-without-comments-in-a-project-using-google-apps-script/</guid>
      <description>Gists
Overview This is a sample script for easily retrieving the reformatted scripts without comments in a project using Google Apps Script (GAS).
Description When I create GAS script, if the format of script is not correct, the script editor lets me know about it. By this, I can find that the script editor and/or Google Drive checks the format of scripts. I had wished if I could use this function.</description>
    </item>
    
    <item>
      <title>Remove Third-party Apps with Account Access using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</link>
      <pubDate>Wed, 23 May 2018 15:51:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</guid>
      <description>Gists
Overview This is a method for removing Third-party Apps with Account Access using a script.
Demo Description When users create a script in a project and run the script, if the methods which are required to use scopes are included, users have to authorize to use the scopes using the browser. By authorizing it, users can use the script. The authorized projects can be seen at Third-party Apps with Account Access.</description>
    </item>
    
    <item>
      <title>Create Folder Tree of Google Drive using Node.js</title>
      <link>https://tanaikech.github.io/2018/05/20/create-folder-tree-of-google-drive-using-node.js/</link>
      <pubDate>Sun, 20 May 2018 13:40:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/20/create-folder-tree-of-google-drive-using-node.js/</guid>
      <description>Gists
This is a sample script for retrieving a folder tree using Node.js. In this sample, you can set the top of folder for the folder tree. In generally, the folder tree is created by retrieving folders from the top folder in order. For example, when Google Apps Script is used, the script becomes like this. But when Drive API is used for this situation, if there are a lot of folders in the top folder, a lot of APIs are required to be called.</description>
    </item>
    
    <item>
      <title>Resumable Upload for Web Apps using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/17/resumable-upload-for-web-apps-using-google-apps-script/</link>
      <pubDate>Thu, 17 May 2018 16:48:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/17/resumable-upload-for-web-apps-using-google-apps-script/</guid>
      <description>Overview This is a sample script for uploading files with large size (&amp;gt; 50 MB) at Web Apps using Google Apps Script (GAS). The resumable upload method is used for uploading files. This script can be also applied to the script using gapi of javascript.
Demo This is a demonstration of this script. As a demonstration, it uploads a file with the size of 100 MB to my Google Drive.</description>
    </item>
    
    <item>
      <title>Updated goodls to v102</title>
      <link>https://tanaikech.github.io/2018/05/11/updated-goodls-to-v102/</link>
      <pubDate>Fri, 11 May 2018 20:32:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/11/updated-goodls-to-v102/</guid>
      <description>goodls was updated to v.1.0.2  v1.0.2 (May 10, 2018)
 Files with large size has gotten to be able to be used.  In order to download files with large size (several gigabytes), files are saved by chunks.    The detail information and how to get this are https://github.com/tanaikech/goodls.</description>
    </item>
    
    <item>
      <title>Retrieve Difference Between 2 Dimensional Arrays using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/07/retrieve-difference-between-2-dimensional-arrays-using-google-apps-script/</link>
      <pubDate>Mon, 07 May 2018 09:41:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/07/retrieve-difference-between-2-dimensional-arrays-using-google-apps-script/</guid>
      <description>Gists
This sample script retrieves the difference elements between 2 dimensional arrays using Google Apps Script. In Google Apps Script, 2 dimensional arrays are often used at Google Docs and Google APIs. And from my recent report, it has already found that the process cost of filter() is the lowest in the other loop methods. So I use the script like this.
var ar1 = [[&amp;quot;a1&amp;quot;, &amp;quot;b1&amp;quot;, &amp;quot;c1&amp;quot;], [&amp;quot;a2&amp;quot;, &amp;quot;b2&amp;quot;, &amp;quot;c2&amp;quot;], [&amp;quot;a3&amp;quot;, &amp;quot;b3&amp;quot;, &amp;quot;c3&amp;quot;], [&amp;quot;a4&amp;quot;, &amp;quot;b4&amp;quot;, &amp;quot;c4&amp;quot;], [&amp;quot;a5&amp;quot;, &amp;quot;b5&amp;quot;, &amp;quot;c5&amp;quot;]]; var ar2 = [[&amp;quot;a2&amp;quot;, &amp;quot;b2&amp;quot;, &amp;quot;c2&amp;quot;], [&amp;quot;a5&amp;quot;, &amp;quot;b5&amp;quot;, &amp;quot;c5&amp;quot;], [&amp;quot;a1&amp;quot;, &amp;quot;b2&amp;quot;, &amp;quot;c3&amp;quot;]]; var res = ar1.</description>
    </item>
    
    <item>
      <title>GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2018/05/02/gas-library---batchrequest/</link>
      <pubDate>Wed, 02 May 2018 15:55:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/02/gas-library---batchrequest/</guid>
      <description>Overview This is a library for running Batch Requests using Google Apps Script (GAS).
Description When users use Google&amp;rsquo;s APIs, one quota is used for one API call. When the batch request is used, several APIs can be called by one quota, although there are some limitations in the batch request. For example, in GAS, Drive API can be used be DriveApp. In this case, the quota is not used for using Drive API.</description>
    </item>
    
    <item>
      <title>CLEAN method for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/27/clean-method-for-google-apps-script/</link>
      <pubDate>Fri, 27 Apr 2018 09:11:40 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/27/clean-method-for-google-apps-script/</guid>
      <description>Gists
This is a sample script which works the same action with the CLEAN method of VBA. The CLEAN method of VBA removes the characters of 0-31, 127, 129, 141, 143, 144, 157. Although I had looked for such method for Google Apps Script, I couldn&amp;rsquo;t find it. So I created this. If this is useful for you, I&amp;rsquo;m glad.
function cleanForGAS(str) { if (typeof str == &amp;quot;string&amp;quot;) { var escaped = escape(str.</description>
    </item>
    
    <item>
      <title>Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Thu, 26 Apr 2018 08:35:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>Overview This is a report to take advantage of Web Apps with Google Apps Script (GAS).
Description There is Web Apps as one of applications using Google Apps Script (GAS). I sometimes use this Web Apps. But I have only a little the information for the specification of Web Apps. So in order to take more advantage of Web Apps, I investigated and summarized about this. The aim of this report is to become one of the basic information for creating various applications using Web Apps with GAS.</description>
    </item>
    
    <item>
      <title>Retrieves All Named Ranges in Spreadsheet as a1Notation</title>
      <link>https://tanaikech.github.io/2018/04/25/retrieves-all-named-ranges-in-spreadsheet-as-a1notation/</link>
      <pubDate>Wed, 25 Apr 2018 11:34:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/25/retrieves-all-named-ranges-in-spreadsheet-as-a1notation/</guid>
      <description>Gists
This is a sample script for Google Apps Script (GAS). This script retrieves all named ranges in Spreadsheet. The names and range of the retrieved named ranges are output as the keys and the values of JSON object, respectively. The sample output is {&amp;quot;name1&amp;quot;: &amp;quot;Sheet1!A1:B2&amp;quot;, &amp;quot;name2&amp;quot;: &amp;quot;Sheet2!B1:C2&amp;quot;,,,}. The name of named range has to be only one in the spreadsheet. This was used.
Sheets.Spreadsheets.get() of Sheets API can retrieve all named ranges.</description>
    </item>
    
    <item>
      <title>GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2018/04/24/gas-library---runall/</link>
      <pubDate>Tue, 24 Apr 2018 08:45:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/24/gas-library---runall/</guid>
      <description>Overview This is a library for running the concurrent processing using only native Google Apps Script (GAS).
Description Have you ever thought about the concurrent processing using only native Google Apps Script (GAS)? So far, I had run the concurrent processing using golang, javascript and python. But the script cannot be used by the trigger event, because these are not native GAS. Recently, it was found that the fetchAll method added by the Google&amp;rsquo;s update at January 19, 2018 is worked by the asynchronous processing.</description>
    </item>
    
    <item>
      <title>Benchmark: fetchAll method in UrlFetch service for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/19/benchmark-fetchall-method-in-urlfetch-service-for-google-apps-script/</link>
      <pubDate>Thu, 19 Apr 2018 14:24:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/19/benchmark-fetchall-method-in-urlfetch-service-for-google-apps-script/</guid>
      <description>Gists
By Google&amp;rsquo;s update at January 19, 2018, fetchAll method was added to the UrlFetch service. When I saw the usage, I couldn&amp;rsquo;t find the detail information about the actual running state. So I investigated about it.
As the result, it was found that the fetchAll method is worked by the asynchronous processing. The returned data is reordered by the order of requests. By this, it was also found that if you want to retrieve the data from the several URL, the process cost of UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Benchmark: Loop for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/16/benchmark-loop-for-array-processing-using-google-apps-script/</link>
      <pubDate>Mon, 16 Apr 2018 08:27:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/16/benchmark-loop-for-array-processing-using-google-apps-script/</guid>
      <description>Gists

Benchmark: Loop for Array Processing using Google Apps Script  April 16, 2018
Kanshi Tanaike 
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Benchmark: Event Objects for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/14/benchmark-event-objects-for-google-apps-script/</link>
      <pubDate>Sat, 14 Apr 2018 14:45:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/14/benchmark-event-objects-for-google-apps-script/</guid>
      <description>Gists
Introduction There are event objects at Google Apps Script. Typically, users which use Spreadsheet often use onEdit(event). Here, I would like to introduce the process costs for the event objects using this onEdit(event).
When onEdit(event) is used for the spreadsheet, event of onEdit(event) has the following structure.
{ &amp;quot;authMode&amp;quot;: {}, &amp;quot;range&amp;quot;: { &amp;quot;columnStart&amp;quot;: 1, &amp;quot;rowStart&amp;quot;: 1, &amp;quot;rowEnd&amp;quot;: 1, &amp;quot;columnEnd&amp;quot;: 1 }, &amp;quot;source&amp;quot;: {}, &amp;quot;oldValue&amp;quot;: &amp;quot;old sample text&amp;quot;, &amp;quot;user&amp;quot;: { &amp;quot;nickname&amp;quot;: &amp;quot;sampleName&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;sample email&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;sample text&amp;quot; }  In this structure, for example, the range of active cell is &amp;quot;range&amp;quot;: {&amp;quot;columnStart&amp;quot;: 1, &amp;quot;rowStart&amp;quot;: 1, &amp;quot;rowEnd&amp;quot;: 1, &amp;quot;columnEnd&amp;quot;: 1 }.</description>
    </item>
    
    <item>
      <title>Unicode normalization using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/03/16/unicode-normalization-using-google-apps-script/</link>
      <pubDate>Fri, 16 Mar 2018 12:41:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/03/16/unicode-normalization-using-google-apps-script/</guid>
      <description>Overview This is a script for converting strings from NFD (Normalization Form Decomposition) to NFC (Normalization Form Composition) using Google Apps Script. Description Here, I would like to introduce a script for the unicode normalization using Google Apps Script. There are the characters with ゙ which is the voiced dot and the characters with ゚ which is the semi-voiced dot in Japanese language. When these are used for some applications,</description>
    </item>
    
    <item>
      <title>Remove ImportError of Module for Sublime Text</title>
      <link>https://tanaikech.github.io/2018/03/03/remove-importerror-of-module-for-sublime-text/</link>
      <pubDate>Sat, 03 Mar 2018 17:18:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/03/03/remove-importerror-of-module-for-sublime-text/</guid>
      <description>Gists
When I launched Sublime Text, I noticed that the error occurred. The error is as follows.
ImportError: No module named &#39;yaml&#39;  I confirmed that this error occurs when the plugin of Material Theme is read. And the error started to occur after Material Theme was updated, recently.
In this report, I would like to introduce the method for removing this error. The flow is as follows.
 Download a file including library for yaml (PyYAML) from https://pypi.</description>
    </item>
    
    <item>
      <title>Updated Add-on - RearrangeScripts to v211</title>
      <link>https://tanaikech.github.io/2018/03/02/updated-add-on---rearrangescripts-to-v211/</link>
      <pubDate>Fri, 02 Mar 2018 14:13:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/03/02/updated-add-on---rearrangescripts-to-v211/</guid>
      <description> RearrangeScripts was updated to v2.1.1  v2.1.1 (Match 2, 2018)
 Added a notification to turn on the switch for using Google Apps Script API.  This was reported to issuetracker. https://issuetracker.google.com/issues/74048155 Acknowledgements: Alan Wells   Add-on
 GitHub
  </description>
    </item>
    
    <item>
      <title>CLI Tool - gonetatmo</title>
      <link>https://tanaikech.github.io/2018/03/01/cli-tool---gonetatmo/</link>
      <pubDate>Thu, 01 Mar 2018 14:44:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/03/01/cli-tool---gonetatmo/</guid>
      <description>Overview This is a CLI tool to retrieve data from a personal weather station of Netatmo.
Description I have a personal weather station of Netatmo. I check the data of my local environment using it. In most case, I have used my browser to retrieve the data so far. About retrieving data using curl, I have created it before. Recently, I thought that I wanted to create this as a CLI too.</description>
    </item>
    
    <item>
      <title>Append Values by Inserting Rows using Google Sheets API</title>
      <link>https://tanaikech.github.io/2018/02/27/append-values-by-inserting-rows-using-google-sheets-api/</link>
      <pubDate>Tue, 27 Feb 2018 09:51:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/27/append-values-by-inserting-rows-using-google-sheets-api/</guid>
      <description>Gists
In the case appending values to cell by inserting rows, when sheets.spreadsheets.values.append is used, the values are appended to the next empty row of the last row. If you want to append values to between cells with values by inserting row, you can achieve it using sheets.spreadsheets.batchUpdate.
When you use this, please use your access token.
Endpoint : POST https://sheets.googleapis.com/v4/spreadsheets/### spreadsheet ID ###:batchUpdate  Request body : In this request body, it appends the data of &amp;ldquo;sample1, sample2, sample3&amp;rdquo; to &amp;ldquo;A1:A3&amp;rdquo; of the sheetId of &amp;ldquo;1234567890&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Transposing JSON Object using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/02/25/transposing-json-object-using-google-apps-script/</link>
      <pubDate>Sun, 25 Feb 2018 16:22:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/25/transposing-json-object-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for transposing JSON object using Google Apps Script.
Input data : [ {&amp;quot;key1&amp;quot;:&amp;quot;a1&amp;quot;,&amp;quot;key2&amp;quot;:&amp;quot;a2&amp;quot;,&amp;quot;key3&amp;quot;:&amp;quot;a3&amp;quot;,&amp;quot;key4&amp;quot;:&amp;quot;a4&amp;quot;,&amp;quot;key5&amp;quot;:&amp;quot;a5&amp;quot;}, {&amp;quot;key1&amp;quot;:&amp;quot;b1&amp;quot;,&amp;quot;key2&amp;quot;:&amp;quot;b2&amp;quot;,&amp;quot;key3&amp;quot;:&amp;quot;b3&amp;quot;,&amp;quot;key4&amp;quot;:&amp;quot;b4&amp;quot;,&amp;quot;key5&amp;quot;:&amp;quot;b5&amp;quot;}, {&amp;quot;key1&amp;quot;:&amp;quot;c1&amp;quot;,&amp;quot;key2&amp;quot;:&amp;quot;c2&amp;quot;,&amp;quot;key3&amp;quot;:&amp;quot;c3&amp;quot;,&amp;quot;key4&amp;quot;:&amp;quot;c4&amp;quot;,&amp;quot;key5&amp;quot;:&amp;quot;c5&amp;quot;}, {&amp;quot;key1&amp;quot;:&amp;quot;d1&amp;quot;,&amp;quot;key2&amp;quot;:&amp;quot;d2&amp;quot;,&amp;quot;key3&amp;quot;:&amp;quot;d3&amp;quot;,&amp;quot;key4&amp;quot;:&amp;quot;d4&amp;quot;,&amp;quot;key5&amp;quot;:&amp;quot;d5&amp;quot;}, {&amp;quot;key1&amp;quot;:&amp;quot;e1&amp;quot;,&amp;quot;key2&amp;quot;:&amp;quot;e2&amp;quot;,&amp;quot;key3&amp;quot;:&amp;quot;e3&amp;quot;,&amp;quot;key4&amp;quot;:&amp;quot;e4&amp;quot;,&amp;quot;key5&amp;quot;:&amp;quot;e5&amp;quot;} ]  Output data : { &amp;quot;key1&amp;quot;: [&amp;quot;a1&amp;quot;, &amp;quot;b1&amp;quot;, &amp;quot;c1&amp;quot;, &amp;quot;d1&amp;quot;, &amp;quot;e1&amp;quot;], &amp;quot;key2&amp;quot;: [&amp;quot;a2&amp;quot;, &amp;quot;b2&amp;quot;, &amp;quot;c2&amp;quot;, &amp;quot;d2&amp;quot;, &amp;quot;e2&amp;quot;], &amp;quot;key3&amp;quot;: [&amp;quot;a3&amp;quot;, &amp;quot;b3&amp;quot;, &amp;quot;c3&amp;quot;, &amp;quot;d3&amp;quot;, &amp;quot;e3&amp;quot;], &amp;quot;key4&amp;quot;: [&amp;quot;a4&amp;quot;, &amp;quot;b4&amp;quot;, &amp;quot;c4&amp;quot;, &amp;quot;d4&amp;quot;, &amp;quot;e4&amp;quot;], &amp;quot;key5&amp;quot;: [&amp;quot;a5&amp;quot;, &amp;quot;b5&amp;quot;, &amp;quot;c5&amp;quot;, &amp;quot;d5&amp;quot;, &amp;quot;e5&amp;quot;] }  Script : At first, keys have to be defined by yourself, because the order of json is not decided.</description>
    </item>
    
    <item>
      <title>Transposing Slice From (n x m) To (m x n) for golang</title>
      <link>https://tanaikech.github.io/2018/02/22/transposing-slice-from-n-x-m-to-m-x-n-for-golang/</link>
      <pubDate>Thu, 22 Feb 2018 11:25:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/22/transposing-slice-from-n-x-m-to-m-x-n-for-golang/</guid>
      <description>Gists
This is a sample script for transposing slice from (n x m) to (m x n) for golang.
Script : package main import &amp;quot;fmt&amp;quot; func transpose(slice [][]string) [][]string { xl := len(slice[0]) yl := len(slice) result := make([][]string, xl) for i := range result { result[i] = make([]string, yl) } for i := 0; i &amp;lt; xl; i++ { for j := 0; j &amp;lt; yl; j++ { result[i][j] = slice[j][i] } } return result } func main() { sample := [][]string{ []string{&amp;quot;a1&amp;quot;, &amp;quot;a2&amp;quot;, &amp;quot;a3&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a5&amp;quot;}, []string{&amp;quot;b1&amp;quot;, &amp;quot;b2&amp;quot;, &amp;quot;b3&amp;quot;, &amp;quot;b4&amp;quot;, &amp;quot;b5&amp;quot;}, []string{&amp;quot;c1&amp;quot;, &amp;quot;c2&amp;quot;, &amp;quot;c3&amp;quot;, &amp;quot;c4&amp;quot;, &amp;quot;c5&amp;quot;}, } ar := transpose(sample) fmt.</description>
    </item>
    
    <item>
      <title>Open Site with New Window using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/02/20/open-site-with-new-window-using-google-apps-script/</link>
      <pubDate>Tue, 20 Feb 2018 10:04:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/20/open-site-with-new-window-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for opening a site with new window using Google Apps Script. It is possible to open the site inside the opened dialog box using iframe. But in my situation, I had to open the site as new window. So I created this. As a sample application, it can think of like this. When the special keyword was inputted, open sites and files in Google Drive as a help window.</description>
    </item>
    
    <item>
      <title>Add-on - ShapeApp was featured</title>
      <link>https://tanaikech.github.io/2018/02/15/add-on---shapeapp-was-featured/</link>
      <pubDate>Thu, 15 Feb 2018 12:59:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/15/add-on---shapeapp-was-featured/</guid>
      <description>At February 15th, 2018, ShapeApp was featured as one of &amp;ldquo;4 useful add-ons launched last month&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Uploading Files From Local To Google Drive by Python without Quickstart</title>
      <link>https://tanaikech.github.io/2018/02/12/uploading-files-from-local-to-google-drive-by-python-without-quickstart/</link>
      <pubDate>Mon, 12 Feb 2018 11:39:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/12/uploading-files-from-local-to-google-drive-by-python-without-quickstart/</guid>
      <description>Gists
This is a sample script for uploading files from local PC to Google Drive using Python. In this sample, Quickstart is not used. So when you use this script, please retrieve access token.
Curl sample : curl -X POST \ -H &amp;quot;Authorization: Bearer ### access token ###&amp;quot; \ -F &amp;quot;metadata={name : &#39;sample.png&#39;, parents: [&#39;### folder ID ###&#39;]};type=application/json;charset=UTF-8&amp;quot; \ -F &amp;quot;file=@sample.png;type=image/png&amp;quot; \ &amp;quot;https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&amp;quot;  ]
Python sample : When above curl sample is converted to Python, it becomes as follows.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v141</title>
      <link>https://tanaikech.github.io/2018/02/09/updated-ggsrun-to-v141/</link>
      <pubDate>Fri, 09 Feb 2018 12:37:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/09/updated-ggsrun-to-v141/</guid>
      <description>ggsrun was updated to v.1.4.1  v1.4.1 (February 9, 2018)  For uploading, the resumable-upload method was added.  The resumable-upload method is automatically used by the size of file.  &amp;ldquo;multipart/form-data&amp;rdquo; can upload files with the size less than 5 MB. &amp;ldquo;resumable-upload&amp;rdquo; can upload files with the size more than 5 MB.  The chunk for resumable-upload is 100 MB as the default.  Users can also give this chunk size using an option.</description>
    </item>
    
    <item>
      <title>Copying Values from JSON to Struct using reflect Package</title>
      <link>https://tanaikech.github.io/2018/02/06/copying-values-from-json-to-struct-using-reflect-package/</link>
      <pubDate>Tue, 06 Feb 2018 10:22:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/06/copying-values-from-json-to-struct-using-reflect-package/</guid>
      <description>Gists
This is a sample script for copying values from JSON to a struct using reflect package.
Script : package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;reflect&amp;quot; ) type obj struct { Key1 string `json:&amp;quot;k1&amp;quot;` Key2 string `json:&amp;quot;k2&amp;quot;` Key3 int64 `json:&amp;quot;k3&amp;quot;` Key4 int `json:&amp;quot;k4&amp;quot;` Key5 bool `json:&amp;quot;k5&amp;quot;` } func main() { data := `{&amp;quot;k1&amp;quot;: &amp;quot;v1&amp;quot;, &amp;quot;k2&amp;quot;: &amp;quot;v2&amp;quot;, &amp;quot;k3&amp;quot;: 1234567890, &amp;quot;k4&amp;quot;: 456, &amp;quot;k5&amp;quot;: true}` d := map[string]interface{}{} json.Unmarshal([]byte(data), &amp;amp;d) obj := &amp;amp;obj{} s := reflect.</description>
    </item>
    
    <item>
      <title>Parsing JSON object (keys are number and changing every time)</title>
      <link>https://tanaikech.github.io/2018/02/05/parsing-json-object-keys-are-number-and-changing-every-time/</link>
      <pubDate>Mon, 05 Feb 2018 13:25:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/05/parsing-json-object-keys-are-number-and-changing-every-time/</guid>
      <description>Gists
This sample script is for parsing JSON object. In the object, the keys are number and changing every time.
Object : { &amp;quot;key1&amp;quot;: { &amp;quot;key2&amp;quot;: [ {&amp;quot;0&amp;quot;: [{&amp;quot;key3&amp;quot;: &amp;quot;value3a&amp;quot;}, {&amp;quot;key3&amp;quot;: &amp;quot;value3b&amp;quot;}]}, {&amp;quot;1&amp;quot;: [{&amp;quot;key3&amp;quot;: &amp;quot;value3c&amp;quot;}, {&amp;quot;key3&amp;quot;: &amp;quot;value3d&amp;quot;}]} ] } }  Script : package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;strconv&amp;quot; ) type key1 struct { Key1 key2 `json:&amp;quot;key1&amp;quot;` } type key2 struct { Key2 []interface{} `json:&amp;quot;key2&amp;quot;` } func main() { data := `{&amp;quot;key1&amp;quot;: {&amp;quot;key2&amp;quot;: [{&amp;quot;0&amp;quot;: [{&amp;quot;key3&amp;quot;: &amp;quot;value3a&amp;quot;}, {&amp;quot;key3&amp;quot;: &amp;quot;value3b&amp;quot;}]},{&amp;quot;1&amp;quot;: [{&amp;quot;key3&amp;quot;: &amp;quot;value3c&amp;quot;}, {&amp;quot;key3&amp;quot;: &amp;quot;value3d&amp;quot;}]}]}}` k1 := &amp;amp;key1{} json.</description>
    </item>
    
    <item>
      <title>Updated Add-on - RearrangeScripts to v210</title>
      <link>https://tanaikech.github.io/2018/02/03/updated-add-on---rearrangescripts-to-v210/</link>
      <pubDate>Sat, 03 Feb 2018 16:58:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/03/updated-add-on---rearrangescripts-to-v210/</guid>
      <description> v2.1.0 (February 3, 2018)
 From this version, it got to be able to use the projects of both standalone script type and container-bound script type.  Add-on
 GitHub
  </description>
    </item>
    
    <item>
      <title>Adding a Label to a Message using Message ID for Gmail</title>
      <link>https://tanaikech.github.io/2018/02/03/adding-a-label-to-a-message-using-message-id-for-gmail/</link>
      <pubDate>Sat, 03 Feb 2018 10:03:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/03/adding-a-label-to-a-message-using-message-id-for-gmail/</guid>
      <description>Gists
These are sample scripts for adding a label to a message using message ID for Gmail.
Sample 1 This sample adds a label to a thread using message ID. In this case, all messages in the thread have the label. Even if it adds a label to a message in the thread using addLabel(), all messages in the thread have the label, becauce addLabel can only be used for the thread.</description>
    </item>
    
    <item>
      <title>How to Retrieve Replied Emails for Gmail</title>
      <link>https://tanaikech.github.io/2018/02/01/how-to-retrieve-replied-emails-for-gmail/</link>
      <pubDate>Thu, 01 Feb 2018 10:46:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/01/how-to-retrieve-replied-emails-for-gmail/</guid>
      <description>Gists
Description : This sample script is for retrieving emails which replied for received mails. Because there are no samples which confirm whether the owner (me) replied to the received mails, I created this. The point is as follows.
 When there are more than 2 messages in a thread, there might be a possibility to have replied. For more than 2 messages in a thread  The email address of &amp;ldquo;from&amp;rdquo; for the 1st message is the sender&amp;rsquo;s address.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2018/01/29/updated-gas-library---manifestsapp/</link>
      <pubDate>Mon, 29 Jan 2018 13:05:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/29/updated-gas-library---manifestsapp/</guid>
      <description>ManifestsApp was updated to v1.0.2.
 v1.0.2 (January 29, 2018)
 ProjectApp2 is published, and got to be able to use both standalone script type and container-bound script type.  By this, this library also got to be able to be used for the both projects.  For this update, please enable Apps Script API.  Please check &amp;ldquo;How to install&amp;rdquo;.    You can check this at https://github.com/tanaikech/ManifestsApp.</description>
    </item>
    
    <item>
      <title>GAS Library - ProjectApp2</title>
      <link>https://tanaikech.github.io/2018/01/29/gas-library---projectapp2/</link>
      <pubDate>Mon, 29 Jan 2018 13:01:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/29/gas-library---projectapp2/</guid>
      <description>Overview This is a GAS project library for Google Apps Script (GAS). This library can be used for the projects of both standalone script type and container-bound script type.

Description There are Class SpreadsheetApp and Class DocumentApp for operating spreadsheet and document, respectively. But there is no Class for operating GAS project. If there is such Class ProjectApp, GAS project can be directly operated by GAS script. I thought that this will lead to new applications, and created ProjectApp.</description>
    </item>
    
    <item>
      <title>google.script.run and jQuery.Deferred</title>
      <link>https://tanaikech.github.io/2018/01/26/google.script.run-and-jquery.deferred/</link>
      <pubDate>Fri, 26 Jan 2018 09:55:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/26/google.script.run-and-jquery.deferred/</guid>
      <description>google.script.run doesn&amp;rsquo;t return values. So I tried this using jQuery.Deferred.
GAS : Code.gs function doGet() { return HtmlService.createHtmlOutputFromFile(&#39;index&#39;) .setSandboxMode(HtmlService.SandboxMode.IFRAME); } function getValues(e) { return e + &amp;quot;hoge&amp;quot;; }  HTML : index.html &amp;lt;script src=&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;button&amp;quot; value=&amp;quot;ok&amp;quot;&amp;gt; &amp;lt;div id=&amp;quot;result&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; $(() =&amp;gt; { $(&amp;quot;#button&amp;quot;).click(() =&amp;gt; { var str = &amp;quot;fuga&amp;quot;; googleScriptRun(str).then((res) =&amp;gt; { $(&#39;#result&#39;).text(res); }); }); }); function googleScriptRun(str) { var d = new $.Deferred(); google.script.run.withSuccessHandler((res) =&amp;gt; {d.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v140</title>
      <link>https://tanaikech.github.io/2018/01/25/updated-ggsrun-to-v140/</link>
      <pubDate>Thu, 25 Jan 2018 08:16:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/25/updated-ggsrun-to-v140/</guid>
      <description>ggsrun was updated to v.1.4.0  v1.4.0 (January 25, 2018)
Google Apps Script API was finally released. From this version, ggsrun uses this API. So ggsrun got to be able to use not only projects of standalone script type, but also projects of container-bound script type. I hope this updated ggsrun will be useful for you.
 To users which are using ggsrun with v1.3.4 and/or less. For retrieving, downloading, creating and updating projects, Apps Script API is used.</description>
    </item>
    
    <item>
      <title>Copying and Overwriting GAS Project</title>
      <link>https://tanaikech.github.io/2018/01/20/copying-and-overwriting-gas-project/</link>
      <pubDate>Sat, 20 Jan 2018 11:18:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/20/copying-and-overwriting-gas-project/</guid>
      <description>Gists
Pattern 1 This is a sample script for copying GAS project to a container-bound script of Google Docs (Spreadsheet, Document and Form (and Slides)). The project is created as a new project.
In order to use this sample, please do the following installation flow.
If you use this sample script, at first, please test using a new project and new Google Docs. By this, please understand the work of this script.</description>
    </item>
    
    <item>
      <title>Batching Requests for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/19/batching-requests-for-google-apps-script/</link>
      <pubDate>Fri, 19 Jan 2018 09:38:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/19/batching-requests-for-google-apps-script/</guid>
      <description>Gists
There is the bathing requests in the Google APIs. The bathing requests can use the several API calls as a single HTTP request. By using this, for example, users can modify filenames of a lot of files on Google Drive. But there are limitations for the number of API calls which can process in one batch request. For example, Drive API can be used the maximum of 100 calls in one batch request.</description>
    </item>
    
    <item>
      <title>Zaif API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/15/zaif-api-for-google-apps-script/</link>
      <pubDate>Mon, 15 Jan 2018 09:47:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/15/zaif-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is for using Zaif API by Google Apps Script.
The following go script is a sample at Zaif API.
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;time&amp;quot; &amp;quot;strconv&amp;quot; &amp;quot;crypto/hmac&amp;quot; &amp;quot;crypto/sha512&amp;quot; &amp;quot;io/ioutil&amp;quot; &amp;quot;net/http&amp;quot; &amp;quot;encoding/hex&amp;quot; &amp;quot;net/url&amp;quot; &amp;quot;strings&amp;quot; ) var key = &amp;quot;&amp;lt;your_key&amp;gt;&amp;quot; var secret = &amp;quot;&amp;lt;your_secret&amp;gt;&amp;quot; func main() { uri := &amp;quot;https://api.zaif.jp/tapi&amp;quot; values := url.Values{} values.Add(&amp;quot;method&amp;quot;, &amp;quot;get_info&amp;quot;) values.Add(&amp;quot;nonce&amp;quot;, strconv.FormatInt(time.Now().Unix(), 10)) encodedParams := values.Encode() req, _ := http.NewRequest(&amp;quot;POST&amp;quot;, uri, strings.NewReader(encodedParams)) hash := hmac.</description>
    </item>
    
    <item>
      <title>Bittrex API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/12/bittrex-api-for-google-apps-script/</link>
      <pubDate>Fri, 12 Jan 2018 10:23:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/12/bittrex-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is for using Bittrex API by Google Apps Script.
The following PHP script is a sample at bittrex.com.
$apikey=&#39;xxx&#39;; $apisecret=&#39;xxx&#39;; $nonce=time(); $uri=&#39;https://bittrex.com/api/v1.1/market/getopenorders?apikey=&#39;.$apikey.&#39;&amp;amp;nonce=&#39;.$nonce; $sign=hash_hmac(&#39;sha512&#39;,$uri,$apisecret); $ch = curl_init($uri); curl_setopt($ch, CURLOPT_HTTPHEADER, array(&#39;apisign:&#39;.$sign)); $execResult = curl_exec($ch); $obj = json_decode($execResult);  When this is converted to GAS, the script is as follows.
function main() { var apikey = &#39;#####&#39;; // Please input your key. var apisecret = &#39;#####&#39;; // Please input your secret.</description>
    </item>
    
    <item>
      <title>Binance API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/12/binance-api-for-google-apps-script/</link>
      <pubDate>Fri, 12 Jan 2018 07:18:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/12/binance-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is for using Binance API by Google Apps Script. This script encryptes &amp;ldquo;signature&amp;rdquo; like samples. In this script, &amp;ldquo;Example 1: As a query string&amp;rdquo; is used, and it retrieves &amp;ldquo;All orders (SIGNED)&amp;rdquo; by &amp;ldquo;GET&amp;rdquo;.
function main() { var key = &#39;#####&#39;; // Please input your key. var secret = &#39;#####&#39;; // Please input your secret. var api = &amp;quot;/api/v3/allOrders&amp;quot;; // Please input API Endpoint you want. var timestamp = Number(new Date().</description>
    </item>
    
    <item>
      <title>Updated goodls to v101</title>
      <link>https://tanaikech.github.io/2018/01/11/updated-goodls-to-v101/</link>
      <pubDate>Thu, 11 Jan 2018 12:13:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/11/updated-goodls-to-v101/</guid>
      <description>goodls was updated to v.1.0.1  v1.0.1 (January 11, 2018)
 In order to download several files, a datafile including URLs using Standard Input and Pipe have gotten to be able to be inputted.   The detail information and how to get this are https://github.com/tanaikech/goodls.</description>
    </item>
    
    <item>
      <title>CLI Tool - goodls</title>
      <link>https://tanaikech.github.io/2018/01/10/cli-tool---goodls/</link>
      <pubDate>Wed, 10 Jan 2018 14:37:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/10/cli-tool---goodls/</guid>
      <description>Overview This is a CLI tool to download shared files from Google Drive.
Description We have already known that the shared files on Google Drive can be downloaded without the authorization. But when the size of file becomes large (about 40MB), it requires a little ingenuity to download the file. It requires to access 2 times to Google Drive. At 1st access, it retrieves a cookie and a code for downloading.</description>
    </item>
    
    <item>
      <title>Send mails from Gmail using Nodemailer</title>
      <link>https://tanaikech.github.io/2018/01/08/send-mails-from-gmail-using-nodemailer/</link>
      <pubDate>Mon, 08 Jan 2018 10:35:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/08/send-mails-from-gmail-using-nodemailer/</guid>
      <description>Gists
This is a sample script for sending e-mails from gmail using Nodemailer. In order to use this, please retrieve the folloing parameters before run this script.
 gmail address client ID client Secret Refresh token  Please include https://mail.google.com/ in the scope.  Enable gmail API at API console. Install Nodemailer  const nodemailer = require(&#39;nodemailer&#39;); var auth = { type: &#39;oauth2&#39;, user: &#39;### your gmail address ###&#39;, clientId: &#39;### client ID ###&#39;, clientSecret: &#39;### client secret ###&#39;, refreshToken: &#39;### refresh token ###&#39;, }; var mailOptions = { from: &#39;#####&#39;, to: &#39;#####&#39;, subject: &#39;sample subject&#39;, text: &#39;sample text&#39;, html: &#39;&amp;lt;b&amp;gt;sample html&amp;lt;/b&amp;gt;&#39;, }; var transporter = nodemailer.</description>
    </item>
    
    <item>
      <title>Add-on - ShapeApp</title>
      <link>https://tanaikech.github.io/2018/01/06/add-on---shapeapp/</link>
      <pubDate>Sat, 06 Jan 2018 16:24:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/06/add-on---shapeapp/</guid>
      <description>ShapeApp for Google Slides was published as an add-on application When you use Google Slides, have you ever thought about creating and updating shapes on Slides by inputting parameters, and arranging selected shapes? I have thought about them. Recently, since Class SlidesApp was added to GAS, it came to be able to easily to create various applications for Slides. So I created this. This application is add-on application which was made of GAS.</description>
    </item>
    
    <item>
      <title>Which of Drive API v2 or v3 is used for DriveApp.searchFiles()</title>
      <link>https://tanaikech.github.io/2018/01/05/which-of-drive-api-v2-or-v3-is-used-for-driveapp.searchfiles/</link>
      <pubDate>Fri, 05 Jan 2018 16:48:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/05/which-of-drive-api-v2-or-v3-is-used-for-driveapp.searchfiles/</guid>
      <description>Gists
Experiment It has investigated the differences between the documents of &amp;ldquo;Search for Files&amp;rdquo; for v2 and v3. The following table shows the comparison of v2 and v3 for &amp;ldquo;Valid fields for files.list&amp;rdquo;. The column of DriveApp.searchFiles() means whether the query can be used for DriveApp.searchFiles().
   v2 v3 Difference DriveApp.searchFiles()     title name different v2: succeed, v3: fail   fullText fullText same    mimeType mimeType same    modifiedDate modifiedTime same    lastViewedByMeDate viewedByMeTime different v2: succeed, v3: fail   trashed trashed same    starred starred same    parents parents same    owners owners same    writers writers same    readers readers same    sharedWithMe sharedWithMe same    properties properties same    properties with visibility=&amp;lsquo;PRIVATE&amp;rsquo; appProperties different v2: succeed, v3: fail   visibility visibility same     Result As the result, it is considered that DriveApp.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v134</title>
      <link>https://tanaikech.github.io/2018/01/02/updated-ggsrun-to-v134/</link>
      <pubDate>Tue, 02 Jan 2018 14:32:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/02/updated-ggsrun-to-v134/</guid>
      <description>ggsrun was updated to v.1.3.4  v1.3.4 (January 2, 2018)
 Added new option for downloading &amp;lsquo;bound-scripts&amp;rsquo; of Google Sheets, Docs, or Forms file.  When the bound-scripts are downloaded, the project name cannot be retrieved because Drive API cannot be used for the bound-scripts. So when the bound-scripts are downloaded, the project ID had been used previously. Such filename is not easily to be seen. By this additional option, users can give the filename when it downloads the bound-scripts.</description>
    </item>
    
    <item>
      <title>IssueTracker: Bug for scopes of Slides</title>
      <link>https://tanaikech.github.io/2017/12/31/issuetracker-bug-for-scopes-of-slides/</link>
      <pubDate>Sun, 31 Dec 2017 17:11:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/31/issuetracker-bug-for-scopes-of-slides/</guid>
      <description>I have reported because I found a bug for scopes of Slides. The detail is the following URL.
https://issuetracker.google.com/issues/71448583</description>
    </item>
    
    <item>
      <title>Bitfinex API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/12/31/bitfinex-api-for-google-apps-script/</link>
      <pubDate>Sun, 31 Dec 2017 10:47:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/31/bitfinex-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is converted this sample script (javascript) to Google Apps Script. The point for converting is signature as shown in the following sample script.
 At Bitfinex API, after &amp;quot;/api/&amp;quot; + apiPath + nonce + rawBody is encrypted using HMAC SHA-384, the data of byte array is converted to HEX.  In Google Apps Script, there is no the method for this. The data which was encrypted by Utilities.</description>
    </item>
    
    <item>
      <title>Splitting String by N Characters for Batch-file</title>
      <link>https://tanaikech.github.io/2017/12/30/splitting-string-by-n-characters-for-batch-file/</link>
      <pubDate>Sat, 30 Dec 2017 16:20:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/30/splitting-string-by-n-characters-for-batch-file/</guid>
      <description>Gists
This sample script is for splitting string by N characters for batch-file. In this sample, after it retrieves N characters from the first character of STR, the N characters are removed from STR. This is repeated until the end of STR.
Sample script : @ECHO OFF SETLOCAL ENABLEDELAYEDEXPANSION SET &amp;quot;STR=ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;quot; REM Split STR by N characters SET &amp;quot;N=2&amp;quot; :LOOP SET &amp;quot;RES=%RES%!STR:~0,%N%! &amp;quot; SET &amp;quot;STR=!STR:~%N%!&amp;quot; IF DEFINED STR GOTO LOOP ECHO &amp;quot;%RES:~0,-1%&amp;quot;  Result :  N=2  &amp;quot;AB CD EF GH IJ KL MN OP QR ST UV WX YZ&amp;quot;   N=5  &amp;quot;ABCDE FGHIJ KLMNO PQRST UVWXY Z&amp;quot;  Reference :  https://stackoverflow.</description>
    </item>
    
    <item>
      <title>Updated Add-on - RearrangeScripts to v201</title>
      <link>https://tanaikech.github.io/2017/12/28/updated-add-on---rearrangescripts-to-v201/</link>
      <pubDate>Thu, 28 Dec 2017 08:14:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/28/updated-add-on---rearrangescripts-to-v201/</guid>
      <description>RearrangeScripts was updated. Added &amp;ldquo;About&amp;rdquo; to the menu of add-on. By this, users can see the help document easily.
 Add-on GitHub  </description>
    </item>
    
    <item>
      <title>Automatic Recalculation of Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/12/23/automatic-recalculation-of-custom-function-on-spreadsheet/</link>
      <pubDate>Sat, 23 Dec 2017 09:59:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/23/automatic-recalculation-of-custom-function-on-spreadsheet/</guid>
      <description>Gists
In this report, I would like to introduce a workaround for automatically recalculating custom functions on Spreadsheet.
1. Situation The sample situation is below. This is a sample situation for this document.
 There are 3 sheets with &amp;ldquo;sheet1&amp;rdquo;, &amp;ldquo;sheet2&amp;rdquo; and &amp;ldquo;sheet3&amp;rdquo; of sheet name in a Spreadsheet. Calculate the summation of values of &amp;ldquo;A1&amp;rdquo; of each sheet using a custom function. Sample script of the custom function is as follows.</description>
    </item>
    
    <item>
      <title>Add-on - RearrangeScripts</title>
      <link>https://tanaikech.github.io/2017/12/20/add-on---rearrangescripts/</link>
      <pubDate>Wed, 20 Dec 2017 10:28:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/20/add-on---rearrangescripts/</guid>
      <description> RearrangeScripts was published as an add-on application Recently, I have reported RearrangeScripts for rearranging scripts in a GAS project. At that time, I got messages and mails from many developers. They said that you should publish this as an add-on. So, this was released. Now you can search &amp;ldquo;RearrangeScripts&amp;rdquo; as an add-on for Spreadsheet. If this is helpful for you, I&amp;rsquo;m happy.
 Add-on GitHub  Demo </description>
    </item>
    
    <item>
      <title>Decoding Gmail Body with Japanese Language using Python</title>
      <link>https://tanaikech.github.io/2017/12/18/decoding-gmail-body-with-japanese-language-using-python/</link>
      <pubDate>Mon, 18 Dec 2017 08:22:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/18/decoding-gmail-body-with-japanese-language-using-python/</guid>
      <description>Gist
This is a sample script for decoding Gmail body with Japanese language using Python.
msg = service.users().messages().get(userId=&#39;me&#39;, id=id).execute() parts = msg[&#39;payload&#39;][&#39;parts&#39;] for e in parts: msg = base64.urlsafe_b64decode(e[&#39;body&#39;][&#39;data&#39;]).decode(&#39;utf-8&#39;).encode(&#39;cp932&#39;, &amp;quot;ignore&amp;quot;).decode(&#39;cp932&#39;) print(msg)  </description>
    </item>
    
    <item>
      <title>Difference Between Given Values and Retrieved Values for Shapes on Google Slides</title>
      <link>https://tanaikech.github.io/2017/12/15/difference-between-given-values-and-retrieved-values-for-shapes-on-google-slides/</link>
      <pubDate>Fri, 15 Dec 2017 16:56:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/15/difference-between-given-values-and-retrieved-values-for-shapes-on-google-slides/</guid>
      <description>Gists
This is a document for explaining the difference between given values and retrieved values for shapes on Google Slides. When a shape is created to a slide using Slides API, most users give the size of height and width as pt. When the size is retrieved from the created shape as pt, the size is often difference from the given size.
For example, when a square shape is created by giving the height and width of 100 pt, the size which is retrieved from the created square becomes 99.</description>
    </item>
    
    <item>
      <title>Retrieving ClientId using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/12/08/retrieving-clientid-using-google-apps-script/</link>
      <pubDate>Fri, 08 Dec 2017 09:10:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/08/retrieving-clientid-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving clientId using Google Apps Script.
var accessToken = ScriptApp.getOAuthToken(); var url = &amp;quot;https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=&amp;quot; + accessToken; var params = { method: &amp;quot;post&amp;quot;, headers: {&amp;quot;Authorization&amp;quot;: &amp;quot;Bearer &amp;quot; + accessToken} }; var res = UrlFetchApp.fetch(url, params).getContentText(); var clientId = JSON.parse(res).azp; Logger.log(clientId)  </description>
    </item>
    
    <item>
      <title>Downloading File Using Button of Dialog Box on Google Docs</title>
      <link>https://tanaikech.github.io/2017/12/07/downloading-file-using-button-of-dialog-box-on-google-docs/</link>
      <pubDate>Thu, 07 Dec 2017 08:43:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/07/downloading-file-using-button-of-dialog-box-on-google-docs/</guid>
      <description>Gists
This is a sample script for downloading a file using a button of dialog box on Google Docs (Spreadsheet, Document and Slides).
Please use this sample script at script editor on Google Docs (Spreadsheet, Document and Slides). And please set file ID in the script.
FLow : The flow of this sample script is as follows.
 Run dialog().  Open a dialog.  When users click a download button, retrieve file ID at GAS side.</description>
    </item>
    
    <item>
      <title>Rearranging Files in GAS Project (Restricted)</title>
      <link>https://tanaikech.github.io/2017/12/05/rearranging-files-in-gas-project-restricted/</link>
      <pubDate>Tue, 05 Dec 2017 15:13:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/05/rearranging-files-in-gas-project-restricted/</guid>
      <description>Gists
Introduction Recently, I have introduced a GAS library and a CLI tool for rearranging files in GAS project. Those are RearrangeScripts and ggsrun. Because today, I found a new way for rearranging files, I would like to introduce it although there is a restriction.
By the recent Google-update, users become able to create folders in GAS project. The new way uses this. At first, please see the demonstration GIF animation.</description>
    </item>
    
    <item>
      <title>Retrieving Instance of User-Interface Environment</title>
      <link>https://tanaikech.github.io/2017/12/04/retrieving-instance-of-user-interface-environment/</link>
      <pubDate>Mon, 04 Dec 2017 14:11:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/04/retrieving-instance-of-user-interface-environment/</guid>
      <description>Gists
This sample script is for retrieving an instance of user-interface environment for Spreadsheet, Document and Slides. When I create applications which use user interface (for example, sidebar, dialog and so on), the user interface can be used for Spreadsheet, Document and Slides. If the application doesn&amp;rsquo;t use the methods depend on Spreadsheet, Document and Slides, this script can give 3 choices to users.
function getUi() { var ui; try { ui = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Mixing 2 Array Objects Included Dictionary Object by Javascript</title>
      <link>https://tanaikech.github.io/2017/12/03/mixing-2-array-objects-included-dictionary-object-by-javascript/</link>
      <pubDate>Sun, 03 Dec 2017 15:45:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/03/mixing-2-array-objects-included-dictionary-object-by-javascript/</guid>
      <description>Gists
This is a sample script for combining and mixing 2 objects. Each object is an array which included a dictionary type. When the key of the dictionary object is the same, the values are mixed.
This can be also used for Google Apps Script.
Input var obj1 = [ {&amp;quot;key1&amp;quot;: [&amp;quot;value1a1&amp;quot;, &amp;quot;value1a2&amp;quot;]}, {&amp;quot;key1&amp;quot;: [&amp;quot;value1aa1&amp;quot;, &amp;quot;value1aa2&amp;quot;]}, {&amp;quot;key2&amp;quot;: [&amp;quot;value2a1&amp;quot;, &amp;quot;value2a2&amp;quot;]}, {&amp;quot;key3&amp;quot;: [&amp;quot;value3a1&amp;quot;, &amp;quot;value3a2&amp;quot;]}, ]; var obj2 = [ {&amp;quot;key1&amp;quot;: [&amp;quot;value1b1&amp;quot;, &amp;quot;value1b2&amp;quot;]}, {&amp;quot;key3&amp;quot;: [&amp;quot;value3b1&amp;quot;, &amp;quot;value3b2&amp;quot;]}, {&amp;quot;key3&amp;quot;: [&amp;quot;value3bb1&amp;quot;, &amp;quot;value3bb2&amp;quot;]}, {&amp;quot;key4&amp;quot;: [&amp;quot;value4b1&amp;quot;, &amp;quot;value4b2&amp;quot;]}, ];  Output [ {&amp;quot;key1&amp;quot;: [&amp;quot;value1a1&amp;quot;, &amp;quot;value1a2&amp;quot;, &amp;quot;value1b1&amp;quot;, &amp;quot;value1b2&amp;quot;, &amp;quot;value1aa1&amp;quot;, &amp;quot;value1aa2&amp;quot;]}, {&amp;quot;key2&amp;quot;: [&amp;quot;value2a1&amp;quot;, &amp;quot;value2a2&amp;quot;]}, {&amp;quot;key3&amp;quot;: [&amp;quot;value3a1&amp;quot;, &amp;quot;value3a2&amp;quot;, &amp;quot;value3b1&amp;quot;, &amp;quot;value3b2&amp;quot;, &amp;quot;value3bb1&amp;quot;, &amp;quot;value3bb2&amp;quot;]}, {&amp;quot;key4&amp;quot;: [&amp;quot;value4b1&amp;quot;, &amp;quot;value4b2&amp;quot;]} ]  Sample script : Javascript : function mixture(obj1, obj2) { Array.</description>
    </item>
    
    <item>
      <title>Adding Object to Object by Javascript</title>
      <link>https://tanaikech.github.io/2017/12/01/adding-object-to-object-by-javascript/</link>
      <pubDate>Fri, 01 Dec 2017 12:12:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/01/adding-object-to-object-by-javascript/</guid>
      <description> Gists
This sample script is for adding object to object by javascript.
Script : var obj = { key1: &amp;quot;value1&amp;quot;, key2: &amp;quot;value2&amp;quot;, key3: &amp;quot;value3&amp;quot; }; var obj1 = { key4: &amp;quot;value4&amp;quot;, key5: &amp;quot;value5&amp;quot;, key6: &amp;quot;value6&amp;quot; }; Object.assign(obj, obj1); console.log(obj);  Result : { key1: &#39;value1&#39;, key2: &#39;value2&#39;, key3: &#39;value3&#39;, key4: &#39;value4&#39;, key5: &#39;value5&#39;, key6: &#39;value6&#39; }  jsfiddle demo
Reference :  Object.assign()  </description>
    </item>
    
    <item>
      <title>Taking Advantage of Manifests by GAS Library</title>
      <link>https://tanaikech.github.io/2017/11/23/taking-advantage-of-manifests-by-gas-library/</link>
      <pubDate>Thu, 23 Nov 2017 20:21:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/23/taking-advantage-of-manifests-by-gas-library/</guid>
      <description>Gists
Introduction By recent Google update (Google update at October 24, 2017), various new winds to GAS developers were blown. There is &amp;ldquo;Manifests&amp;rdquo; as one of the new winds. &amp;ldquo;Manifests&amp;rdquo; makes us manage the project using JSON. Especially, the special scopes which have to use OAuth2 process can be used by only setting them to the Manifests. I think that this is the largest modification. However, when scopes are added to a project using Manifests, users who use the project can use only added scopes.</description>
    </item>
    
    <item>
      <title>Retrieving Size of Tables in Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/11/21/retrieving-size-of-tables-in-google-slides-using-google-apps-script/</link>
      <pubDate>Tue, 21 Nov 2017 11:24:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/21/retrieving-size-of-tables-in-google-slides-using-google-apps-script/</guid>
      <description>Gists
This sample script is for retrieving the size (width and height) of a table in Google Slides using Google Apps Script.
There are no methods for directly retrieving the table size using SlidesApp yet. So I thought of a workaround using Slides API.
 When the slide information is retrieved using Slides.Presentations.Pages.get() of Slides API, the information of tables is also included. In the information, the height and width of table are also included.</description>
    </item>
    
    <item>
      <title>SlideApp for Google Slides</title>
      <link>https://tanaikech.github.io/2017/11/13/slideapp-for-google-slides/</link>
      <pubDate>Mon, 13 Nov 2017 14:17:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/13/slideapp-for-google-slides/</guid>
      <description>Gists
By recent Google updated, Class SlideApp is added to Google Slides. SlideApp will be bring a lot of applications. Here, I would like to introduce 2 samples.
1. Sidebar function showSidebar() { var html = HtmlService .createHtmlOutput(&#39;Hello, world! &amp;lt;input type=&amp;quot;button&amp;quot; value=&amp;quot;Close&amp;quot; onclick=&amp;quot;google.script.host.close()&amp;quot; /&amp;gt;&#39;) .setTitle(&#39;My custom sidebar&#39;) .setWidth(300); SlidesApp.getUi().showSidebar(html); }  2. Copy slides in existing Slide to a new Slide This sample script create a new Slide with slides you want to copy.</description>
    </item>
    
    <item>
      <title>GAS Library - RearrangeScripts</title>
      <link>https://tanaikech.github.io/2017/11/13/gas-library---rearrangescripts/</link>
      <pubDate>Mon, 13 Nov 2017 09:30:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/13/gas-library---rearrangescripts/</guid>
      <description>Overview This is a GAS application for rearranging Google Apps Scripts (GAS) in a project which can be seen at the script editor.
Description Have you ever thought about rearranging Google Apps Scripts in a project which can be seen at the script editor? I also have thought about it. Finally, I could find the workaround to do it. And recently, I have given this function to ggsrun which is a CLI tool.</description>
    </item>
    
    <item>
      <title>GAS Library - ZipFolder</title>
      <link>https://tanaikech.github.io/2017/11/12/gas-library---zipfolder/</link>
      <pubDate>Sun, 12 Nov 2017 15:52:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/12/gas-library---zipfolder/</guid>
      <description>Overview This is a library for zipping a folder using Google Apps Scripts.
Description When users manually download a folder on Google Drive, users can download all files in the folder as a zip file using the web interface. There are zip tools in Class Utilities of Google Apps Script. However, the zip tools cannot create a zip file from a folder. And it cannot retrieve all files included any folders in a folder.</description>
    </item>
    
    <item>
      <title>GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2017/11/09/gas-library---manifestsapp/</link>
      <pubDate>Thu, 09 Nov 2017 10:47:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/09/gas-library---manifestsapp/</guid>
      <description>Overview This is a Manifests library for Google Apps Scripts.
Description By recent update of Google, Manifests was added to Google Apps Script Project. At the moment I saw the detail, I thought that this Manifests will blow a new wind for a lot of GAS developers. So I created this.
This library makes users easily access Manifests using Google Apps Script. If this was useful for you, I&amp;rsquo;m glad.</description>
    </item>
    
    <item>
      <title>GAS Library - ProjectApp</title>
      <link>https://tanaikech.github.io/2017/11/08/gas-library---projectapp/</link>
      <pubDate>Wed, 08 Nov 2017 11:20:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/08/gas-library---projectapp/</guid>
      <description>Overview This is a GAS project library for Google Apps Script (GAS).

Description There are Class SpreadsheetApp and Class DocumentApp for operating spreadsheet and document, respectively. But there is no Class for operating GAS project. If there is the Class ProjectApp, GAS project can be directly operated by GAS script. I thought that this will lead to new applications, and created ProjectApp.
On the other hand, as a CLI tool for operating GAS project, there has already been ggsrun.</description>
    </item>
    
    <item>
      <title>Uploading Local Files to Google Drive without Authorization using HTML Form</title>
      <link>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</link>
      <pubDate>Mon, 06 Nov 2017 08:54:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</guid>
      <description>Gists
This is a sample script for uploading local file to Google Drive without the authorization using HTML form. A selected file in your local PC using HTML form is uploaded to Google Drive and saved to Google Drive.
When you use this, at first, please deploy Web Apps. The script is doPost() of following scripts.
Script : Google Apps Script function doPost(e) { var data = Utilities.base64Decode(e.parameters.data); var blob = Utilities.</description>
    </item>
    
    <item>
      <title>Create New Project with Original Manifests</title>
      <link>https://tanaikech.github.io/2017/10/31/create-new-project-with-original-manifests/</link>
      <pubDate>Tue, 31 Oct 2017 16:56:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/31/create-new-project-with-original-manifests/</guid>
      <description>It was found that you can also create new project with your original Manifests using ggsrun. By using this, for example, when you created new project, the project can have libraries, Advanced Google Services and so on at the initial stage. I think that this can be used as a template for Project.
$ ggsrun u -pn [Project name] -f appsscript.json  https://github.com/tanaikech/ggsrun/blob/master/help/README.md#ModifyManifests
You can check this and download ggsrun at https://github.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v133</title>
      <link>https://tanaikech.github.io/2017/10/30/updated-ggsrun-to-v133/</link>
      <pubDate>Mon, 30 Oct 2017 14:00:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/30/updated-ggsrun-to-v133/</guid>
      <description>ggsrun was updated to v.1.3.3  v1.3.3 (October 30, 2017)
 At October 24, 2017, &amp;ldquo;Manifests&amp;rdquo; which is new function for controlling the properties of Google Apps Script was added (GAS). You can see the detail of &amp;ldquo;Manifests&amp;rdquo; here. In order to modify the manifests from local PC, I added this new function to ggsrun. By using this, you can edit the manifests and update it from your local PC.</description>
    </item>
    
    <item>
      <title>Measuring Execution Time of Built-In Functions for Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/10/27/measuring-execution-time-of-built-in-functions-for-google-spreadsheet/</link>
      <pubDate>Fri, 27 Oct 2017 10:06:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/27/measuring-execution-time-of-built-in-functions-for-google-spreadsheet/</guid>
      <description>Gists
This sample script is for measuring the execution time of built-in functions for Google Spreadsheet. Unfortunately, there are not measurement tools for retrieving the execution time of built-in functions. So I thought of about a workaround.
Flow :  Import a value to a cell. The value is anything good, because this is used as a trigger. Please do this by yourself.  Custom functions cannot use setValue(). So I used onEdit().</description>
    </item>
    
    <item>
      <title>Straightening Elements in 2 Dimensional Array using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/10/26/straightening-elements-in-2-dimensional-array-using-google-apps-script/</link>
      <pubDate>Thu, 26 Oct 2017 16:51:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/26/straightening-elements-in-2-dimensional-array-using-google-apps-script/</guid>
      <description>Gists
This sample script is for straightening elements in 2 dimensional array using Google Apps Script (GAS). When applications using Spreadsheet are developed by GAS, it usually uses 2 dimensional array by setValues(). And the lengths of each element are required to be the same. On the other hand, data used for the applications might not be the same length for each element in 2 dimensional array. This sample script can be used under such situation.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v132</title>
      <link>https://tanaikech.github.io/2017/10/20/updated-ggsrun-to-v132/</link>
      <pubDate>Fri, 20 Oct 2017 16:43:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/20/updated-ggsrun-to-v132/</guid>
      <description>ggsrun was updated to v.1.3.2  v1.3.2 (October 20, 2017)
 Updated ggsrun&amp;rsquo;s Install manual (README.md). Since I thought that the manual became too complicated, I separated it to the simple version and the detail version. And also , recently, since Google&amp;rsquo;s specification was updated, about how to deploy API executable and enable APIs for ggsrun&amp;rsquo;s Install manual were updated. From this version, scripts in a project can be rearranged.</description>
    </item>
    
    <item>
      <title>Updated go-rearrange and gorearrange to v102</title>
      <link>https://tanaikech.github.io/2017/10/18/updated-go-rearrange-and-gorearrange-to-v102/</link>
      <pubDate>Wed, 18 Oct 2017 14:45:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/18/updated-go-rearrange-and-gorearrange-to-v102/</guid>
      <description>go-rearrange and gorearrange were updated to v.1.0.2 From this version, data included multi-bytes characters can be used. At Linux, it works fine. At Windows DOS, rearranging and selecting data can be done. But the displayed data is shifted. Although this may be a bug of termbox-go, I don&amp;rsquo;t know the reason. I&amp;rsquo;m sorry. On the other hand, data with only single-byte characters works fine. About MAC, I don&amp;rsquo;t have it.</description>
    </item>
    
    <item>
      <title>Updated go-rearrange and gorearrange to v101</title>
      <link>https://tanaikech.github.io/2017/10/16/updated-go-rearrange-and-gorearrange-to-v101/</link>
      <pubDate>Mon, 16 Oct 2017 15:37:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/16/updated-go-rearrange-and-gorearrange-to-v101/</guid>
      <description>go-rearrange and gorearrange were updated to v.1.0.1  As one of outputs, indexmode (bool) was added. If this is true, the rearranged result is output as the change of index for the source data. For example, if the source data and rearranged data are [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;] and [&amp;quot;c&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;], respectively. The output will become [2, 1, 0].  By this, the specification for creating applications will expand.</description>
    </item>
    
    <item>
      <title>CLI Tool - gorearrange</title>
      <link>https://tanaikech.github.io/2017/10/15/cli-tool---gorearrange/</link>
      <pubDate>Sun, 15 Oct 2017 16:43:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/15/cli-tool---gorearrange/</guid>
      <description>Overview This is a CLI tool to interactively rearrange a text data on a terminal.
Description Since I couldn&amp;rsquo;t find CLI tools for manually rearranging text data, I created this CLI tool.
For this, at first, I created a Golang library go-rearrange.
The detail information and how to get this are https://github.com/tanaikech/gorearrange.</description>
    </item>
    
    <item>
      <title>Enhanced onEdit(e) using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/10/11/enhanced-onedite-using-google-apps-script/</link>
      <pubDate>Wed, 11 Oct 2017 09:43:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/11/enhanced-onedite-using-google-apps-script/</guid>
      <description>Gists
onEdit(e) which is used for the Edit event on Spreadsheet has the old value as e.oldValue. The specifications for this are as follows.
 When an user edited a &amp;ldquo;A1&amp;rdquo; cell from &amp;ldquo;hoge&amp;rdquo; to &amp;ldquo;fuga&amp;rdquo;, e of onEdit(e) shows hoge for e.oldValue and fuga for e.value. When an user edited &amp;ldquo;A1:A2&amp;rdquo; cell from &amp;ldquo;hoge&amp;rdquo; to &amp;ldquo;fuga&amp;rdquo;, e.oldValue and e.value of onEdit(e) are not shown anything. When an user copied and pasted from other cell, e.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/09/24/updated-gas-library---onedriveapp/</link>
      <pubDate>Sun, 24 Sep 2017 15:36:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/24/updated-gas-library---onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.1.0.
From this version, retrieving access token and refresh token became more easy.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>Uploading CSV File as Spreadsheet and Modifying Permissions using Golang</title>
      <link>https://tanaikech.github.io/2017/09/21/uploading-csv-file-as-spreadsheet-and-modifying-permissions-using-golang/</link>
      <pubDate>Thu, 21 Sep 2017 15:43:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/21/uploading-csv-file-as-spreadsheet-and-modifying-permissions-using-golang/</guid>
      <description>Gists
This sample script is for uploading CSV file as Spreadsheet and modifying permissions using Golang.
I think that the detail information of google-api-go-client is a bit little. The sample scripts are so little. It retrieves most information from only godoc and GitHub. So I publish such sample scripts here. If this is useful for you, I&amp;rsquo;m glad.
Important points :  Give mimeType of file that it wants to upload to options of Media(r io.</description>
    </item>
    
    <item>
      <title>Selecting Files in Google Drive using Select Box for Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/17/selecting-files-in-google-drive-using-select-box-for-google-apps-script/</link>
      <pubDate>Sun, 17 Sep 2017 13:26:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/17/selecting-files-in-google-drive-using-select-box-for-google-apps-script/</guid>
      <description>Gists
This is a sample script for selecting files in Google Drive using HTML select box for Google Apps Script.
Feature Feature of this sample.
 It is a simple and space saving. When the folder is selected, the files in the folder are shown. When the file is selected, the ID of file is retrieved. Users can use this ID at GAS. When a folder is opened, all files in the folder are cached.</description>
    </item>
    
    <item>
      <title>spreadsheets.values.batchUpdate using Golang</title>
      <link>https://tanaikech.github.io/2017/09/15/spreadsheets.values.batchupdate-using-golang/</link>
      <pubDate>Fri, 15 Sep 2017 14:14:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/15/spreadsheets.values.batchupdate-using-golang/</guid>
      <description>Gists
Flow : In my sample script, the script was made using the Quickstart. The flow to use this sample script is as follows.
 For Go Quickstart, please do Step 1 and Step 2. Please put client_secret.json to the same directory with my sample script. Copy and paste my sample script, and create it as new script file. Run the script. When Go to the following link in your browser then type the authorization code: is shown on your terminal, please copy the URL and paste to your browser.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v131</title>
      <link>https://tanaikech.github.io/2017/09/15/updated-ggsrun-to-v131/</link>
      <pubDate>Fri, 15 Sep 2017 10:12:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/15/updated-ggsrun-to-v131/</guid>
      <description>ggsrun was updated to v.1.3.1  Recently, when scripts on local PC is uploaded to Google Drive as a new project, the time to create on Google became a bit long. (I think that this is due to Google Update.) Under this situation, when the script is uploaded, the timeout error occurs while the new project is created using the script. So the time until timeout of fetch was modified from 10 seconds to 30 seconds.</description>
    </item>
    
    <item>
      <title>Uploading Image Files to Slack Using Incoming Webhooks by Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</link>
      <pubDate>Thu, 07 Sep 2017 12:37:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</guid>
      <description>Gist
This sample script is for uploading image files to Slack using Incoming Webhooks by Google Apps Script.
When users try to upload image files to Slack using Incoming Webhooks, it has been known that although the access token is required to directly upload them, Incoming Webhooks can upload them by using the tag of image_url. In this sample script, it uploads image files (BMP, GIF, JPEG and PNG) on Google Drive to Slack using Incoming Webhooks.</description>
    </item>
    
    <item>
      <title>Retrieving Files with Filename Included Special Characters using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/07/retrieving-files-with-filename-included-special-characters-using-google-apps-script/</link>
      <pubDate>Thu, 07 Sep 2017 10:40:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/07/retrieving-files-with-filename-included-special-characters-using-google-apps-script/</guid>
      <description>Gists
This sample script is for retrieving files with filename included special characters using Google Apps Script. The files are used on Google Drive.
The files with filename of special characters cannot be retrieved using DriveApp.getFilesByName(). This workaround solved this.
As a query parameter, name contains &#39;filename with special characters&#39; is used. This contains is very important. name=&#39;filename with special characters&#39; cannot retrieve such files. Today, it was found that name contains &#39;filename with special characters&#39; is the workaround.</description>
    </item>
    
    <item>
      <title>Removing Duplicated Values in Array using CoffeeScript</title>
      <link>https://tanaikech.github.io/2017/09/06/removing-duplicated-values-in-array-using-coffeescript/</link>
      <pubDate>Wed, 06 Sep 2017 16:42:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/06/removing-duplicated-values-in-array-using-coffeescript/</guid>
      <description>Gists
This sample script is for removing duplicated values in array using CoffeeScript.
ar = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;] res = ar.filter (e, i, s) -&amp;gt; s.indexOf(e) is i console.log res &amp;gt;&amp;gt;&amp;gt; [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ]  The result which was compiled by CoffeeScript is as follows.
var ar, res; ar = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;]; res = ar.filter(function(e, i, s) { return s.indexOf(e) === i; }); console.</description>
    </item>
    
    <item>
      <title>Enhanced copyTo() using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/03/enhanced-copyto-using-google-apps-script/</link>
      <pubDate>Sun, 03 Sep 2017 10:35:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/03/enhanced-copyto-using-google-apps-script/</guid>
      <description>Here, it introduces an application of Retrieving Spreadsheet ID from Range using Google Apps Script.
Please check this. https://github.com/tanaikech/getSpreadsheetByRange</description>
    </item>
    
    <item>
      <title>Retrieving Spreadsheet ID from Range using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/08/31/retrieving-spreadsheet-id-from-range-using-google-apps-script/</link>
      <pubDate>Thu, 31 Aug 2017 13:50:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/31/retrieving-spreadsheet-id-from-range-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving spreadsheet ID from a range using Google Apps Script. I sometimes want to retrieve spreadsheet ID from ranges. In such case, I always use this.
 Range -&amp;gt; Retrieve Sheet using getSheet() -&amp;gt; Retrieve Spreadsheet using getParent() -&amp;gt; Retrieve spreadsheet ID  var id = &amp;quot;123456789abcdefg&amp;quot;; var sheet = &amp;quot;Sheet&amp;quot;; var cells = &amp;quot;a1:b10&amp;quot;; var range = SpreadsheetApp.openById(id).getSheetByName(sheet).getRange(cells); var id = range.getSheet().getParent().getId(); &amp;gt;&amp;gt;&amp;gt; id ---&amp;gt; 123456789abcdefg  </description>
    </item>
    
    <item>
      <title>Updated ggsrun to v130</title>
      <link>https://tanaikech.github.io/2017/08/30/updated-ggsrun-to-v130/</link>
      <pubDate>Wed, 30 Aug 2017 15:08:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/30/updated-ggsrun-to-v130/</guid>
      <description>ggsrun was updated to v.1.3.0  From this version, container-bound scripts can be downloaded. The container-bound script is the script created at the script editor on Google Sheets, Docs, or Forms file.  In order to download container-bound scripts, the project ID of container-bound scripts is required. The project ID can be retrieved as follows.  Open the project. And please operate follows using click.  -&amp;gt; File -&amp;gt; Project properties -&amp;gt; Get Script ID (This is the project ID.</description>
    </item>
    
    <item>
      <title>Retrieving Values By Header Title for Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/08/27/retrieving-values-by-header-title-for-spreadsheet/</link>
      <pubDate>Sun, 27 Aug 2017 14:05:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/27/retrieving-values-by-header-title-for-spreadsheet/</guid>
      <description>Gists
This is a sample script for retrieving values by header title for Spreadsheet. This is created by Google Apps Script. The main script is as follows.
Main script : When the instance is retrieved, all data of the sheet is analyzed. So when the each value is retrieved, the speed is fast.
function GetValueByKey(sheetname) { return new getValueByKey(sheetname); }; (function(r) { var getValueByKey; getValueByKey = (function() { getValueByKey.name = &amp;quot;getValueByKey&amp;quot;; function getValueByKey(sheetname) { var alldata, e, header, ss; try { ss = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Exporting Project on Google Drive using Golang Quickstart</title>
      <link>https://tanaikech.github.io/2017/08/27/exporting-project-on-google-drive-using-golang-quickstart/</link>
      <pubDate>Sun, 27 Aug 2017 12:01:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/27/exporting-project-on-google-drive-using-golang-quickstart/</guid>
      <description>Gists
This is a sample script for exporting a project on Google Drive to local PC using Golang Quickstart. A file with refresh token is saved to the same directory with this script as go-quickstart.json. Before you run this script, please enable Drive API on your Google API console.
Points for exporting project  In order to export project, both drive.DriveScriptsScope and drive.DriveScope have to be included in the scope.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/08/21/updated-gas-library---onedriveapp/</link>
      <pubDate>Mon, 21 Aug 2017 15:02:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/updated-gas-library---onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.0.2.
Moved the instance of PropertiesService.getScriptProperties() to outside of this library. When there is the PropertiesService.getScriptProperties() inside the library, it was found that the parameters that users set was saved to the library. So this was modified. I&amp;rsquo;m sorry that I couldn&amp;rsquo;t notice this situation.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/08/21/updated-gas-library---onedriveapp/</link>
      <pubDate>Mon, 21 Aug 2017 11:22:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/updated-gas-library---onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.0.1.
Added a method for retrieving access token and refresh token using this library.
By added this method, OneDrive APIs can be used by only this library.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>Changing Values by Checking Duplicated Values of JSON for Javascript</title>
      <link>https://tanaikech.github.io/2017/08/21/changing-values-by-checking-duplicated-values-of-json-for-javascript/</link>
      <pubDate>Mon, 21 Aug 2017 08:30:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/changing-values-by-checking-duplicated-values-of-json-for-javascript/</guid>
      <description>Gists
This sample script is for changing values by checking duplicated values of JSON for Javascript.
Please see the following script. There is an array with a JSON data with 3 keys and 3 values. It is found that the values for each element duplicate. These duplicated values are changing by adding numbers.
I use this for managing filenames. This script also can be used for Google Apps Script. If this was useful for you, I&amp;rsquo;m glad.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/08/20/updated-gas-library---imgapp/</link>
      <pubDate>Sun, 20 Aug 2017 15:11:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/20/updated-gas-library---imgapp/</guid>
      <description>ImgApp was updated to v1.2.0. New method was added.
3. updateThumbnail() Overview This method is for updating thumbnail of files on Google Drive using images you selected.
Description For example, zip files don&amp;rsquo;t have the thumbnail on Google Drive. An icon is shown as the thumbnail. For the most files, Google Drive can create automatically each thumbnail. But there are sometimes files which cannot be created the thumbnail. Zip file is also one of them.</description>
    </item>
    
    <item>
      <title>Updating Thumbnail of File on Google Drive using Python</title>
      <link>https://tanaikech.github.io/2017/08/19/updating-thumbnail-of-file-on-google-drive-using-python/</link>
      <pubDate>Sat, 19 Aug 2017 16:27:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/19/updating-thumbnail-of-file-on-google-drive-using-python/</guid>
      <description>Gists
This sample script is for updating thumbnail of file on Google Drive using Python.
This sample supposes that quickstart is used and default quickstart works fine. In order to use this sample, please carry out as follows.
 Replace main() of the default quickstart to this sample.  Script : import base64 # This is used for this sample. def main(): credentials = get_credentials() http = credentials.authorize(httplib2.Http()) service = discovery.</description>
    </item>
    
    <item>
      <title>Downloading Files Under Specific Folder using Node.js</title>
      <link>https://tanaikech.github.io/2017/08/17/downloading-files-under-specific-folder-using-node.js/</link>
      <pubDate>Thu, 17 Aug 2017 09:25:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/17/downloading-files-under-specific-folder-using-node.js/</guid>
      <description>Gists
This sample script is for downloading files under a specific folder using Node.js. It can download files with Google Docs and others.
This sample supposes as follows. So please confirm it.
 quickstart is used and default quickstart works fine.  In order to use this sample, please carry out as follows.
 Replace listFiles() of the default quickstart to this sample. Set folderid. This script can retrieve files in the folder with folderid.</description>
    </item>
    
    <item>
      <title>GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/08/16/gas-library---onedriveapp/</link>
      <pubDate>Wed, 16 Aug 2017 10:31:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/16/gas-library---onedriveapp/</guid>
      <description>This is a library of Google Apps Script for using Microsoft OneDrive.
Feature This library can carry out following functions using OneDrive APIs.
 Retrieve file list on OneDrive. Delete files and folders on OneDrive. Create folder on OneDrive. Download files from OneDrive to Google Drive. Upload files from Google Drive to OneDrive.  Demo You can see the detail information here https://github.com/tanaikech/OnedriveApp</description>
    </item>
    
    <item>
      <title>Uploading Files to OneDrive Using Node.js</title>
      <link>https://tanaikech.github.io/2017/08/15/uploading-files-to-onedrive-using-node.js/</link>
      <pubDate>Tue, 15 Aug 2017 10:00:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/15/uploading-files-to-onedrive-using-node.js/</guid>
      <description>Gists
Upload contents for an item on OneDrive In order to use this script, please retrieve client id, client secret and refresh token before. About this, you can see the detail information at https://gist.github.com/tanaikech/d9674f0ead7e3320c5e3184f5d1b05cc.
1. Simple item upload This is for the simple item upload is available for items with less than 4 MB of content. The detail information is https://dev.onedrive.com/items/upload_put.htm.
var fs = require(&#39;fs&#39;); var mime = require(&#39;mime&#39;); var request = require(&#39;request&#39;); var file = &#39;.</description>
    </item>
    
    <item>
      <title>Netatmo API Had Been Down 3</title>
      <link>https://tanaikech.github.io/2017/08/12/netatmo-api-had-been-down-3/</link>
      <pubDate>Sat, 12 Aug 2017 17:38:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/12/netatmo-api-had-been-down-3/</guid>
      <description>Report Netatmo API had been down from Aug. 10, 2017 19:30 JST to Aug. 11, 2017 19:00 JST. Now it&amp;rsquo;s working.</description>
    </item>
    
    <item>
      <title>Interconversion Between Google Docs and Microsoft Docs</title>
      <link>https://tanaikech.github.io/2017/08/11/interconversion-between-google-docs-and-microsoft-docs/</link>
      <pubDate>Fri, 11 Aug 2017 15:02:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/11/interconversion-between-google-docs-and-microsoft-docs/</guid>
      <description>Gists
This sample script is for the interconversion between Google Docs (document, spreadsheet and presentation) and Microsoft Docs (word, excel and powerpoint). The feature is to convert them without Advanced Google Services.
Since Advanced Google Services is not used for this, if you publish your script with this script, you are not necessary to explain how to install Advanced Google Services. This script converts between Google Docs and Microsoft Docs using UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Netatmo API Had Been Down 2</title>
      <link>https://tanaikech.github.io/2017/08/10/netatmo-api-had-been-down-2/</link>
      <pubDate>Thu, 10 Aug 2017 07:10:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/10/netatmo-api-had-been-down-2/</guid>
      <description>Report Netatmo API had been down from Aug. 8, 2017 21:30 JST to Aug. 9, 2017 17:30 JST. Now it&amp;rsquo;s working.
I got an e-mail from Netatmo. They say that the issue was solved.</description>
    </item>
    
    <item>
      <title>Netatmo API Had Been Down 1</title>
      <link>https://tanaikech.github.io/2017/08/07/netatmo-api-had-been-down-1/</link>
      <pubDate>Mon, 07 Aug 2017 09:03:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/07/netatmo-api-had-been-down-1/</guid>
      <description>Report Netatmo API had been down from Aug. 7, 2017 00:00 a.m. JST to Aug. 7, 2017 07:30 a.m. JST. Now it&amp;rsquo;s working.</description>
    </item>
    
    <item>
      <title>Downloading Shared Files on Google Drive Using Curl</title>
      <link>https://tanaikech.github.io/2017/08/05/downloading-shared-files-on-google-drive-using-curl/</link>
      <pubDate>Sat, 05 Aug 2017 11:06:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/05/downloading-shared-files-on-google-drive-using-curl/</guid>
      <description>Gists
When the shared files on Google Drive is downloaded, it is necessary to change the download method by the file size. The boundary of file size when the method is changed is about 40MB.
File size &amp;lt; 40MB CURL filename=&amp;quot;### filename ###&amp;quot; fileid=&amp;quot;### file ID ###&amp;quot; curl -L -o ${filename} &amp;quot;https://drive.google.com/uc?export=download&amp;amp;id=${fileid}&amp;quot;  File size &amp;gt; 40MB When it tries to download the file with more than 40MB, Google says to download from following URL.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token From OneDrive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/08/04/retrieving-access-token-from-onedrive-using-google-apps-script/</link>
      <pubDate>Fri, 04 Aug 2017 14:21:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/04/retrieving-access-token-from-onedrive-using-google-apps-script/</guid>
      <description>Gist
Overview This GAS sample is for retrieving access token to use OneDrive APIs using Google Apps Script.
In this script, the authorization code is automatically retrieved.
Demo Usage In order to use this, both accounts of Google and OneDrive (MSN) are required.
Google side  Copy and paste the sample script to your script editor. You can use the standalone script for this. Deploy Web Apps.  On the Script Editor  File -&amp;gt; Manage Versions -&amp;gt; Save New Version Publish -&amp;gt; Deploy as Web App -&amp;gt; At Execute the app as, select &amp;ldquo;your account&amp;rdquo; -&amp;gt; At Who has access to the app, select &amp;ldquo;Only myself&amp;rdquo; -&amp;gt; Click &amp;ldquo;Deploy&amp;rdquo; -&amp;gt; Copy URL of &amp;ldquo;latest code&amp;rdquo; (This is important!</description>
    </item>
    
    <item>
      <title>Converting a1Notation to GridRange for Google Sheets API</title>
      <link>https://tanaikech.github.io/2017/07/31/converting-a1notation-to-gridrange-for-google-sheets-api/</link>
      <pubDate>Mon, 31 Jul 2017 14:38:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/31/converting-a1notation-to-gridrange-for-google-sheets-api/</guid>
      <description>Gists
When it uses Google Sheets API v4, GridRange is used for it as the range property. These sample scripts are for converting from a1Notation to GridRange. You can chose from following 2 scripts. Both scripts can retrieve the same result.
Script 1 : This is from me.
function a1notation2gridrange1(sheetid, a1notation) { var data = a1notation.match(/(^.+)!(.+):(.+$)/); var ss = SpreadsheetApp.openById(sheetid).getSheetByName(data[1]); var range = ss.getRange(data[2] + &amp;quot;:&amp;quot; + data[3]); var gridRange = { sheetId: ss.</description>
    </item>
    
    <item>
      <title>Multipart-POST Request Using Node.js</title>
      <link>https://tanaikech.github.io/2017/07/27/multipart-post-request-using-node.js/</link>
      <pubDate>Thu, 27 Jul 2017 09:44:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/27/multipart-post-request-using-node.js/</guid>
      <description>Gists
Here, I introduce 2 scripts for uploading files to Slack using Node.js as samples. These 2 sample scripts are for uploading files to Slack.
Sample script 1:  You can upload the zip file by converting byte array as follows.  At first, it builds form-data. Adds the zip file converted to byte array and boundary using Buffer.concat(). This is used as body in request.   Basically, this is almost the same to the method using GAS.</description>
    </item>
    
    <item>
      <title>Multipart-POST Request Using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/07/21/multipart-post-request-using-google-apps-script/</link>
      <pubDate>Fri, 21 Jul 2017 10:34:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/21/multipart-post-request-using-google-apps-script/</guid>
      <description>Gist
These sample scripts are for requesting multipart post using Google Apps Script.
In most cases, the multipart request is used for uploading files. So I prepared 2 sample situations as follows. For each situation, the request parameters are different.
 Upload a file from Google Drive to Slack. Convert an excel file to Spreadsheet on Google Drive using Drive API v3.  Multipart post is required for these situations.</description>
    </item>
    
    <item>
      <title>Retrieving Images on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/07/21/retrieving-images-on-spreadsheet/</link>
      <pubDate>Fri, 21 Jul 2017 08:27:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/21/retrieving-images-on-spreadsheet/</guid>
      <description>Gist
This is a sample script for retrieving images on Spreadsheet.
Unfortunately, there are no methods for retrieving directly images on spreadsheet using GAS. So I use the method which retrieves URL from =image(URL) and retrieves the image from the URL.
In this case, =image(URL) has to be in the cell. Images embedded by insertImage() cannot be retrieved.
At first, please confirm them.
Sample script : var cell = &amp;quot;A1&amp;quot;; // Cell address with the function of &amp;quot;=image()&amp;quot; var filename = &amp;quot;samplename&amp;quot;; // Output filename var image = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Retrieving Array Coordinates of Duplicated Elements</title>
      <link>https://tanaikech.github.io/2017/07/19/retrieving-array-coordinates-of-duplicated-elements/</link>
      <pubDate>Wed, 19 Jul 2017 10:38:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/19/retrieving-array-coordinates-of-duplicated-elements/</guid>
      <description> This sample is for retrieving array coordinates of duplicated elements.
Script : var inputdata = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;g&amp;quot;]; var dic = {}; var result = []; inputdata.forEach(function(e, i){ if (dic[e]) { result[i] = &#39;Duplicated&#39;; } else { result[i] = null; } dic[e] = &amp;quot;temp&amp;quot;; }); Logger.log(JSON.stringify(result)) Logger.log([i for (i in result) if(result[i]==&#39;Duplicated&#39;)])  Result : [null,null,&amp;quot;Duplicated&amp;quot;,null,null,&amp;quot;Duplicated&amp;quot;,null,&amp;quot;Duplicated&amp;quot;,null,null] [2, 5, 7]  </description>
    </item>
    
    <item>
      <title>Get File List Under a Folder on Google Drive</title>
      <link>https://tanaikech.github.io/2017/07/19/get-file-list-under-a-folder-on-google-drive/</link>
      <pubDate>Wed, 19 Jul 2017 08:51:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/19/get-file-list-under-a-folder-on-google-drive/</guid>
      <description>Gists
This is a sample of Google Apps Script. This script is for retrieving all files and folders under a folder on Google Drive. All files and folders in the specific folder can be retrieved.
If you want to retrieve file list with all files and folders on Google Drive, please use DriveApp.getRootFolder().getId() as folderId.
When there are a lot of files in the folder, it may be over the limitation time to execute script.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v122</title>
      <link>https://tanaikech.github.io/2017/07/12/updated-ggsrun-to-v122/</link>
      <pubDate>Wed, 12 Jul 2017 14:31:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/12/updated-ggsrun-to-v122/</guid>
      <description>ggsrun was updated to v.1.2.2  For Google Docs (spreadsheet, document, slide and drawing), since I noticed that the revision files would not be able to be retrieved using Drive API v3, I modified this using new workaround.  The new workaround is to use Drive API v2. drive.revisions.get of Drive API v2 can retrieve not only the revision list, but also the export links. I thought of the use of the export links.</description>
    </item>
    
    <item>
      <title>(NEW) Retrieve old revision file from Google Drive</title>
      <link>https://tanaikech.github.io/2017/07/12/new-retrieve-old-revision-file-from-google-drive/</link>
      <pubDate>Wed, 12 Jul 2017 13:21:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/12/new-retrieve-old-revision-file-from-google-drive/</guid>
      <description>This method was updated at July 12, 2017.
In order to use this, at first, please retrieve your access token and enable Drive API.
1. File ID Retrieve file id from file name.
curl -X GET -sSL \ -H &#39;Authorization: Bearer ### Access token ###&#39; \ &#39;https://www.googleapis.com/drive/v3/files?q=name=&amp;quot;### FileName ###&amp;quot;&amp;amp;fields=files(id,name)&#39;  Reference : https://developers.google.com/drive/v3/reference/files/list
2. Revision ID Retrieve revision id from file id.
curl -X GET -sSL \ -H &#39;Authorization: Bearer ### Access token ###&#39; \ &#39;https://www.</description>
    </item>
    
    <item>
      <title>Pseudo Browser with Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/07/05/pseudo-browser-with-google-spreadsheet/</link>
      <pubDate>Wed, 05 Jul 2017 16:45:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/05/pseudo-browser-with-google-spreadsheet/</guid>
      <description>Gist
Overview This is a sample script for creating the pseudo browser using Google Spreadsheet.
Description I unexpectedly noticed this. I think that this is for off-line browsing using HTML data. So there are many limitations. At first, please confirm them.
 Limitations  It cannot move from opened site to other outside site. If the outer site is opened as a new wind, your own browser is opened and move there.</description>
    </item>
    
    <item>
      <title>Downloading Files From Google Drive Under No Authorization Using Browser</title>
      <link>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser/</link>
      <pubDate>Tue, 04 Jul 2017 15:57:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser/</guid>
      <description>Gist
This is a sample script for downloading files from Google Drive under no authorization using browser. By using this sample, you can make other users download files from your Google Drive. Even if the other users are not Google users, they can download the files.

Demo This is a demonstration for downloading files from Google Drive under no authorization using browser. From the top document, You can see that an user who is not owner of Google Drive is downloading files.</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - gislack</title>
      <link>https://tanaikech.github.io/2017/06/30/updated-cli-tool---gislack/</link>
      <pubDate>Fri, 30 Jun 2017 11:40:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/30/updated-cli-tool---gislack/</guid>
      <description>gislack is a CLI tool to submit files to both Gist and Slack.
 v1.0.1 (June 30, 2017)  Some modifications related to error handling.   Please check it out. https://github.com/tanaikech/gislack</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/06/29/updated-gas-library---imgapp/</link>
      <pubDate>Thu, 29 Jun 2017 16:09:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/29/updated-gas-library---imgapp/</guid>
      <description>ImgApp was updated to v1.1.0. New method was added.
2. doResize() Overview This method is for resizing images.
Description Unfortunately, there are no methods to resize images at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and resizes the image using setWidth() and setHeight(). But in this method, the resized blob cannot be retrieved. So although I had thought of other workaround, I had not been able to find it.</description>
    </item>
    
    <item>
      <title>GAS Library - ImgApp - getSize()</title>
      <link>https://tanaikech.github.io/2017/06/27/gas-library---imgapp---getsize/</link>
      <pubDate>Tue, 27 Jun 2017 16:21:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/27/gas-library---imgapp---getsize/</guid>
      <description>1. getSize() Overview This method is for retrieving the width and height of image as the unit of pixel.
Description Unfortunately, there are no methods to directly retrieve the image size at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and retrieves the size using getWidth() and getHeight(). But in this method, it uses much time and resources on Google.</description>
    </item>
    
    <item>
      <title>Sublime Text Plugin - gislacks</title>
      <link>https://tanaikech.github.io/2017/06/22/sublime-text-plugin---gislacks/</link>
      <pubDate>Thu, 22 Jun 2017 13:33:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/22/sublime-text-plugin---gislacks/</guid>
      <description>Overview This is a plugin of Sublime Text 3 for submitting files to both Gist and Slack.
Description I like to use Sublime Text for developing scripts. And when I discuss about developing scripts, I often use Slack. When I submitted a script to Slack, I had saved the script to Gist as a backup. I had done manually this on my browser. Namely, I wanted to be saving the revision of script while I&amp;rsquo;m discussing about the script at Slack.</description>
    </item>
    
    <item>
      <title>CLI Tool - gislack</title>
      <link>https://tanaikech.github.io/2017/06/22/cli-tool---gislack/</link>
      <pubDate>Thu, 22 Jun 2017 12:59:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/22/cli-tool---gislack/</guid>
      <description>Overview This is a CLI tool to submit files to both Gist and Slack.
Description When I discuss about developing scripts, I often use Slack. When I submitted a script to Slack, I had saved the script to Gist as a backup. I had done manually this on my browser. Namely, I wanted to be saving the revision of script while I&amp;rsquo;m discussing about the script at Slack. Recently, I wished this process had been able to be automatically run.</description>
    </item>
    
    <item>
      <title>Go Library - getcode</title>
      <link>https://tanaikech.github.io/2017/06/21/go-library---getcode/</link>
      <pubDate>Wed, 21 Jun 2017 14:17:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/21/go-library---getcode/</guid>
      <description>Overview This is a Golang library to automatically get an authorization code for retrieving access token using OAuth2.
Description When it retrieves an access token and refresh token using OAuth2, the code for retrieving them has to be got by authorization on own browser. In order to retrieve the code, in generally, users have to click the authorization button and copy the code on the browser. This library can be automatically got the code by launching HTML server as a redirected server.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Google APIs</title>
      <link>https://tanaikech.github.io/2017/06/21/retrieving-access-token-for-google-apis/</link>
      <pubDate>Wed, 21 Jun 2017 10:24:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/21/retrieving-access-token-for-google-apis/</guid>
      <description>Gists
This sample is for retrieving access token for Google APIs. I created this for studying newStateToken().
Preparation In order to use this sample, please do as follows.
 Deploy and launch Web Apps for retrieving redirect uri  On the Script Editor  File -&amp;gt; Manage Versions -&amp;gt; Save New Version Publish -&amp;gt; Deploy as Web App -&amp;gt; At Execute the app as, select &amp;ldquo;your account&amp;rdquo; -&amp;gt; At Who has access to the app, select &amp;ldquo;Only myself&amp;rdquo; -&amp;gt; Click &amp;ldquo;Deploy&amp;rdquo; -&amp;gt; Click &amp;ldquo;latest code&amp;rdquo; (By this click, it launches the authorization process.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - SOUWA</title>
      <link>https://tanaikech.github.io/2017/06/19/updated-gas-library---souwa/</link>
      <pubDate>Mon, 19 Jun 2017 07:06:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/19/updated-gas-library---souwa/</guid>
      <description>SOUWA means summing in Japanese. SOUWA can sum string elements in an array at the high speed. The speed of SOUWA with the pyramid algorithm is about 380 times faster than that of the standard method. New algorithm for summing array elements was developed for SOUWA. You can see the detailed report of this library at here. If you are interested in this, I&amp;rsquo;m glad.
It was updated to v1.0.2. Please check it out.</description>
    </item>
    
    <item>
      <title>Benchmark: Retrieving Values from Deep Nested JSON at Golang</title>
      <link>https://tanaikech.github.io/2017/06/17/benchmark-retrieving-values-from-deep-nested-json-at-golang/</link>
      <pubDate>Sat, 17 Jun 2017 10:06:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/17/benchmark-retrieving-values-from-deep-nested-json-at-golang/</guid>
      <description>This sample script is for retrieving values from a deep nested JSON. There are 2 patterns. So for these, the benchmark were measured.
Script : package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;testing&amp;quot; ) const ( data = `{ &amp;quot;A_key1&amp;quot;: { &amp;quot;B_key1&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } } }` ) func BenchmarkB1(b *testing.B) { b.ResetTimer() for i := 0; i &amp;lt; b.N; i++ { var p map[string]interface{} json.Unmarshal([]byte(data), &amp;amp;p) a1 := p[&amp;quot;A_key1&amp;quot;] a2 := p[&amp;quot;A_key1&amp;quot;].</description>
    </item>
    
    <item>
      <title>Reopening Current File as a File with New Name at Sublime</title>
      <link>https://tanaikech.github.io/2017/06/15/reopening-current-file-as-a-file-with-new-name-at-sublime/</link>
      <pubDate>Thu, 15 Jun 2017 09:52:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/15/reopening-current-file-as-a-file-with-new-name-at-sublime/</guid>
      <description>This is for Sublime Text. This sample is for reopening current file as a file with new file name. The current file is closed when reopening a new file.
newfilename = &amp;quot;new file name&amp;quot; contents = self.view.substr(sublime.Region(0, self.view.size())) window = self.view.window() window.run_command(&#39;close_file&#39;) view = window.new_file() view.set_name(newfilename) view.settings().set(&amp;quot;auto_indent&amp;quot;, False) view.run_command(&amp;quot;insert&amp;quot;, {&amp;quot;characters&amp;quot;: contents}) view.set_scratch(True) view.run_command(&amp;quot;prompt_save_as&amp;quot;)  Flow of this sample
 Copy all text on current file to memory (contents). Close current file.</description>
    </item>
    
    <item>
      <title>Search Route and Embedding Map using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/14/search-route-and-embedding-map-using-custom-function-on-spreadsheet/</link>
      <pubDate>Wed, 14 Jun 2017 17:35:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/14/search-route-and-embedding-map-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script is for searching route between place A and B and embedding a map by custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem When the map is embedded to a cell on spreadsheet as an image, the function =IMAGE() is suitable for this situation. However, Class Maps, setFormula() for importing =IMAGE() and DriveApp.createFile() for creating images from maps also cannot be used for custom functions.</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - goris</title>
      <link>https://tanaikech.github.io/2017/06/13/updated-cli-tool---goris/</link>
      <pubDate>Tue, 13 Jun 2017 10:28:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/13/updated-cli-tool---goris/</guid>
      <description>goris is a CLI tool to search for images with Google Reverse Image Search.
Today, it was updated to v1.1.0. Please check it out. https://github.com/tanaikech/goris
When images are matched to a searched image, web pages with matching images are retrieved. These are web pages displayed on Google top page. When this is not used, images are retrieved. This was added as a boolean option. (This was added by a request.)</description>
    </item>
    
    <item>
      <title>Giving and Retrieving Parameters for Chart at GAS</title>
      <link>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas/</link>
      <pubDate>Mon, 12 Jun 2017 11:11:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas/</guid>
      <description>This sample script is for retrieving parameters from a chart. The chart created by both Google Apps Script and manually operation can be used.
Creates Chart When a chart is created, it supposes following parameters.
var parameters = { &amp;quot;title&amp;quot;: &amp;quot;x axis&amp;quot;, &amp;quot;fontName&amp;quot;: &amp;quot;Arial&amp;quot;, &amp;quot;minValue&amp;quot;: 0, &amp;quot;maxValue&amp;quot;: 100, &amp;quot;titleTextStyle&amp;quot;: { &amp;quot;color&amp;quot;: &amp;quot;#c0c0c0&amp;quot;, &amp;quot;fontSize&amp;quot;: 10, &amp;quot;fontName&amp;quot;: &amp;quot;Roboto&amp;quot;, &amp;quot;italic&amp;quot;: true, &amp;quot;bold&amp;quot;: false } }; .setOption(&#39;hAxis&#39;, parameters)  Retrieve Parameters From Chart For the chart created by above parameters, in order to retrieve the parameters, it uses following script.</description>
    </item>
    
    <item>
      <title>Error Handling for Subprocess at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python/</link>
      <pubDate>Fri, 09 Jun 2017 14:27:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python/</guid>
      <description>This sample is for error handling for subprocess.Popen. It confirms whether the execution file is existing. If the execution file is also not in the path, the error message is shown.
import subprocess res = subprocess.Popen( &amp;quot;application&amp;quot;, # &amp;lt;- Execution file stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True ).communicate() if len(res[1]) == 0: print(&amp;quot;ok: Application is existing.&amp;quot;) else: print(&amp;quot;Error: Application is not found.&amp;quot;)  </description>
    </item>
    
    <item>
      <title>Using Constructor Between Classes at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/using-constructor-between-classes-at-python/</link>
      <pubDate>Fri, 09 Jun 2017 10:52:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/using-constructor-between-classes-at-python/</guid>
      <description> This sample is for using constructor between classes at Python.
Sample : class test1: def __init__(self): self.msg = &amp;quot;sample text&amp;quot; class test2: def __init__(self): self.msg = test1().msg print(test2().msg) &amp;gt;&amp;gt;&amp;gt; sample text  </description>
    </item>
    
    <item>
      <title>Slice Created by Split at Golang</title>
      <link>https://tanaikech.github.io/2017/06/09/slice-created-by-split-at-golang/</link>
      <pubDate>Fri, 09 Jun 2017 09:16:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/slice-created-by-split-at-golang/</guid>
      <description>When a string without no strings is split by strings.Split(), the created slice is the same to the slice created by make(). The length of the slice doesn&amp;rsquo;t become zero.
Sample script : package main import ( &amp;quot;fmt&amp;quot; &amp;quot;strings&amp;quot; ) func main() { sample1a := strings.Split(&amp;quot;&amp;quot;, &amp;quot; &amp;quot;) fmt.Printf(&amp;quot;%v, %v, &#39;%v&#39;, %v, %+q\n&amp;quot;, sample1a, len(sample1a), sample1a[0], len(sample1a[0]), sample1a[0]) sample1b := make([]string, 1) fmt.Printf(&amp;quot;%v, %v, &#39;%v&#39;, %v, %+q\n&amp;quot;, sample1b, len(sample1b), sample1b[0], len(sample1b[0]), sample1b[0]) var sample2a []string fmt.</description>
    </item>
    
    <item>
      <title>Benchmark: Effect of Comprehension for GAS</title>
      <link>https://tanaikech.github.io/2017/06/07/benchmark-effect-of-comprehension-for-gas/</link>
      <pubDate>Wed, 07 Jun 2017 09:21:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/07/benchmark-effect-of-comprehension-for-gas/</guid>
      <description>Description There are a limit executing time for Google Apps Script (GAS). It&amp;rsquo;s 6 minutes. So users have to pay attention to the process cost of the script. GAS can use JavaScript 1.7. This means to be able to be used comprehension for GAS.
In this report, the process cost for the comprehension has been investigated. The normal for loop was used as the competitor. As a result, it was found that the comprehension can be used one of methods for reducing the process cost.</description>
    </item>
    
    <item>
      <title>Embedding Animation GIF in A Cell on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet/</link>
      <pubDate>Tue, 06 Jun 2017 16:47:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet/</guid>
      <description>This sample script is for embedding animation GIF in a cell using custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem There are some limitations.
 Images of jpeg and png can be embedded in a cell using =IMAGE(). But when animation GIF is embedded using it, GIF is not played. insertImage() can insert the animation GIF to sheet. But it is not imported to one cell.</description>
    </item>
    
    <item>
      <title>OCR using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/</link>
      <pubDate>Tue, 06 Jun 2017 07:53:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script performs OCR and imports resultant text to a cell using custom function on Spreadsheet.
Drive API has a function to do OCR. It was used for this sample.
I think that this method is one of various ideas.
Problem When OCR is performed and imported the result to a cell on spreadsheet, there are some limitations. DriveApp, UrlFetchApp, setFormula() cannot be used for custom functions.
Solution In order to avoid these limitations, I used Web Apps.</description>
    </item>
    
    <item>
      <title>Changing File Name and Reopening Renamed File by Sublime Text</title>
      <link>https://tanaikech.github.io/2017/06/05/changing-file-name-and-reopening-renamed-file-by-sublime-text/</link>
      <pubDate>Mon, 05 Jun 2017 10:09:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/05/changing-file-name-and-reopening-renamed-file-by-sublime-text/</guid>
      <description>This sample is for changing file name and reopening the file with new name. The flow is as follows.
 A file (sample.py) is opened. Rename the file from sample.py to newsample.py. The opened file is replace to the file with new name.  os.rename(oldfilewithpath, newname) view = self.view.window().find_open_file(oldfilewithpath) if view: view.retarget(newname)  </description>
    </item>
    
    <item>
      <title>Retirving All files in Folder with Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/retirving-all-files-in-folder-with-spreadsheet/</link>
      <pubDate>Sun, 04 Jun 2017 18:15:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/retirving-all-files-in-folder-with-spreadsheet/</guid>
      <description>This sample retrieves all files in a folder with spreadsheet. When there are some folders in the folder with spreadsheet, this script can retrieve all files in all folders. This script has to be a container-bound script for spreadsheet.
Script : function getFileList(){ var folderlist = (function(folder, folderSt, results){ var ar = []; var folders = folder.getFolders(); while(folders.hasNext()) ar.push(folders.next()); folderSt += folder.getId() + &amp;quot;#_aabbccddee_#&amp;quot;; var array_folderSt = folderSt.split(&amp;quot;#_aabbccddee_#&amp;quot;); array_folderSt.pop() results.</description>
    </item>
    
    <item>
      <title>Embedding a Map to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/</link>
      <pubDate>Sun, 04 Jun 2017 12:02:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script embeds a map to a cell using custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem When the map is embeded to a cell on spreadsheet as an image, the function =IMAGE() is suitable for this situation. However, setFormula() for importing =IMAGE() and DriveApp.createFile() for creating images from maps also cannot be used for custom functions.
Solution In order to avoid these limitations, I used Web Apps.</description>
    </item>
    
    <item>
      <title>Changing from &#39;float64&#39; to &#39;int&#39; for Values did Unmarshal using &#39;map[string]interface{}&#39;</title>
      <link>https://tanaikech.github.io/2017/06/02/changing-from-float64-to-int-for-values-did-unmarshal-using-mapstringinterface/</link>
      <pubDate>Fri, 02 Jun 2017 17:22:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/changing-from-float64-to-int-for-values-did-unmarshal-using-mapstringinterface/</guid>
      <description>This sample is for changing from &amp;ldquo;float64&amp;rdquo; to &amp;ldquo;int&amp;rdquo; for values did unmarshal using map[string]interface{}.
When it did unmarshal using map[string]interface{}, a number with &amp;ldquo;int&amp;rdquo; was changed to &amp;ldquo;float64&amp;rdquo;. And it shows an error as follows.
Error :
panic: interface conversion: interface {} is float64, not int  Sample Script : It solves using following script.
package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;reflect&amp;quot; ) func main() { data := `{&amp;quot;key&amp;quot;: 10}` var i map[string]interface{} json.</description>
    </item>
    
    <item>
      <title>Replacing JSON Key by Golang</title>
      <link>https://tanaikech.github.io/2017/06/02/replacing-json-key-by-golang/</link>
      <pubDate>Fri, 02 Jun 2017 11:56:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/replacing-json-key-by-golang/</guid>
      <description>This sample is for replacing JSON key by golang.
package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; ) func main() { json1 := `{&amp;quot;key1&amp;quot;: &amp;quot;value1&amp;quot;}` obj := map[string]interface{}{} json.Unmarshal([]byte(json1), &amp;amp;obj) fmt.Println(obj) // &amp;lt;-- map[key1:value1] obj[&amp;quot;key2&amp;quot;] = obj[&amp;quot;key1&amp;quot;] delete(obj, &amp;quot;key1&amp;quot;) fmt.Println(obj) // &amp;lt;-- map[key2:value1] }  </description>
    </item>
    
    <item>
      <title>Benchmark: Splitting Command-Line Arguments by Golang</title>
      <link>https://tanaikech.github.io/2017/06/02/benchmark-splitting-command-line-arguments-by-golang/</link>
      <pubDate>Fri, 02 Jun 2017 10:59:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/benchmark-splitting-command-line-arguments-by-golang/</guid>
      <description>This sample script is for splitting command-line arguments by golang. There are 2 types. One is the regular expression is used. Another is that Split() and TrimSpace() are used.
Here, each process speed was compared.
Script : package main import ( &amp;quot;regexp&amp;quot; &amp;quot;strings&amp;quot; &amp;quot;testing&amp;quot; ) func BenchmarkB1(b *testing.B) { str := &amp;quot;test1.txt, test2.txt&amp;quot; b.ResetTimer() for i := 0; i &amp;lt; b.N; i++ { ar := regexp.MustCompile(`\s*,\s*`).Split(str, -1) var result []string for _, x := range ar { result = append(result, x) // --&amp;gt; &#39;test.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v121</title>
      <link>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121/</link>
      <pubDate>Sun, 28 May 2017 14:20:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121/</guid>
      <description>ggsrun was updated to v.1.2.1  Configuration file (ggsrun.cfg) became to be able to be read using the environment variable.  You can check this at here.</description>
    </item>
    
    <item>
      <title>Embedding a Chart to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/</link>
      <pubDate>Fri, 26 May 2017 11:59:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script embeds a chart to a cell using custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem When you want to create a chart and embed it to a cell using custom functions, you notice that insertChart() cannot be used. There are some limitations for using custom functions. But insertChart() creates floating charts. So in order to embed a chart to a cell, the function =IMAGE() is suitable for this situation.</description>
    </item>
    
    <item>
      <title>Retrieving HTML File ID from Microsoft Docx File on Google Drive</title>
      <link>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive/</link>
      <pubDate>Wed, 24 May 2017 09:08:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive/</guid>
      <description>This sample script converts from Microsoft Docx File on Google Drive to Google Spreadsheet, and converts to HTML file.
Drive APIs v2 and v3 are used for this. Please set as follows.
 Drive API v2 Drive API v3  &amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.
How to use it is as follows.</description>
    </item>
    
    <item>
      <title>Decoding JSON by Golang</title>
      <link>https://tanaikech.github.io/2017/05/21/decoding-json-by-golang/</link>
      <pubDate>Sun, 21 May 2017 11:55:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/21/decoding-json-by-golang/</guid>
      <description>Decoding JSON by Golang
func main() { data := `{ &amp;quot;A_key1&amp;quot;: { &amp;quot;B_key1&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key2&amp;quot;: { &amp;quot;B_key2&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key3&amp;quot;: { &amp;quot;B_key3&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key4&amp;quot;: { &amp;quot;B_key4&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key5&amp;quot;: { &amp;quot;B_key5&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } } }` var p interface{} json.NewDecoder(strings.NewReader(data)).Decode(&amp;amp;p) fmt.Println(p) }  Go Playground</description>
    </item>
    
    <item>
      <title>Dynamically Creating JSON by Golang</title>
      <link>https://tanaikech.github.io/2017/05/21/dynamically-creating-json-by-golang/</link>
      <pubDate>Sun, 21 May 2017 10:55:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/21/dynamically-creating-json-by-golang/</guid>
      <description>Dynamically Creating JSON by Golang
obj := map[string]interface{}{} obj[&amp;quot;hoge&amp;quot;] = &amp;quot;huga&amp;quot; fmt.Println(obj)  Go Playground</description>
    </item>
    
    <item>
      <title>Retrieving Response Headers by Golang</title>
      <link>https://tanaikech.github.io/2017/05/21/retrieving-response-headers-by-golang/</link>
      <pubDate>Sun, 21 May 2017 10:43:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/21/retrieving-response-headers-by-golang/</guid>
      <description>Retrieving Response Headers by Golang
res, _ := client.Do(req) contentType := res.Header.Get(&amp;quot;Content-Type&amp;quot;) contentLength := res.Header.Get(&amp;quot;Content-Length&amp;quot;)  </description>
    </item>
    
    <item>
      <title>Updated ggsrun to v120</title>
      <link>https://tanaikech.github.io/2017/05/19/updated-ggsrun-to-v120/</link>
      <pubDate>Fri, 19 May 2017 08:49:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/19/updated-ggsrun-to-v120/</guid>
      <description>ggsrun was updated to v.1.2.0  Added a command for retrieving revision files on Google Drive. Some modifications.  You can check this at here.</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - goris</title>
      <link>https://tanaikech.github.io/2017/05/16/updated-cli-tool---goris/</link>
      <pubDate>Tue, 16 May 2017 12:56:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/16/updated-cli-tool---goris/</guid>
      <description>goris is a CLI tool to search for images with Google Reverse Image Search.
Today, it was updated to v1.0.1. Please check it out. https://github.com/tanaikech/goris
When number of retrieved URLs is smaller than number of default output, an error had occurred. This was fixed.</description>
    </item>
    
    <item>
      <title>Changing Line to Bars for Combo Chart using GAS</title>
      <link>https://tanaikech.github.io/2017/05/16/changing-line-to-bars-for-combo-chart-using-gas/</link>
      <pubDate>Tue, 16 May 2017 11:42:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/16/changing-line-to-bars-for-combo-chart-using-gas/</guid>
      <description>Sample data This is a sample data for this sample script. The column B was created by the normal distribution formula, and the column C was created by multiplying random number for column B.
A, B, C 1.0, 0.0001, 0.0000 1.5, 0.0009, 0.0006 2.0, 0.0044, 0.0037 2.5, 0.0175, 0.0133 3.0, 0.0540, 0.0236 3.5, 0.1296, 0.0533 4.0, 0.2420, 0.0073 4.5, 0.3522, 0.2468 5.0, 0.3990, 0.0843 5.5, 0.3522, 0.3352 6.0, 0.2420, 0.</description>
    </item>
    
    <item>
      <title>Sending E-mail When Spreadsheet was Edited from Outside by Sheet API</title>
      <link>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api/</link>
      <pubDate>Sun, 14 May 2017 17:43:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api/</guid>
      <description>This sample script sends an e-mail, when spreadsheet was edited from outside by Sheet API v4. When you use this sample, please create a container bound script with spreadsheet which is edited by Sheet API. And please input your e-mail and run firstly a method of createTrigger(). By this, a trigger is installed as onChange(). After this, edit spreadsheet from outside by Sheet API v4.
When when spreadsheet was edited from outside by Sheet API v4, I used sendEmail() as a sample, because script editor is closed.</description>
    </item>
    
    <item>
      <title>File Transfer for Google Drive Without Authorization</title>
      <link>https://tanaikech.github.io/2017/05/10/file-transfer-for-google-drive-without-authorization/</link>
      <pubDate>Wed, 10 May 2017 13:28:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/10/file-transfer-for-google-drive-without-authorization/</guid>
      <description>Overview In this article, I would like to introduce how to transfer files for Google Drive under no authorization.
This has also been published here. https://github.com/tanaikech/FileTransfer
Description When we download and upload files for Google Drive, it usually has to use Drive API. In order to use Drive API, access token is required. If you want to make your friends download and upload files for your Google Drive, the authorization process is to take time.</description>
    </item>
    
    <item>
      <title>Dynamical Nested JSON Objects by Golang</title>
      <link>https://tanaikech.github.io/2017/05/09/dynamical-nested-json-objects-by-golang/</link>
      <pubDate>Tue, 09 May 2017 15:58:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/09/dynamical-nested-json-objects-by-golang/</guid>
      <description> This sample script dynamically creates nested JSON objects.
Script obj := map[string]interface{}{} for i := 1; i &amp;lt;= 5; i++ { value := map[string]interface{}{ fmt.Sprintf(&amp;quot;B_key%d&amp;quot;, i): map[string]interface{}{ &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;, }, } obj[fmt.Sprintf(&amp;quot;A_key%d&amp;quot;, i)] = value }  Result { &amp;quot;A_key1&amp;quot;: { &amp;quot;B_key1&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key2&amp;quot;: { &amp;quot;B_key2&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key3&amp;quot;: { &amp;quot;B_key3&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key4&amp;quot;: { &amp;quot;B_key4&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } }, &amp;quot;A_key5&amp;quot;: { &amp;quot;B_key5&amp;quot;: { &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot; } } }  </description>
    </item>
    
    <item>
      <title>Changing Slack Status using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/05/09/changing-slack-status-using-google-apps-script/</link>
      <pubDate>Tue, 09 May 2017 10:58:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/09/changing-slack-status-using-google-apps-script/</guid>
      <description>This script changes slack status using GAS. If you want to change it on time you decided, it can be achieved by installing this method as a trigger.
In order to use this, the required scope is users.profile:write.
function setSlackStatus(token, user, status_text, status_emoji) { return UrlFetchApp.fetch( &#39;https://slack.com/api/users.profile.set&#39;, { method: &#39;post&#39;, payload: { token: token, user: user, profile: JSON.stringify({status_text: status_text, status_emoji: status_emoji}) }, muteHttpExceptions: true } ).getContentText(); } function main() { var res = setSlackStatus( &#39;### Your access token ###&#39;, &#39;### User ID ###&#39;, &#39;sample&#39;, &#39;:coffee:&#39; ); Logger.</description>
    </item>
    
    <item>
      <title>Delete Line Feed Code by DOS and Bash</title>
      <link>https://tanaikech.github.io/2017/05/09/delete-line-feed-code-by-dos-and-bash/</link>
      <pubDate>Tue, 09 May 2017 09:36:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/09/delete-line-feed-code-by-dos-and-bash/</guid>
      <description> Input JSON text.txt :
{ &amp;quot;values&amp;quot;: [ [ &amp;quot;a1&amp;quot;, &amp;quot;b1&amp;quot;, &amp;quot;c1&amp;quot; ], [ &amp;quot;a2&amp;quot;, &amp;quot;b2&amp;quot;, &amp;quot;c2&amp;quot; ], [ &amp;quot;a3&amp;quot;, &amp;quot;b3&amp;quot;, &amp;quot;c3&amp;quot; ], [ &amp;quot;a4&amp;quot;, &amp;quot;b4&amp;quot;, &amp;quot;c4&amp;quot; ], [ &amp;quot;a5&amp;quot;, &amp;quot;b5&amp;quot;, &amp;quot;c5&amp;quot; ] ] }  Windows DOS type text.txt | jq -c &amp;quot;.&amp;quot;  Linux Bash $ cat text.txt | jq -c &#39;.&#39;  Output JSON {&amp;quot;values&amp;quot;:[[&amp;quot;a1&amp;quot;,&amp;quot;b1&amp;quot;,&amp;quot;c1&amp;quot;],[&amp;quot;a2&amp;quot;,&amp;quot;b2&amp;quot;,&amp;quot;c2&amp;quot;],[&amp;quot;a3&amp;quot;,&amp;quot;b3&amp;quot;,&amp;quot;c3&amp;quot;],[&amp;quot;a4&amp;quot;,&amp;quot;b4&amp;quot;,&amp;quot;c4&amp;quot;],[&amp;quot;a5&amp;quot;,&amp;quot;b5&amp;quot;,&amp;quot;c5&amp;quot;]]}  </description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - gogauth</title>
      <link>https://tanaikech.github.io/2017/05/09/updated-cli-tool---gogauth/</link>
      <pubDate>Tue, 09 May 2017 09:00:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/09/updated-cli-tool---gogauth/</guid>
      <description>gogauth is a CLI tool to easily retrieve access token for using APIs on Google.
I thought that if the access token can easily retrieve, it may be useful for users who can use various convenience Google APIs. So I created this. Also this can be used for testing sample script like the demo. If this will be helpful for you, I&amp;rsquo;m glad.
Today, it was updated to v2.0.1. Please check it out.</description>
    </item>
    
    <item>
      <title>OCR using Google Drive API</title>
      <link>https://tanaikech.github.io/2017/05/02/ocr-using-google-drive-api/</link>
      <pubDate>Tue, 02 May 2017 14:21:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/02/ocr-using-google-drive-api/</guid>
      <description>This is a sample script for OCR using Google Drive API. A text file which converted by OCR can be retrieved by inputting an image file.
In this sample, Python Quickstart is used. The detail information is https://developers.google.com/drive/v3/web/quickstart/python. Please read “Step 1: Turn on the Drive API” and “Step 2: Install the Google Client Library”.
from __future__ import print_function import httplib2 import os import io from apiclient import discovery from oauth2client import client from oauth2client import tools from oauth2client.</description>
    </item>
    
    <item>
      <title>Converting PDF to TXT</title>
      <link>https://tanaikech.github.io/2017/05/01/converting-pdf-to-txt/</link>
      <pubDate>Mon, 01 May 2017 15:04:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/01/converting-pdf-to-txt/</guid>
      <description>This is a sample script for converting a PDF file to a TXT file. 2 steps are required for this.
 Upload a PDF file as a Google Document Download a Google Document as a TXT file  In this sample, Python Quickstart is used. The detail information is https://developers.google.com/drive/v3/web/quickstart/python. Please read &amp;ldquo;Step 1: Turn on the Drive API&amp;rdquo; and &amp;ldquo;Step 2: Install the Google Client Library&amp;rdquo;.
from __future__ import print_function import httplib2 import os import io from apiclient import discovery from oauth2client import client from oauth2client import tools from oauth2client.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v110</title>
      <link>https://tanaikech.github.io/2017/04/30/updated-ggsrun-to-v110/</link>
      <pubDate>Sun, 30 Apr 2017 11:49:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/30/updated-ggsrun-to-v110/</guid>
      <description>Updated ggsrun to v.1.1.0 Added a command for updating existing project on Google Drive. One of scripts in the project can be also updated.
https://github.com/tanaikech/ggsrun</description>
    </item>
    
    <item>
      <title>Retrieving User Information with Shared Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/04/27/retrieving-user-information-with-shared-spreadsheet/</link>
      <pubDate>Thu, 27 Apr 2017 14:34:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/27/retrieving-user-information-with-shared-spreadsheet/</guid>
      <description>This sample script retrieves the user information which is editing the shared spreadsheet.
It was found as follows.
 User information retrieving by Class Session is the owner and users which installed triggers by themselves. When each user installs a trigger, user information retrieving by Class Session losts the accuracy. So user information has to be retrieved using a temporally installed trigger. Using onOpen(), it cannot directly install triggers and authorize.</description>
    </item>
    
    <item>
      <title>CLI Tool - goris</title>
      <link>https://tanaikech.github.io/2017/04/26/cli-tool---goris/</link>
      <pubDate>Wed, 26 Apr 2017 16:52:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/26/cli-tool---goris/</guid>
      <description>Overview This is a CLI tool to search for images with Google Reverse Image Search.
Motivation Because I had wanted to search for images with an image URL and file on my terminal, I created this. This can download images from searched image URLs.
The detail information and how to get this are https://github.com/tanaikech/goris.</description>
    </item>
    
    <item>
      <title>CLI Tool - ggsrun</title>
      <link>https://tanaikech.github.io/2017/04/24/cli-tool---ggsrun/</link>
      <pubDate>Mon, 24 Apr 2017 15:07:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/24/cli-tool---ggsrun/</guid>
      <description>Overview This is a CLI tool to execute Google Apps Script (GAS) on a terminal.
Motivation Will you want to develop GAS using CoffeeScript on your local PC? Generally, when we develop GAS, we have to login to Google using own browser and develop it using Javascript on the Script Editor. Recently, I have wanted to have more convenient local-environment for developing GAS. So I created this &amp;ldquo;ggsrun&amp;rdquo;.
The detail information and how to get this are https://github.</description>
    </item>
    
    <item>
      <title>Overwriting Spreadsheet to Existing Excel File</title>
      <link>https://tanaikech.github.io/2017/04/21/overwriting-spreadsheet-to-existing-excel-file/</link>
      <pubDate>Fri, 21 Apr 2017 13:13:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/21/overwriting-spreadsheet-to-existing-excel-file/</guid>
      <description>This sample script converts a spreadsheet to excel file, and overwrites the excel file to the existing excel file. When you use this script, at first, please confirm whether Drive API is enabled at Google API console. Because the existing excel file is overwritten, the file name and file ID are not changed.
function overWrite(src_spreadsheetId, dst_excelfileId) { var accesstoken = ScriptApp.getOAuthToken(); return UrlFetchApp.fetch( &amp;quot;https://www.googleapis.com/upload/drive/v3/files/&amp;quot; + dst_excelfileId + &amp;quot;?uploadType=multipart&amp;quot;, { method: &amp;quot;PATCH&amp;quot;, headers: {Authorization: &amp;quot;Bearer &amp;quot; + accesstoken}, contentType: &amp;quot;application/vnd.</description>
    </item>
    
    <item>
      <title>Converting Spreadsheet to PDF</title>
      <link>https://tanaikech.github.io/2017/04/20/converting-spreadsheet-to-pdf/</link>
      <pubDate>Thu, 20 Apr 2017 07:56:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/20/converting-spreadsheet-to-pdf/</guid>
      <description>Converting Spreadsheet to PDF
This sample script converts from a spreadsheet to a PDF file which has all sheets in the spreadsheet. When you use this, please enable Drive API at Google API console.
var spreadsheetId = &amp;quot;#####&amp;quot;; var folderId = &amp;quot;#####&amp;quot;; var outputFilename = &amp;quot;#####&amp;quot;; DriveApp.getFolderById(folderId) .createFile(UrlFetchApp.fetch( &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + spreadsheetId + &amp;quot;/export?mimeType=application/pdf&amp;quot;, { method: &amp;quot;GET&amp;quot;, headers: {Authorization: &amp;quot;Bearer &amp;quot; + ScriptApp.getOAuthToken()}, muteHttpExceptions: true }) .getBlob()) .setName(outputFilename);  </description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - gogauth</title>
      <link>https://tanaikech.github.io/2017/04/19/updated-cli-tool---gogauth/</link>
      <pubDate>Wed, 19 Apr 2017 13:34:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/19/updated-cli-tool---gogauth/</guid>
      <description>gogauth is a CLI tool to retrieve easily access token for using APIs on Google.
Today, it was updated with big changes. Please check it out.
https://github.com/tanaikech/gogauth</description>
    </item>
    
    <item>
      <title>GAS Library - CreateImg</title>
      <link>https://tanaikech.github.io/2017/04/17/gas-library---createimg/</link>
      <pubDate>Mon, 17 Apr 2017 15:29:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/17/gas-library---createimg/</guid>
      <description>Recently, I had been looking for creating an image from coordinate data. Unfortunately I have never found them. So I made this. This Google Apps Script (GAS) library creates an image file from coordinate data.
You can see the detail information at https://github.com/tanaikech/CreateImg.
There is a part where I would like to improve in this library. That&amp;rsquo;s convByteSlice(). I think that there is the method to be faster about the part.</description>
    </item>
    
    <item>
      <title>Comprehension of GAS</title>
      <link>https://tanaikech.github.io/2017/04/17/comprehension-of-gas/</link>
      <pubDate>Mon, 17 Apr 2017 08:16:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/17/comprehension-of-gas/</guid>
      <description>Here, I would like to introduce a comprehension of GAS.
Input :
var data = [[[0], [1], [2], [3]], [[4], [5], [6], [7]]];  Output :
[[0.0, 2.0], [0.0, 2.0]]  Pattern 1 var a = []; for (var i=0; i&amp;lt;data.length; i++) { var temp = []; for (var j=0; j&amp;lt;data[i].length; j++) { if (data[i][j][0] % 2 == 0) temp.push(j); } a.push(temp); } Logger.log(a)  Pattern 2 var b = []; data.</description>
    </item>
    
    <item>
      <title>Creating Spreadsheet from Excel file</title>
      <link>https://tanaikech.github.io/2017/04/15/creating-spreadsheet-from-excel-file/</link>
      <pubDate>Sat, 15 Apr 2017 10:39:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/15/creating-spreadsheet-from-excel-file/</guid>
      <description>These scripts can be executed on Script Editor. But, in order to use these, you have to enable Drive API of Advanced Google services and of Google API Console. &amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.
How to use it is as follows.
 In the script editor, select Resources &amp;gt; Advanced Google services</description>
    </item>
    
    <item>
      <title>Creating Downloaded Excel file as Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/04/14/creating-downloaded-excel-file-as-spreadsheet/</link>
      <pubDate>Fri, 14 Apr 2017 18:03:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/14/creating-downloaded-excel-file-as-spreadsheet/</guid>
      <description>This is a sample GAS script to create an Excel file, which was downloaded from web, as Spreadsheet. By using Drive API, it can be achieved without access token.
Script :
function downloadFile(fileURL, folder) { var filename = fileURL.match(&amp;quot;.+/(.+?)([\?#;].*)?$&amp;quot;)[1]; var response = UrlFetchApp.fetch(fileURL); var rc = response.getResponseCode(); var blob = response.getBlob(); var resource = { &amp;quot;mimeType&amp;quot;: &amp;quot;application/vnd.google-apps.spreadsheet&amp;quot;, &amp;quot;parents&amp;quot;: [{id: folder}], &amp;quot;title&amp;quot;: filename }; var res = Drive.Files.insert(resource, blob); var fileInfo = [rc, res.</description>
    </item>
    
    <item>
      <title>Removes Duplicate JSON Elements for a Value of a Certain Key</title>
      <link>https://tanaikech.github.io/2017/04/09/removes-duplicate-json-elements-for-a-value-of-a-certain-key/</link>
      <pubDate>Sun, 09 Apr 2017 14:24:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/09/removes-duplicate-json-elements-for-a-value-of-a-certain-key/</guid>
      <description>This sample removes duplicate JSON elements for a value of a certain key. When the value of the certain key is removed, only a first duplicate element is left. Also I had wanted to be used for Google Apps Script. So it became like this.
Script :
function removeDup(arr, key){ var temp = []; var out = []; arr.forEach( function (e, i) { temp[i] = (temp.indexOf(e[key]) === -1) ? e[key] : false; if (temp[i]) out.</description>
    </item>
    
    <item>
      <title>Flattening Nested Array using CoffeeScript</title>
      <link>https://tanaikech.github.io/2017/03/31/flattening-nested-array-using-coffeescript/</link>
      <pubDate>Fri, 31 Mar 2017 10:48:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/31/flattening-nested-array-using-coffeescript/</guid>
      <description>This sample flattens a nested array using CoffeeScript.
flatten = (array) -&amp;gt; array.reduce(((x, y) -&amp;gt; if Array.isArray(y) then x.concat(flatten(y)) else x.concat(y)), []) console.log flatten [1, [2, 3, [4, 5]], 6, [7, [8, [9], 10] ,11 , 12], 13] &amp;gt;&amp;gt;&amp;gt; [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ]  </description>
    </item>
    
    <item>
      <title>How to use &#34;fields&#34; of Drive APIs</title>
      <link>https://tanaikech.github.io/2017/03/30/how-to-use-fields-of-drive-apis/</link>
      <pubDate>Thu, 30 Mar 2017 08:53:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/30/how-to-use-fields-of-drive-apis/</guid>
      <description>There are a lot of APIs on Google. When we use Google Drive APIs, they usually have &amp;ldquo;fields&amp;rdquo; as a resource. The parameter &amp;ldquo;fields&amp;rdquo; gives various information which is selected to us. This is one of important parameters. And this can be used at Google Apps Script (GAS) although that version is v2. About how to use it, there are some documents. But it is difficult to find how to use it at GAS.</description>
    </item>
    
    <item>
      <title>Retrieve old revision file from Google Drive</title>
      <link>https://tanaikech.github.io/2017/03/29/retrieve-old-revision-file-from-google-drive/</link>
      <pubDate>Wed, 29 Mar 2017 16:00:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/29/retrieve-old-revision-file-from-google-drive/</guid>
      <description>I introduce 2 kinds of methods. One is to use curl. Another is to use wget. At this time, I could know that wget can be also used as same as curl.
In order to use this, at first, please retrieve your access token and enable Drive API.
1. File ID Retrieve file id from file name.
curl -X GET -sSL \ -H &#39;Authorization: Bearer ### Access token ###&#39; \ &#39;https://www.</description>
    </item>
    
    <item>
      <title>Put a channel to a channel for golang</title>
      <link>https://tanaikech.github.io/2017/03/29/put-a-channel-to-a-channel-for-golang/</link>
      <pubDate>Wed, 29 Mar 2017 07:53:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/29/put-a-channel-to-a-channel-for-golang/</guid>
      <description>I have never heard this. I would like to use this from now.
package main import &amp;quot;fmt&amp;quot; type st struct { data1 int data2 int } func main() { c1 := make(chan *st, 1) c2 := make(chan *st, 1) c1 &amp;lt;- &amp;amp;st{1, 2} c2 &amp;lt;- &amp;lt;-c1 close(c1) close(c2) res, _ := &amp;lt;-c2 fmt.Println(res.data2) } &amp;gt;&amp;gt;&amp;gt; 2  </description>
    </item>
    
    <item>
      <title>Retrieving File ID from File Name using GAS</title>
      <link>https://tanaikech.github.io/2017/03/23/retrieving-file-id-from-file-name-using-gas/</link>
      <pubDate>Thu, 23 Mar 2017 14:24:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/23/retrieving-file-id-from-file-name-using-gas/</guid>
      <description>This is a sample script of GAS for converting file name to file id on Google Drive. Drive API is used for this. So please enable Drive API at Advanced Drive Services and Google API Console.
function nameToId(filename){ return [i.id for each (i in Drive.Files.list({q: &amp;quot;title=&#39;&amp;quot; + filename + &amp;quot;&#39; and trashed=false&amp;quot;}).items)]; }  </description>
    </item>
    
    <item>
      <title>Transposing Array From (n x m) To (m x n) for javascript</title>
      <link>https://tanaikech.github.io/2017/03/21/transposing-array-from-n-x-m-to-m-x-n-for-javascript/</link>
      <pubDate>Tue, 21 Mar 2017 08:55:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/21/transposing-array-from-n-x-m-to-m-x-n-for-javascript/</guid>
      <description>This script transposes from an array with n rows x m columns to the array with m rows x n columns. In this script, you can use array of n != m.
array = [ [a1, b1, c1, d1, e1], [a2, b2, c2, d2, e2], [a3, b3, c3, d3, e3], [a4, b4, c4, d4, e4], [a5, b5, c5, d5, e5], [a6, b6, c6, d6, e6], [a7, b7, c7, d7, e7], [a8, b8, c8, d8, e8], [a9, b9, c9, d9, e9], [a10, b10, c10, d10, e10] ]  var result = []; for (i in array[0]){ result.</description>
    </item>
    
    <item>
      <title>Download Files Without Authorization From Google Drive</title>
      <link>https://tanaikech.github.io/2017/03/20/download-files-without-authorization-from-google-drive/</link>
      <pubDate>Mon, 20 Mar 2017 14:30:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/20/download-files-without-authorization-from-google-drive/</guid>
      <description>Overview In this article, files can be downloaded without authorization.
Description When we download files from Google Drive, it usually has to use Drive API. In order to use Drive API, access token is required. If you want to make your friends download files from your Google Drive, the authorization process is to take time. Also Web Link for each files can be used. But it has to set for each files.</description>
    </item>
    
    <item>
      <title>Create Folder Tree on Google Drive</title>
      <link>https://tanaikech.github.io/2017/03/13/create-folder-tree-on-google-drive/</link>
      <pubDate>Mon, 13 Mar 2017 13:27:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/13/create-folder-tree-on-google-drive/</guid>
      <description>This is a sample script for creating a folder tree including all folders in Google Drive. For each element, parent folder and sub folder are retrieved.
Script :
var results = (function(folder, folderSt, results){ var ar = []; var folders = folder.getFolders(); while(folders.hasNext()) ar.push(folders.next()); folderSt += folder.getName() + &amp;quot;(&amp;quot; + folder.getId() + &amp;quot;)#_aabbccddee_#&amp;quot;; var array_folderSt = folderSt.split(&amp;quot;#_aabbccddee_#&amp;quot;); array_folderSt.pop() results.push(array_folderSt); ar.length == 0 &amp;amp;&amp;amp; (folderSt = &amp;quot;&amp;quot;); for (var i in ar) arguments.</description>
    </item>
    
    <item>
      <title>CLI Tool - gogauth</title>
      <link>https://tanaikech.github.io/2017/02/24/cli-tool---gogauth/</link>
      <pubDate>Fri, 24 Feb 2017 12:29:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/24/cli-tool---gogauth/</guid>
      <description>Released a CLI tool for easily retrieving accesstoken from Google OAuth2. The title is gogauth. When I have seen stackoverflow, I knew that it is difficult to retrieve accesstoken from Google OAuth2. So I made this.
Features of this CLI tool are as follows.
 Retrieves easily accesstoken from Google OAuth2 for using Drive API.
 If you have PhantomeJS, this retrieves &amp;ldquo;code&amp;rdquo; from Google using it. So you don&amp;rsquo;t need to launch your browser for retrieving &amp;ldquo;code&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Export CSV File from Spreadsheet and Make Download Button</title>
      <link>https://tanaikech.github.io/2017/02/20/export-csv-file-from-spreadsheet-and-make-download-button/</link>
      <pubDate>Mon, 20 Feb 2017 10:00:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/20/export-csv-file-from-spreadsheet-and-make-download-button/</guid>
      <description>This is a script to export a CSV file from spreadsheet and make an user download it. When the users download it, they can download by push a button made by this script.
In order to use this script, put both HTML and script in a GAS project.
html :
This file name is &amp;ldquo;download.html&amp;rdquo;.
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; Download CSV? &amp;lt;form&amp;gt; &amp;lt;input type=&amp;quot;button&amp;quot; value=&amp;quot;ok&amp;quot; onclick=&amp;quot;google.script.run .withSuccessHandler(executeDownload) .saveAsCSV();&amp;quot; /&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;script&amp;gt; function executeDownload(url) { window.</description>
    </item>
    
    <item>
      <title>Send E-mail with xlsx File Converted from Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/20/send-e-mail-with-xlsx-file-converted-from-spreadsheet/</link>
      <pubDate>Mon, 20 Feb 2017 09:56:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/20/send-e-mail-with-xlsx-file-converted-from-spreadsheet/</guid>
      <description>This is a script to send e-mail with a xlsx file converted from spreadsheet as an attachment file. Access token is necessary to use this script.
function excelSender() { var accesstoken = &amp;quot;[your accesstoken]&amp;quot;; var sheetID = &amp;quot;[sheet id]&amp;quot;; var xlsxName = &amp;quot;[output xlsx file name]&amp;quot; var params = { &amp;quot;headers&amp;quot; : {Authorization: &amp;quot;Bearer &amp;quot; + accesstoken}, &amp;quot;muteHttpExceptions&amp;quot; : true }; var dUrl = &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + sheetID + &amp;quot;/export?mimeType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot; var xlsxlFile = UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Google Drive API using GAS</title>
      <link>https://tanaikech.github.io/2017/02/17/retrieving-access-token-for-google-drive-api-using-gas/</link>
      <pubDate>Fri, 17 Feb 2017 17:25:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/17/retrieving-access-token-for-google-drive-api-using-gas/</guid>
      <description>These GASs retrieve an access token for using Google Drive API. There are 3 parts. Before you use this, please retrieve client ID, client secret and redirect uri from Google , and choose scopes.
1. Retrieving code from web This is a script to output URL for retrieving &amp;ldquo;code&amp;rdquo; from web. Please retrieve &amp;ldquo;code&amp;rdquo; by import this URL to your browser. After you run this script, using &amp;ldquo;url&amp;rdquo; got from this script, it retrieves &amp;ldquo;code&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Send E-mail with Excel file converted from Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/16/send-e-mail-with-excel-file-converted-from-spreadsheet/</link>
      <pubDate>Thu, 16 Feb 2017 11:53:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/16/send-e-mail-with-excel-file-converted-from-spreadsheet/</guid>
      <description>This sample script sends an e-mail with an Excel file exported from Spreadsheet as an attachment file.
function excelSender() { var sheetID = [Sheet ID]; var xlsxName = [Excel file name]; var params = { &amp;quot;headers&amp;quot; : {Authorization: &amp;quot;Bearer [Retrieved AccessToken]&amp;quot;}, &amp;quot;muteHttpExceptions&amp;quot; : true }; var dUrl = &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + sheetID + &amp;quot;/export?mimeType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot; var xlsxlFile = UrlFetchApp.fetch(dUrl, params).getBlob().setName(xlsxName); MailApp.sendEmail({ to: [Mail address], subject: &amp;quot;sample subject&amp;quot;, body: &amp;quot;sample body&amp;quot;, attachments: [xlsxlFile] }); }  Is ScriptApp.</description>
    </item>
    
    <item>
      <title>Download a CSV File from Spreadsheet Using Google HTML Service</title>
      <link>https://tanaikech.github.io/2017/02/16/download-a-csv-file-from-spreadsheet-using-google-html-service/</link>
      <pubDate>Thu, 16 Feb 2017 10:31:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/16/download-a-csv-file-from-spreadsheet-using-google-html-service/</guid>
      <description>Here, I introduce how to download a CSV file from spreadsheet using Google HTML Service.
 Using &amp;ldquo;onOpen()&amp;rdquo;, it addes menu for launching a dialog.   After launching the dialog, &amp;ldquo;getFileUrl()&amp;rdquo; is launched by pushing a button. &amp;ldquo;getFileUrl()&amp;rdquo; exports a CSV file and outputs download URL.
 The CSV file is downloaded by &amp;ldquo;executeDownload()&amp;rdquo;.
  Please put both HTML and GAS to a GAS project.
HTML : download.</description>
    </item>
    
    <item>
      <title>Making charts at spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/13/making-charts-at-spreadsheet/</link>
      <pubDate>Mon, 13 Feb 2017 08:57:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/13/making-charts-at-spreadsheet/</guid>
      <description>var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet(); var chart = sheet.newChart() .setChartType(Charts.ChartType.LINE) .asLineChart() .addRange(sheet.getRange(&#39;a1:a21&#39;)) .addRange(sheet.getRange(&#39;b1:b21&#39;)) .addRange(sheet.getRange(&#39;c1:c21&#39;)) .setColors([&amp;quot;green&amp;quot;, &amp;quot;red&amp;quot;]) .setBackgroundColor(&amp;quot;black&amp;quot;) .setPosition(5, 5, 0, 0) .setPointStyle(Charts.PointStyle.MEDIUM) .setOption(&#39;useFirstColumnAsDomain&#39;, true) .setOption(&#39;height&#39;, 280) .setOption(&#39;width&#39;, 480) .setOption(&#39;title&#39;, &#39;Sample chart&#39;) .setOption(&#39;hAxis&#39;, { title: &#39;x axis&#39;, minValue: 0, maxValue: 20, titleTextStyle: { color: &#39;#c0c0c0&#39;, fontSize: 20, italic: false, bold: false }, textStyle: { color: &#39;#c0c0c0&#39;, fontSize: 12, bold: false, italic: false }, baselineColor: &#39;#c0c0c0&#39;, gridlines: { color: &#39;#c0c0c0&#39;, count: 4 } }) .</description>
    </item>
    
    <item>
      <title>File Upload and Download with File Convert For curl using Drive API</title>
      <link>https://tanaikech.github.io/2017/02/08/file-upload-and-download-with-file-convert-for-curl-using-drive-api/</link>
      <pubDate>Wed, 08 Feb 2017 15:50:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/08/file-upload-and-download-with-file-convert-for-curl-using-drive-api/</guid>
      <description>It is necessary to retrieve access token on Google. Scope is as follows.
https://www.googleapis.com/auth/drive  Other mimetypes can be seen here.
Download and convert from Spreadsheet to Excel curl -X GET -sSL \ -H &amp;quot;Authorization: Bearer [Your access token]&amp;quot; \ -o &amp;quot;Excel file name&amp;quot; \ &amp;quot;https://www.googleapis.com/drive/v3/files/[File ID]/export?mimeType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot;  Upload and convert from Excel to Spreadsheet curl -X POST -sSL \ -H &amp;quot;Authorization: Bearer [Your access token]&amp;quot; \ -F &amp;quot;metadata={ \ name : &#39;[File name on Google Drive]&#39;, \ mimeType : &#39;application/vnd.</description>
    </item>
    
    <item>
      <title>Sample Array Script for Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/08/sample-array-script-for-spreadsheet/</link>
      <pubDate>Wed, 08 Feb 2017 08:50:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/08/sample-array-script-for-spreadsheet/</guid>
      <description>This is a Sample Array Script for Spreadsheet. It makes an 2D array filled by strings and number. The strings and number are column strings and row number, respectively.
However, because this is a sample, the maximum column number is 26.
function sa(row, col){ if (col &amp;gt; 26) return; var ar = new Array(row); for(var i = 0; i &amp;lt; row; i++) ar[i] = new Array(col); for (var i = 0; i &amp;lt; row; i++){ for (var j = 0; j &amp;lt; col; j++){ ar[i][j] = String.</description>
    </item>
    
    <item>
      <title>Event of onEdit() for Google spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/07/event-of-onedit-for-google-spreadsheet/</link>
      <pubDate>Tue, 07 Feb 2017 11:03:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/07/event-of-onedit-for-google-spreadsheet/</guid>
      <description>About Event Objects For example, it thinks the situation of input text of &amp;lsquo;test&amp;rsquo; to &amp;lsquo;A1&amp;rsquo; on a sheet.
When you use only &amp;lsquo;onEdit(e)&amp;rsquo; without an installing trigger, &amp;lsquo;e&amp;rsquo; has following parameters.
{authMode=LIMITED, range=Range, source=Spreadsheet, user=, value=test}  In this case, the event cannot send an e-mail because of &amp;lsquo;authMode=LIMITED&amp;rsquo;.
When you use &amp;ldquo;onEdit(e)&amp;rdquo; with an installing trigger of &amp;ldquo;Edit&amp;rdquo;, &amp;lsquo;e&amp;rsquo; has following parameters.
{authMode=FULL, range=Range, source=Spreadsheet, value=test, triggerUid=#####}  In this case, the event can send an e-mail because of &amp;lsquo;authMode=FULL&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>File upload using doPost on Google Web Apps</title>
      <link>https://tanaikech.github.io/2017/02/05/file-upload-using-dopost-on-google-web-apps/</link>
      <pubDate>Sun, 05 Feb 2017 11:40:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/05/file-upload-using-dopost-on-google-web-apps/</guid>
      <description>File upload using HTML form in GAS project Rule
 Following scripts have to be made into a project of Google Apps Script.
 Deploy the GAS project as a web application. Ref
 After updated the script, it has to be updated as a new version.
  Form.html :
&amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form&amp;gt; &amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;imageFile&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;button&amp;quot; value=&amp;quot;ok&amp;quot; onclick=&amp;quot;google.script.run.upload(this.parentNode)&amp;quot;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  GAS :
function doGet() { return HtmlService.</description>
    </item>
    
    <item>
      <title>Add next row to current row using AWK</title>
      <link>https://tanaikech.github.io/2017/02/05/add-next-row-to-current-row-using-awk/</link>
      <pubDate>Sun, 05 Feb 2017 11:03:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/05/add-next-row-to-current-row-using-awk/</guid>
      <description>File.txt :
a1 a2 a3 a4 a5 a6  Code :
awk &#39;{array[NR]=$0} END {for (i in array) {if (i&amp;gt;1) {{print array[i-1]&amp;quot;,&amp;quot;array[i]}}}}&#39; File.txt  Result :
a1,a2 a2,a3 a3,a4 a4,a5 a5,a6  After the all rows are imported to an array, it shows next row to current row under a condition of row &amp;gt; 1.</description>
    </item>
    
    <item>
      <title>Retrieving cells without blank using GAS</title>
      <link>https://tanaikech.github.io/2017/02/03/retrieving-cells-without-blank-using-gas/</link>
      <pubDate>Fri, 03 Feb 2017 10:14:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/03/retrieving-cells-without-blank-using-gas/</guid>
      <description>This is a sample script for retrieving cells without blank cells. Figure 1 shows the sample spreadsheet. In this sheet, the row 14 has one space.

           Fig. 1: Sample spreadsheet.    
Data is retrieved as follows.
 var data = SpreadsheetApp .getActiveSpreadsheet() .getActiveSheet() .getRange(&#39;a1:a30&#39;) .getValues();  1. Retrieving cells with spaces and no blank cells.</description>
    </item>
    
    <item>
      <title>One Liner Code for Netatmo</title>
      <link>https://tanaikech.github.io/2017/01/11/one-liner-code-for-netatmo/</link>
      <pubDate>Wed, 11 Jan 2017 15:00:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/01/11/one-liner-code-for-netatmo/</guid>
      <description>I made One Liner Code to retrieve data using Netatmo API. There are 2 ways. One is for windows dos. Another is for unix bash. Requirement tools are curl and jq.
windows dos &amp;gt; setlocal &amp;amp; curl -s -d &amp;quot;grant_type=password&amp;amp;client_id=&#39;#####&#39;&amp;amp;client_secret=&#39;#####&#39;&amp;amp;username=&#39;#####&#39;&amp;amp;password=&#39;#####&#39;&amp;amp;scope=read_station&amp;quot; &amp;quot;https://api.netatmo.net/oauth2/token&amp;quot; | for /f &amp;quot;usebackq tokens=*&amp;quot; %a in (`jq -r &amp;quot;.access_token&amp;quot;`) do @set a=&amp;quot;%a&amp;quot; | curl -s -d &amp;quot;access_token=%a&amp;amp;device_id=&#39;#####&#39;&amp;quot; &amp;quot;https://api.netatmo.net/api/getstationsdata&amp;quot; &amp;gt; dat.txt &amp;amp; for /f &amp;quot;usebackq tokens=*&amp;quot; %b in (`jq -r &amp;quot;.</description>
    </item>
    
    <item>
      <title>Python Library - souwapy</title>
      <link>https://tanaikech.github.io/2016/10/30/python-library---souwapy/</link>
      <pubDate>Sun, 30 Oct 2016 13:38:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/30/python-library---souwapy/</guid>
      <description>This &amp;ldquo;souwapy&amp;rdquo; is a library for summing array elements with high speed by new algorithm (Pyramid method). The speed is faster than csv and panbdas module of python and v8 engine of node.js. The souwapy module is 2.3 and 3.1 times faster than csv and pandas module, respectively. This was really surprised me. It was found that the theory was correct.
At first, I have created this theory for Google Apps Script.</description>
    </item>
    
    <item>
      <title>Element&#39;s Duplicate Number in Array at Python</title>
      <link>https://tanaikech.github.io/2016/10/21/elements-duplicate-number-in-array-at-python/</link>
      <pubDate>Fri, 21 Oct 2016 12:29:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/21/elements-duplicate-number-in-array-at-python/</guid>
      <description>Suddenly I had to need this.
This script can get the duplicate number of each element in array at Python. In this script, the duplicate number of each element is obtained and sorted by the duplicate number. This was expressed by the comprehension.
data = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;b&#39;, &#39;c&#39;, &#39;b&#39;] result = sorted({i: data.count(i) for i in set(data)}.items(), key=lambda x: x[1], reverse=True) print(result) &amp;gt;&amp;gt;&amp;gt; [(&#39;b&#39;, 4), (&#39;c&#39;, 3), (&#39;d&#39;, 2), (&#39;a&#39;, 1)]  </description>
    </item>
    
    <item>
      <title>CoffeeScript</title>
      <link>https://tanaikech.github.io/2016/10/20/coffeescript/</link>
      <pubDate>Thu, 20 Oct 2016 14:34:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/20/coffeescript/</guid>
      <description>I may be slow a bit, but I could notice much convenience of CoffeeScript just now. I didn&amp;rsquo;t know that scripts of GAS can be made by CoffeeScript up until now. This will have me work more effectively! :D</description>
    </item>
    
    <item>
      <title>GAS Library - SOUWA_GAS - Effects on Optimized Codes of Pyramid Method</title>
      <link>https://tanaikech.github.io/2016/10/13/gas-library---souwa_gas---effects-on-optimized-codes-of-pyramid-method/</link>
      <pubDate>Thu, 13 Oct 2016 15:57:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/13/gas-library---souwa_gas---effects-on-optimized-codes-of-pyramid-method/</guid>
      <description>Kanshi TANAIKE 
Abstract I have already reported that the pyramid method is one of very effectively algolithms for summing string elements in an array using Google Apps Script (GAS). This report describes the adaptability of the pyramid method to any languages except for GAS. c++ (g++), Go, Java, Javascript on Node.js, Python and Ruby were chosen as the sample languages. In those languages, there are languages which have the distinctive commands for summing the array elements.</description>
    </item>
    
    <item>
      <title>Improved Algorithms for Summation of Array Elements</title>
      <link>https://tanaikech.github.io/2016/10/13/improved-algorithms-for-summation-of-array-elements/</link>
      <pubDate>Thu, 13 Oct 2016 14:39:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/13/improved-algorithms-for-summation-of-array-elements/</guid>
      <description>Kanshi TANAIKE 
Abstract I considered an efficient algorithm for summation of array elements. All elements in an array are string. When those elements are summed using scripts, a standard method is to add each element in order. If the script is run without any optimize, the process becomes gradually sluggish, because the total amount of active data during the summation process is proportional to the square of the number of array elements.</description>
    </item>
    
    <item>
      <title>1stpost</title>
      <link>https://tanaikech.github.io/2016/09/18/1stpost/</link>
      <pubDate>Sun, 18 Sep 2016 15:02:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/09/18/1stpost/</guid>
      <description>This is a first post. Today this blog was launched. I would like to introduce some of my experimental results. I&amp;rsquo;m Japanese. So I&amp;rsquo;ll use both English and Japanese here. Thank you.</description>
    </item>
    
  </channel>
</rss>