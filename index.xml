<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tanaike</title>
    <link>https://tanaikech.github.io/</link>
    <description>Recent content on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 04 Jul 2017 15:57:20 +0900</lastBuildDate>
    <atom:link href="https://tanaikech.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Downloading Files From Google Drive Under No Authorization Using Browser</title>
      <link>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser</link>
      <pubDate>Tue, 04 Jul 2017 15:57:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser</guid>
      <description>

&lt;p&gt;&lt;a name=&#34;TOP&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/tanaikech/c5b2811bce01cbcc26ffa357df496379&#34;&gt;Gist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a sample script for downloading files from Google Drive under no authorization using browser. By using this sample, you can make other users download files from your Google Drive. Even if the other users are not Google users, they can download the files.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;demo&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170704-demo_simple.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a demonstration for downloading files from Google Drive under no authorization using browser. From the top document, You can see that an user who is not owner of Google Drive is downloading files.&lt;/p&gt;

&lt;h2 id=&#34;problems-and-workaround&#34;&gt;Problems and Workaround&lt;/h2&gt;

&lt;p&gt;In order to download files from Google Drive under no authorization, there are some problems. When files are downloaded from Google Drive, it is necessary to use Download Link and Drive API.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the case of use the Download Link for each file, only owner of Google Drive can download the files, even if the permission of files are changed as the ANYONE.&lt;/li&gt;
&lt;li&gt;In the case of use the Drive API, users have to authorize at Google using OAuth2 process.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have already known that files can download under no authorization using &lt;a href=&#34;https://tanaikech.github.io/2017/03/20/download-files-without-authorization-from-google-drive/&#34;&gt;base64&lt;/a&gt; and &lt;a href=&#34;https://tanaikech.github.io/2017/05/10/file-transfer-for-google-drive-without-authorization/&#34;&gt;byte array&lt;/a&gt;. For these problems, I solved this using base64.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script&lt;/h2&gt;

&lt;p&gt;In order to use this sample script, it is necessary to deploy Web Apps. The how to deploy Web Apps is as follows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On the Script Editor

&lt;ul&gt;
&lt;li&gt;File&lt;/li&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;li&gt;Publish&lt;/li&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &amp;ldquo;Deploy&amp;rdquo;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &amp;ldquo;OK&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then, please copy and paste following respective HTML and GAS to your script editor. You can use the sample for the script of both container-bound script and standalone script. Following image is the project pasted the sample script. You can see the 2 files in the project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170704-project.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;script&#34;&gt;Script&lt;/h3&gt;

&lt;h4 id=&#34;html&#34;&gt;HTML&lt;/h4&gt;

&lt;p&gt;Filename is &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=UTF-8&amp;quot;&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.2.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div class=&amp;quot;files&amp;quot;&amp;gt;
        &amp;lt;form&amp;gt;
            &amp;lt;table class=&amp;quot;table table-striped table-hover&amp;quot;&amp;gt;
                &amp;lt;thead&amp;gt;
                    &amp;lt;tr&amp;gt;
                        &amp;lt;th&amp;gt;Download&amp;lt;/th&amp;gt;
                        &amp;lt;th&amp;gt;FileName&amp;lt;/th&amp;gt;
                        &amp;lt;th&amp;gt;Size[byte]&amp;lt;/th&amp;gt;
                        &amp;lt;th&amp;gt;Parents&amp;lt;/th&amp;gt;
                        &amp;lt;th&amp;gt;Updated&amp;lt;/th&amp;gt;
                        &amp;lt;th&amp;gt;Created&amp;lt;/th&amp;gt;
                    &amp;lt;/tr&amp;gt;
                &amp;lt;/thead&amp;gt;
                &amp;lt;tbody&amp;gt;
                    &amp;lt;? for (var i = 0; i &amp;lt; data.length; i++) { ?&amp;gt;
                        &amp;lt;tr&amp;gt;
                            &amp;lt;td&amp;gt;
                                &amp;lt;input type=&amp;quot;checkbox&amp;quot; id=&amp;quot;checkbox&amp;quot; name=&amp;quot;fileId&amp;quot; value=&amp;quot;&amp;lt;?= data[i].file_id  ?&amp;gt;&amp;quot; /&amp;gt;
                            &amp;lt;/td&amp;gt;
                            &amp;lt;td&amp;gt;
                                &amp;lt;?= data[i].file_name ?&amp;gt;
                            &amp;lt;/td&amp;gt;
                            &amp;lt;td&amp;gt;
                                &amp;lt;?= data[i].file_size ?&amp;gt;
                            &amp;lt;/td&amp;gt;
                            &amp;lt;td&amp;gt;
                                &amp;lt;?= data[i].folder_tree ?&amp;gt;
                            &amp;lt;/td&amp;gt;
                            &amp;lt;td&amp;gt;
                                &amp;lt;?= data[i].file_updated ?&amp;gt;
                            &amp;lt;/td&amp;gt;
                            &amp;lt;td&amp;gt;
                                &amp;lt;?= data[i].file_created ?&amp;gt;
                            &amp;lt;/td&amp;gt;
                        &amp;lt;/tr&amp;gt;
                        &amp;lt;? } ?&amp;gt;
                &amp;lt;/tbody&amp;gt;
            &amp;lt;/table&amp;gt;
            &amp;lt;div class=&amp;quot;allchk&amp;quot;&amp;gt;
                &amp;lt;input type=&amp;quot;checkbox&amp;quot; id=&amp;quot;allCheck01&amp;quot;&amp;gt;
                &amp;lt;label for=&amp;quot;allCheck01&amp;quot;&amp;gt;Check All&amp;lt;/label&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;input type=&amp;quot;button&amp;quot; class=&amp;quot;create&amp;quot; value=&amp;quot;Download&amp;quot; onclick=&amp;quot;google.script.run.withSuccessHandler(executeDownload).getparams(this.parentNode)&amp;quot;&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;a id=&amp;quot;dl&amp;quot; target=&amp;quot;_blank&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;script&amp;gt;
$(function() {
    $(&#39;.table tr&#39;).click(function(event) {
        if (event.target.type !== &#39;checkbox&#39;) {
            $(&#39;:checkbox&#39;, this).trigger(&#39;click&#39;);
        }
    });

    $(&#39;.allchk input&#39;).click(function() {
        var files = $(&#39;.files&#39;).find(&#39;input&#39;);
        if ($(this).is(&#39;:checked&#39;)) {
            $(files).prop(&#39;checked&#39;, true);
        } else {
            $(files).prop(&#39;checked&#39;, false);
        }
    });
});

function executeDownload(base64dat) {
    $(&amp;quot;#dl&amp;quot;).prop(&amp;quot;href&amp;quot;, window.URL.createObjectURL(toBlob(base64dat))).prop(&amp;quot;download&amp;quot;, &amp;quot;dl_&amp;quot; + getfmtDate() + &amp;quot;.zip&amp;quot;)[0].click();
}

function toBlob(base64) {
    var bin = atob(base64.replace(/^.*,/, &#39;&#39;));
    var buffer = new Uint8Array(bin.length);
    for (var i = 0; i &amp;lt; bin.length; i++) {
        buffer[i] = bin.charCodeAt(i);
    }
    try {
        var blob = new Blob([buffer.buffer], {
            type: &#39;application/zip&#39;
        });
    } catch (e) {
        return false;
    }
    return blob;
}

function getfmtDate() {
    var dt = new Date();
    return dt.getFullYear().toString() +
        cd((dt.getMonth() + 1).toString()) +
        cd(dt.getDate().toString()) +
        &amp;quot;_&amp;quot; +
        cd(dt.getHours().toString()) +
        cd(dt.getMinutes().toString()) +
        cd(dt.getSeconds().toString());
};

function cd(dat) {
    return dat.length == 1 ? &amp;quot;0&amp;quot; + dat : dat;
};
&amp;lt;/script&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;google-apps-script&#34;&gt;Google Apps Script&lt;/h4&gt;

&lt;p&gt;Filename is &lt;code&gt;code.gs&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var folderId = &amp;quot;### Folder ID ###&amp;quot;; // &amp;lt;--- Your shared folder ID

function doGet() {
    var t = HtmlService.createTemplateFromFile(&#39;index&#39;);
    t.data = getFileList();
    return t.evaluate();
}

function getparams(e) {
    return zipping(typeof(e.fileId) == &amp;quot;string&amp;quot; ? [e.fileId] : e.fileId);
}

function getFileList() {
    var folderlist = (function(folder, folderSt, results) {
        var ar = [];
        var folders = folder.getFolders();
        while (folders.hasNext()) ar.push(folders.next());
        folderSt += folder.getId() + &amp;quot;#_aabbccddee_#&amp;quot;;
        var array_folderSt = folderSt.split(&amp;quot;#_aabbccddee_#&amp;quot;);
        array_folderSt.pop()
        results.push(array_folderSt);
        ar.length == 0 &amp;amp;&amp;amp; (folderSt = &amp;quot;&amp;quot;);
        for (var i in ar) arguments.callee(ar[i], folderSt, results);
        return results;
    })(DriveApp.getFolderById(folderId), &amp;quot;&amp;quot;, []);
    var localTimeZone = Session.getScriptTimeZone();
    var filelist = [];
    var temp = {};
    for (var i in folderlist) {
        var folderid = folderlist[i][folderlist[i].length - 1];
        var folder = DriveApp.getFolderById(folderid);
        var files = folder.getFiles();
        while (files.hasNext()) {
            var file = files.next();
            temp = {
                folder_tree: function(folderlist, i) {
                    if (i &amp;gt; 0) {
                        return &amp;quot;/&amp;quot; + [DriveApp.getFolderById(folderlist[i][j]).getName() for (j in folderlist[i])
                            if (j &amp;gt; 0)].join(&amp;quot;/&amp;quot;) + &amp;quot;/&amp;quot;;
                    } else {
                        return &amp;quot;/&amp;quot;;
                    }
                }(folderlist, i),
                file_id: file.getId(),
                file_name: file.getName(),
                file_size: file.getBlob().getBytes().length,
                file_created: Utilities.formatDate(file.getDateCreated(), localTimeZone, &amp;quot;yyyy/MM/dd HH:mm:ss&amp;quot;),
                file_updated: Utilities.formatDate(file.getLastUpdated(), localTimeZone, &amp;quot;yyyy/MM/dd HH:mm:ss&amp;quot;),
            };
            filelist.push(temp);
            temp = {}
        }
    }
    var sortedlist = filelist.sort(function(e1, e2) {
        return (e1.folder_tree &amp;gt; e2.folder_tree ? 1 : -1) });
    return sortedlist;
}

function zipping(fileId) {
    var blobs = [];
    var mimeInf = [];
    fileId.forEach(function(e) {
        try {
            var file = DriveApp.getFileById(e);
            var mime = file.getMimeType();
            var name = file.getName();
        } catch (e) {
            return e
        }
        Logger.log(mime)
        var blob;
        if (mime.indexOf(&#39;google-apps&#39;) &amp;gt; 0) {
            mimeInf =
                mime == &amp;quot;application/vnd.google-apps.spreadsheet&amp;quot; ? [&amp;quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot;, name + &amp;quot;.xlsx&amp;quot;] : mime == &amp;quot;application/vnd.google-apps.document&amp;quot; ? [&amp;quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&amp;quot;, name + &amp;quot;.docx&amp;quot;] : mime == &amp;quot;application/vnd.google-apps.presentation&amp;quot; ? [&amp;quot;application/vnd.openxmlformats-officedocument.presentationml.presentation&amp;quot;, name + &amp;quot;.pptx&amp;quot;] : [&amp;quot;application/pdf&amp;quot;, name + &amp;quot;.pdf&amp;quot;];
            blob = UrlFetchApp.fetch(&amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + e + &amp;quot;/export?mimeType=&amp;quot; + mimeInf[0], {
                method: &amp;quot;GET&amp;quot;,
                headers: { &amp;quot;Authorization&amp;quot;: &amp;quot;Bearer &amp;quot; + ScriptApp.getOAuthToken() },
                muteHttpExceptions: true
            }).getBlob().setName(mimeInf[1]);
        } else {
            blob = UrlFetchApp.fetch(&amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + e + &amp;quot;?alt=media&amp;quot;, {
                method: &amp;quot;GET&amp;quot;,
                headers: { &amp;quot;Authorization&amp;quot;: &amp;quot;Bearer &amp;quot; + ScriptApp.getOAuthToken() },
                muteHttpExceptions: true
            }).getBlob().setName(name);
        }
        blobs.push(blob);
    });
    var zip = Utilities.zip(blobs, Utilities.formatDate(new Date(), Session.getScriptTimeZone(), &amp;quot;yyyyMMdd_HHmmss&amp;quot;) + &#39;.zip&#39;);
    var bytedat = DriveApp.createFile(zip).getBlob().getBytes();
    return Utilities.base64Encode(bytedat);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;flow-of-sample-script&#34;&gt;Flow of sample script&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;All files in a folder that owner of Google Drive decided display as a list using &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Users access to the site which was used by Web Apps using own browser.&lt;/li&gt;
&lt;li&gt;When users clicked the files from the list and pushed DOWNLOAD button, the files are converted to base64 using Google Apps Script.&lt;/li&gt;
&lt;li&gt;The converted-base64 data are transfered to the site and are converted to blob using Javascript in HTML.&lt;/li&gt;
&lt;li&gt;The blob data are compressed by ZIP, and then they are downloaded.&lt;/li&gt;
&lt;li&gt;Google Spreadsheet, Google Document and Google Slide are converted to Microsoft Excel, Word and Powerpoint, respectively. Images and PDF are not converted to other format.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;sample-folder-structure&#34;&gt;Sample Folder Structure&lt;/h4&gt;

&lt;p&gt;The folder structure as a sample is as follows. &lt;code&gt;sharedFolder&lt;/code&gt; is the top directory that owner was set. All of files and directories in the directory that owner defined is displayed as a list. At the &lt;a href=&#34;#demo&#34;&gt;demonstration&lt;/a&gt;, you can see it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170704-samplestructure.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/2228382/select-all-checkboxes-with-jquery&#34;&gt;Select all checkboxes with jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/18296850/click-table-rows-to-select-checkbox-using-jquery&#34;&gt;Click table rows to select checkbox using jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/uin010bm/items/150003f016287750cf34&#34;&gt;Converting from base64 to blob&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;#TOP&#34;&gt;TOP&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - gislack</title>
      <link>https://tanaikech.github.io/2017/06/30/updated-cli-tool---gislack</link>
      <pubDate>Fri, 30 Jun 2017 11:40:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/30/updated-cli-tool---gislack</guid>
      <description>&lt;p&gt;gislack is a CLI tool to submit files to both Gist and Slack.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;v1.0.1 (June 30, 2017)

&lt;ul&gt;
&lt;li&gt;Some modifications related to error handling.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please check it out. &lt;a href=&#34;https://github.com/tanaikech/gislack&#34;&gt;https://github.com/tanaikech/gislack&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/06/29/updated-gas-library---imgapp</link>
      <pubDate>Thu, 29 Jun 2017 16:09:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/29/updated-gas-library---imgapp</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/tanaikech/ImgApp&#34;&gt;ImgApp&lt;/a&gt; was updated to v1.1.0. New method was added.&lt;/p&gt;

&lt;h2 id=&#34;2-doresize&#34;&gt;2. doResize()&lt;/h2&gt;

&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;

&lt;p&gt;This method is for resizing images.&lt;/p&gt;

&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;Unfortunately, there are no methods to resize images at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and resizes the image using &lt;code&gt;setWidth()&lt;/code&gt; and &lt;code&gt;setHeight()&lt;/code&gt;. But in this method, the resized blob cannot be retrieved. So although I had thought of other workaround, I had not been able to find it. Recently, I accidentally discovered the other workaround &lt;code&gt;doResize()&lt;/code&gt;. Since it was found that this workaround can be surely used, I added this to ImgApp.&lt;/p&gt;

&lt;h3 id=&#34;demo&#34;&gt;Demo&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/tanaikech/ImgApp/raw/master/images/demo2.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a demonstration for this method. As a sample. at first, the size of source image is retrieved using &lt;code&gt;getSize()&lt;/code&gt;. Then, the source image is resized by the inputted width. &lt;strong&gt;The play speed is the real time.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This sample image is created by &lt;a href=&#34;http://k3-studio.deviantart.com/art/Chromatic-lituus-415318548&#34;&gt;k3-studio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can see the detail information here &lt;a href=&#34;https://github.com/tanaikech/ImgApp&#34;&gt;https://github.com/tanaikech/ImgApp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GAS Library - ImgApp - getSize()</title>
      <link>https://tanaikech.github.io/2017/06/27/gas-library---imgapp---getsize</link>
      <pubDate>Tue, 27 Jun 2017 16:21:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/27/gas-library---imgapp---getsize</guid>
      <description>

&lt;h2 id=&#34;1-getsize&#34;&gt;1. getSize()&lt;/h2&gt;

&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;

&lt;p&gt;This method is for retrieving the width and height of image as the unit of pixel.&lt;/p&gt;

&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;Unfortunately, there are no methods to directly retrieve the image size at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and retrieves the size using &lt;code&gt;getWidth()&lt;/code&gt; and &lt;code&gt;getHeight()&lt;/code&gt;. But in this method, it uses much time and resources on Google. So I thought of retrieving the information of image at the binary level, and created this. By this, the low process cost could be achieved.&lt;/p&gt;

&lt;h3 id=&#34;demo&#34;&gt;Demo&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/tanaikech/ImgApp/raw/master/images/demo1.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a demonstration for this method. the size information is retrieved from BMP, GIF, PNG and JPG files. The play speed is the real time. From this demo, you can see the speed for retrieving the size information from files.&lt;/p&gt;

&lt;p&gt;This sample image is created by &lt;a href=&#34;http://k3-studio.deviantart.com/art/Overpass-413875385&#34;&gt;k3-studio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can see the detail information here &lt;a href=&#34;https://github.com/tanaikech/ImgApp&#34;&gt;https://github.com/tanaikech/ImgApp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text Plugin - gislacks</title>
      <link>https://tanaikech.github.io/2017/06/22/sublime-text-plugin---gislacks</link>
      <pubDate>Thu, 22 Jun 2017 13:33:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/22/sublime-text-plugin---gislacks</guid>
      <description>

&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;This is a plugin of Sublime Text 3 for submitting files to both Gist and Slack.&lt;/p&gt;

&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;

&lt;p&gt;I like to use Sublime Text for developing scripts. And when I discuss about developing scripts, I often use Slack. When I submitted a script to Slack, I had saved the script to Gist as a backup. I had done manually this on my browser. Namely, I wanted to be saving the revision of script while I&amp;rsquo;m discussing about the script at Slack. One day, I wished this process had been able to be automatically run. So I created this plugin and &lt;a href=&#34;https://github.com/tanaikech/gislack/&#34;&gt;gislack of a CLI tool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I had created and used this by only myself, Recently, I thought that this also might be useful for other developers. So I published this. If you felt this is useful, I&amp;rsquo;m glad.&lt;/p&gt;

&lt;p&gt;By this, the local environment for developing Google Apps Script (GAS) became more convenient. ;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/demo_gislack.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;#3366CC&#34;&gt;&lt;strong&gt;The detail information and how to get this are &lt;a href=&#34;https://github.com/tanaikech/gislacks&#34;&gt;https://github.com/tanaikech/gislacks&lt;/a&gt;.&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;This was published at &lt;a href=&#34;https://packagecontrol.io/packages/gislacks&#34;&gt;https://packagecontrol.io/packages/gislacks&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CLI Tool - gislack</title>
      <link>https://tanaikech.github.io/2017/06/22/cli-tool---gislack</link>
      <pubDate>Thu, 22 Jun 2017 12:59:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/22/cli-tool---gislack</guid>
      <description>

&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;This is a CLI tool to submit files to both Gist and Slack.&lt;/p&gt;

&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;

&lt;p&gt;When I discuss about developing scripts, I often use Slack. When I submitted a script to Slack, I had saved the script to Gist as a backup. I had done manually this on my browser. Namely, I wanted to be saving the revision of script while I&amp;rsquo;m discussing about the script at Slack. Recently, I wished this process had been able to be automatically run. So I created this tool.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/demo_gislack.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;#3366CC&#34;&gt;&lt;strong&gt;The detail information and how to get this are &lt;a href=&#34;https://github.com/tanaikech/gislack&#34;&gt;https://github.com/tanaikech/gislack&lt;/a&gt;.&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go Library - getcode</title>
      <link>https://tanaikech.github.io/2017/06/21/go-library---getcode</link>
      <pubDate>Wed, 21 Jun 2017 14:17:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/21/go-library---getcode</guid>
      <description>

&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;

&lt;p&gt;This is a Golang library to automatically get an authorization code for retrieving access token using OAuth2.&lt;/p&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;When it retrieves an access token and refresh token using OAuth2, the code for retrieving them has to be got by authorization on own browser. In order to retrieve the code, in generally, users have to click the authorization button and copy the code on the browser. This library can be automatically got the code by launching HTML server as a redirected server. At first, I have used this for retrieving the code from Google. But recently I noticed that this can be used for other sites. They are Google, GitHub, Slack and so on. This library can be used for creating such applications.&lt;/p&gt;

&lt;p&gt;This method was used for gogauth. Next, it was used for ggsrun And, this was recreated as a library.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can get this from &lt;a href=&#34;https://github.com/tanaikech/getcode&#34;&gt;https://github.com/tanaikech/getcode&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Google APIs</title>
      <link>https://tanaikech.github.io/2017/06/21/retrieving-access-token-for-google-apis</link>
      <pubDate>Wed, 21 Jun 2017 10:24:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/21/retrieving-access-token-for-google-apis</guid>
      <description>

&lt;p&gt;This sample is for retrieving access token for Google APIs. I created this for studying &lt;code&gt;newStateToken()&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;script&#34;&gt;Script :&lt;/h2&gt;

&lt;p&gt;In order to use this script, please retrieve client ID and client Secret, and deploy Web Apps, and run doGet() from Web Apps.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var clientId = &amp;quot;#####&amp;quot;,
    clientSecret = &amp;quot;#####&amp;quot;,
    scopes = &amp;quot;#####&amp;quot;,
    redirectUri = &amp;quot;#####&amp;quot;,
    baseurl = &amp;quot;https://accounts.google.com/o/oauth2/&amp;quot;;

function doGet() {
  return HtmlService.createHtmlOutput(
    &amp;quot;&amp;lt;input type=\&amp;quot;button\&amp;quot; value=\&amp;quot;Auth\&amp;quot; onclick=\&amp;quot;window.open(&#39;&amp;quot; +
    baseurl +
    &amp;quot;auth?state=&amp;quot; + ScriptApp.newStateToken().withMethod(&amp;quot;callback&amp;quot;).withTimeout(300).createToken() +
    &amp;quot;&amp;amp;client_id=&amp;quot; + clientId +
    &amp;quot;&amp;amp;redirect_uri=&amp;quot; + redirectUri +
    &amp;quot;&amp;amp;scope=&amp;quot; + scopes +
    &amp;quot;&amp;amp;response_type=code&amp;amp;access_type=offline&amp;amp;approval_prompt=force&amp;quot; +
    &amp;quot;&#39;, &#39;Authorization&#39;, &#39;width=500,height=600&#39;);\&amp;quot;&amp;gt;&amp;quot;
  );
}

function callback(e) {
  return HtmlService.createHtmlOutput(
    UrlFetchApp.fetch(baseurl + &amp;quot;token&amp;quot;, {
      method: &amp;quot;POST&amp;quot;,
      payload: {
        client_id: clientId,
        client_secret: clientSecret,
        redirect_uri: redirectUri,
        code: e.parameter.code,
        grant_type: &amp;quot;authorization_code&amp;quot;
      },
      muteHttpExceptions: true
  }).getContentText());
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;p&gt;When I had made this sample script, I had encountered a strange error. So I searched about this.&lt;/p&gt;

&lt;p&gt;Recently, the specification was changed. You can see at following blog.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.googleblog.com/2017/05/updating-developer-identity-guidelines.html&#34;&gt;&lt;strong&gt;Updating developer identity guidelines and registration processes to protect users&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By this, when access token is retrieved on web, it is necessary to register your apps to OAuth Developer Verification form for some scopes. The error is as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;400. That’s an error.

Error: invalid_scope

You don&#39;t have permission to access some scopes.
Your project is trying to access scopes that need to go through the verification process.
{invalid = [### scope ###]}
If you need to use one of these scopes, submit a verification request.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It has already appeared at scopes for gmail and drive. The scopes for calendar can be used.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - SOUWA</title>
      <link>https://tanaikech.github.io/2017/06/19/updated-gas-library---souwa</link>
      <pubDate>Mon, 19 Jun 2017 07:06:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/19/updated-gas-library---souwa</guid>
      <description>&lt;p&gt;SOUWA means summing in Japanese. SOUWA can sum string elements in an array at the high speed. The speed of SOUWA with &lt;strong&gt;the pyramid algorithm is about 380 times faster than that of the standard method&lt;/strong&gt;. New algorithm for summing array elements was developed for SOUWA. You can see the detailed report of this library at here. If you are interested in this, I&amp;rsquo;m glad.&lt;/p&gt;

&lt;p&gt;It was updated to v1.0.2. Please check it out. &lt;a href=&#34;https://github.com/tanaikech/SOUWA_GAS&#34;&gt;https://github.com/tanaikech/SOUWA_GAS&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Benchmark: Retrieving Values from Deep Nested JSON at Golang</title>
      <link>https://tanaikech.github.io/2017/06/17/benchmark-retrieving-values-from-deep-nested-json-at-golang</link>
      <pubDate>Sat, 17 Jun 2017 10:06:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/17/benchmark-retrieving-values-from-deep-nested-json-at-golang</guid>
      <description>

&lt;p&gt;This sample script is for retrieving values from a deep nested JSON. There are 2 patterns. So for these, the benchmark were measured.&lt;/p&gt;

&lt;h2 id=&#34;script&#34;&gt;Script :&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;encoding/json&amp;quot;
    &amp;quot;testing&amp;quot;
)

const (
    data = `{
      &amp;quot;A_key1&amp;quot;: {
        &amp;quot;B_key1&amp;quot;: {
          &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;
        }
      }
    }`
)

func BenchmarkB1(b *testing.B) {
    b.ResetTimer()
    for i := 0; i &amp;lt; b.N; i++ {
        var p map[string]interface{}
        json.Unmarshal([]byte(data), &amp;amp;p)
        a1 := p[&amp;quot;A_key1&amp;quot;]
        a2 := p[&amp;quot;A_key1&amp;quot;].(map[string]interface{})[&amp;quot;B_key1&amp;quot;]
        a3 := p[&amp;quot;A_key1&amp;quot;].(map[string]interface{})[&amp;quot;B_key1&amp;quot;].(map[string]interface{})[&amp;quot;C_key&amp;quot;]
        _ = a1 // --&amp;gt; map[B_key1:map[C_key:value]]
        _ = a2 // --&amp;gt; map[C_key:value]
        _ = a3 // --&amp;gt; value
    }
}

func BenchmarkB2(b *testing.B) {
    b.ResetTimer()
    for i := 0; i &amp;lt; b.N; i++ {
        var p map[string]interface{}
        json.Unmarshal([]byte(data), &amp;amp;p)
        b1 := p[&amp;quot;A_key1&amp;quot;]
        temp, _ := json.Marshal(b1)
        json.Unmarshal(temp, &amp;amp;p)
        b2 := p[&amp;quot;B_key1&amp;quot;]
        temp, _ = json.Marshal(b2)
        json.Unmarshal(temp, &amp;amp;p)
        b3 := p[&amp;quot;C_key&amp;quot;]
        _ = b1 // --&amp;gt; map[B_key1:map[C_key:value]]
        _ = b2 // --&amp;gt; map[C_key:value]
        _ = b3 // --&amp;gt; value
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go test -bench .
BenchmarkB1-4             300000              4177 ns/op
BenchmarkB2-4             100000             13619 ns/op
PASS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It was found that the process cost of &lt;code&gt;json.Unmarshal()&lt;/code&gt; was high. &lt;code&gt;json.Unmarshal()&lt;/code&gt; for test 2 is 3 times larger than that for test 1.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reopening Current File as a File with New Name at Sublime</title>
      <link>https://tanaikech.github.io/2017/06/15/reopening-current-file-as-a-file-with-new-name-at-sublime</link>
      <pubDate>Thu, 15 Jun 2017 09:52:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/15/reopening-current-file-as-a-file-with-new-name-at-sublime</guid>
      <description>&lt;p&gt;This is for Sublime Text. This sample is for reopening current file as a file with new file name. The current file is closed when reopening a new file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;newfilename = &amp;quot;new file name&amp;quot;
contents = self.view.substr(sublime.Region(0, self.view.size()))
window = self.view.window()
window.run_command(&#39;close_file&#39;)
view = window.new_file()
view.set_name(newfilename)
view.settings().set(&amp;quot;auto_indent&amp;quot;, False)
view.run_command(&amp;quot;insert&amp;quot;, {&amp;quot;characters&amp;quot;: contents})
view.set_scratch(True)
view.run_command(&amp;quot;prompt_save_as&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Flow of this sample&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy all text on current file to memory (contents).&lt;/li&gt;
&lt;li&gt;Close current file.&lt;/li&gt;
&lt;li&gt;Create new file with new file name.&lt;/li&gt;
&lt;li&gt;Paste contents to new file.&lt;/li&gt;
&lt;li&gt;Open dialog box for saving new file.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Search Route and Embedding Map using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/14/search-route-and-embedding-map-using-custom-function-on-spreadsheet</link>
      <pubDate>Wed, 14 Jun 2017 17:35:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/14/search-route-and-embedding-map-using-custom-function-on-spreadsheet</guid>
      <description>

&lt;p&gt;This sample script is for searching route between place A and B and embedding a map by custom function on Spreadsheet.&lt;/p&gt;

&lt;p&gt;I think that this method is one of various ideas.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;When the map is embedded to a cell on spreadsheet as an image, the function &lt;code&gt;=IMAGE()&lt;/code&gt; is suitable for this situation. However, &lt;code&gt;Class Maps&lt;/code&gt;, &lt;code&gt;setFormula()&lt;/code&gt; for importing &lt;code&gt;=IMAGE()&lt;/code&gt; and &lt;code&gt;DriveApp.createFile()&lt;/code&gt; for creating images from maps also cannot be used for custom functions.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;In order to avoid these limitations, I used &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;. From previous research, it has been found that Web Apps can avoid various limitations. Also in the case of this situation, Web Apps could avoid the above limitations.&lt;/p&gt;

&lt;p&gt;To use this sample script, please deploy Web Apps as follows.&lt;/p&gt;

&lt;p&gt;On the Script Editor,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Publish

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;Deploy&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it deploys Web Apps, the approval required authorization can be done, simultaneously.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script :&lt;/h2&gt;

&lt;p&gt;Please copy and paste this script to a bound script of spreadsheet. This sample uses &lt;code&gt;UrlShortener API&lt;/code&gt;. So before use this, please enable UrlShortener API at Advanced Google Services and console API.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var folderId = &#39;### Folder ID ###&#39;; // Please input this.

function getroute(pos1, pos2, mode) {
  var ac = SpreadsheetApp.getActiveSheet().getActiveCell();
  var q1 = &#39;?pos1=&#39; + pos1;
  var q2 = &#39;&amp;amp;pos2=&#39; + pos2;
  var q3 = &#39;&amp;amp;mode=&#39; + mode;
  var q4 = &#39;&amp;amp;row=&#39; + ac.getRow();
  var q5 = &#39;&amp;amp;col=&#39; + ac.getColumn();
  UrlFetchApp.fetch(ScriptApp.getService().getUrl() + q1 + q2 + q3 + q4 + q5);
}

function doGet(e) {
  var data = createMap(e.parameters.pos1, e.parameters.pos2, e.parameters.mode);
  if (data) {
    try {
      var blob = UrlFetchApp.fetch(data[0]).getBlob().setName(e.parameters.pos1 + &#39;_&#39; + e.parameters.pos2);
      var file = DriveApp.getFolderById(folderId).createFile(blob);
      file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
      SpreadsheetApp
      .getActiveSheet()
      .getRange(e.parameters.row, e.parameters.col, 1, 4)
      .setFormulas([[
        &#39;=T(&amp;quot;&#39; + data[1].duration.value + &#39;&amp;quot;)&#39;,
        &#39;=T(&amp;quot;&#39; + data[1].distance.value + &#39;&amp;quot;)&#39;,
        &#39;=T(&amp;quot;&#39; + data[0] + &#39;&amp;quot;)&#39;,
        &#39;=IMAGE(&amp;quot;&#39; + &#39;http://drive.google.com/uc?id=&#39; + file.getId() + &#39;&amp;quot;)&#39;,
      ]]);
    } catch(m) {
      err(e.parameters.row, e.parameters.col);
    }
  } else {
    err(e.parameters.row, e.parameters.col);
  }
}

function createMap(pos1s, pos2s, mode) {
  var geo = Maps.newGeocoder();
  var pos1 = geo.geocode(pos1s).results[0];
  var pos2 = geo.geocode(pos2s).results[0];
  var map = Maps.newStaticMap().setSize(1000, 1000).setLanguage(&#39;en&#39;);
  var directions = Maps.newDirectionFinder()
  .setOrigin(pos1.geometry.location.lat, pos1.geometry.location.lng)
  .setDestination(pos2.geometry.location.lat, pos2.geometry.location.lng)
  .setMode(function(mode) {
    switch (mode) {
      case &#39;transit&#39;: return Maps.DirectionFinder.Mode.TRANSIT; break;
      case &#39;driving&#39;: return Maps.DirectionFinder.Mode.DRIVING; break;
      case &#39;walking&#39;: return Maps.DirectionFinder.Mode.WALKING; break;
      case &#39;bicycling&#39;: return Maps.DirectionFinder.Mode.BICYCLING; break;
      default : return Maps.DirectionFinder.Mode.DRIVING; break;
    }
  }(mode))
  .setDepart(new Date())
  .getDirections();
  map.setPathStyle(5, Maps.StaticMap.Color.GREEN, null);
  map.beginPath();
  directions.routes.forEach(function(e1) {
    e1.legs.forEach(function(e2) {
      e2.steps.forEach(function(e3) {
        map.addPath(Maps.decodePolyline(e3.polyline.points));
      });
    });
  });
  map.endPath();
  map.setMarkerStyle(Maps.StaticMap.MarkerSize.MID, Maps.StaticMap.Color.RED, &#39;A&#39;).addMarker(pos1s);
  map.setMarkerStyle(Maps.StaticMap.MarkerSize.MID, Maps.StaticMap.Color.BLUE, &#39;B&#39;).addMarker(pos2s);
  try {
    return [UrlShortener.Url.insert({longUrl: map.getMapUrl()}).id, directions.routes[0].legs[0]];
  } catch(e) {
    return null;
  }
}

function err(row, col) {
  SpreadsheetApp
    .getActiveSheet()
    .getRange(row, col, 1, 2)
    .setFormulas([[
      &#39;=T(&amp;quot;Route was not found.&amp;quot;)&#39;,
      &#39;=T(&amp;quot;Route was not found.&amp;quot;)&#39;,
  ]]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flow-of-script&#34;&gt;Flow of Script :&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;getroute()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input &lt;code&gt;=getroute(A2, B2, C2)&lt;/code&gt; in cell &lt;code&gt;D2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;fetch()&lt;/code&gt;, sends data of &lt;code&gt;&amp;quot;Tokyo station&amp;quot;, &amp;quot;Ginza station&amp;quot;, &amp;quot;transit&amp;quot;&lt;/code&gt; and the inputted coordinate to &lt;code&gt;doGet()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;doGet()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;doGet()&lt;/code&gt;, get the data.&lt;/li&gt;
&lt;li&gt;Searches the route from &amp;ldquo;Tokyo station&amp;rdquo; to &amp;ldquo;Ginza station&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Creates the map with the route.&lt;/li&gt;
&lt;li&gt;Saves a map as an image. (in this case, saves as PNG)&lt;/li&gt;
&lt;li&gt;Updates a permission of the image file to use for &lt;code&gt;=IMAGE()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Embeds the text data and image using &lt;code&gt;=T()&lt;/code&gt; and &lt;code&gt;=IMAGE()&lt;/code&gt; which was imported by &lt;code&gt;setFormula()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;By inputting &lt;code&gt;=getroute(A2, B2, C2)&lt;/code&gt; in cell &lt;code&gt;D2&lt;/code&gt; as a custom function, following result can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Although this demo movie seems short loading time, this loading time is edited. Actual loading time is about 40 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170614_demo.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When the custom function &lt;code&gt;getroute()&lt;/code&gt; is used, loading time is about 40 seconds. (I don&amp;rsquo;t know whether this occurs only my environment.)&lt;/li&gt;
&lt;li&gt;Permissions of the created image are &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/access&#34;&gt;ANYONE_WITH_LINK&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/permission&#34;&gt;VIEW&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;related-tips&#34;&gt;Related Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet/&#34;&gt;Embedding Animation GIF in A Cell on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/&#34;&gt;OCR using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Map to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Chart to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - goris</title>
      <link>https://tanaikech.github.io/2017/06/13/updated-cli-tool---goris</link>
      <pubDate>Tue, 13 Jun 2017 10:28:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/13/updated-cli-tool---goris</guid>
      <description>&lt;p&gt;goris is a CLI tool to search for images with Google Reverse Image Search.&lt;/p&gt;

&lt;p&gt;Today, it was updated to v1.1.0. Please check it out. &lt;a href=&#34;https://github.com/tanaikech/goris&#34;&gt;https://github.com/tanaikech/goris&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When images are matched to a searched image, web pages with matching images are retrieved. These are web pages displayed on Google top page. When this is not used, images are retrieved. This was added as a boolean option. (This was added by a request.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Giving and Retrieving Parameters for Chart at GAS</title>
      <link>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas</link>
      <pubDate>Mon, 12 Jun 2017 11:11:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas</guid>
      <description>

&lt;p&gt;This sample script is for retrieving parameters from a chart. The chart created by both Google Apps Script and manually operation can be used.&lt;/p&gt;

&lt;h2 id=&#34;creates-chart&#34;&gt;Creates Chart&lt;/h2&gt;

&lt;p&gt;When a chart is created, it supposes following parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var parameters = {
  &amp;quot;title&amp;quot;: &amp;quot;x axis&amp;quot;,
  &amp;quot;fontName&amp;quot;: &amp;quot;Arial&amp;quot;,
  &amp;quot;minValue&amp;quot;: 0,
  &amp;quot;maxValue&amp;quot;: 100,
  &amp;quot;titleTextStyle&amp;quot;: {
    &amp;quot;color&amp;quot;: &amp;quot;#c0c0c0&amp;quot;,
    &amp;quot;fontSize&amp;quot;: 10,
    &amp;quot;fontName&amp;quot;: &amp;quot;Roboto&amp;quot;,
    &amp;quot;italic&amp;quot;: true,
    &amp;quot;bold&amp;quot;: false
  }
};

.setOption(&#39;hAxis&#39;, parameters)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;retrieve-parameters-from-chart&#34;&gt;Retrieve Parameters From Chart&lt;/h2&gt;

&lt;p&gt;For the chart created by above parameters, in order to retrieve the parameters, it uses following script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var hAxis_title = chart.getOptions().get(&#39;hAxis.title&#39;)
var hAxis_fontName = chart.getOptions().get(&#39;hAxis.fontName&#39;)
var hAxis_minValue = chart.getOptions().get(&#39;hAxis.minValue&#39;)
var hAxis_maxValue = chart.getOptions().get(&#39;hAxis.maxValue&#39;)
var hAxis_titleTextStyle_color = chart.getOptions().get(&#39;hAxis.titleTextStyle.color&#39;)
var hAxis_titleTextStyle_fontSize = chart.getOptions().get(&#39;hAxis.titleTextStyle.fontSize&#39;)
var hAxis_titleTextStyle_fontName = chart.getOptions().get(&#39;hAxis.titleTextStyle.fontName&#39;)
var hAxis_titleTextStyle_italic = chart.getOptions().get(&#39;hAxis.titleTextStyle.italic&#39;)
var hAxis_titleTextStyle_bold = chart.getOptions().get(&#39;hAxis.titleTextStyle.bold&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Result :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x axis
Arial
0.0
100.0
#c0c0c0
10.0
Roboto
true
false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At Google chart, the parameters is constructed by JSON data. So when the chart is created, JSON data is used.
In the same way, when the parameters is retrieved from the chart, it retrieves from the JSON data.&lt;/p&gt;

&lt;p&gt;By using this method, it is possible to create a Google Apps Script from the charts which was manually created.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Error Handling for Subprocess at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python</link>
      <pubDate>Fri, 09 Jun 2017 14:27:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python</guid>
      <description>&lt;p&gt;This sample is for error handling for subprocess.Popen. It confirms whether the execution file is existing. If the execution file is also not in the path, the error message is shown.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import subprocess

res = subprocess.Popen(
    &amp;quot;application&amp;quot;,  #  &amp;lt;- Execution file
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
    shell=True
).communicate()

if len(res[1]) == 0:
    print(&amp;quot;ok: Application is existing.&amp;quot;)
else:
    print(&amp;quot;Error: Application is not found.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>