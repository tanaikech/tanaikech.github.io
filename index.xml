<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tanaike</title>
    <link>https://tanaikech.github.io/</link>
    <description>Recent content on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Sun, 04 Jun 2017 12:02:28 +0900</lastBuildDate>
    <atom:link href="https://tanaikech.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Embedding a Map to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet</link>
      <pubDate>Sun, 04 Jun 2017 12:02:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet</guid>
      <description>

&lt;p&gt;This sample script embeds a map to a cell using custom function on Spreadsheet.&lt;/p&gt;

&lt;p&gt;I think that this method is one of various ideas.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;When the map is embeded to a cell on spreadsheet as an image, the function &lt;code&gt;=IMAGE()&lt;/code&gt; is suitable for this situation. However, &lt;code&gt;setFormula()&lt;/code&gt; for importing &lt;code&gt;=IMAGE()&lt;/code&gt; and &lt;code&gt;DriveApp.createFile()&lt;/code&gt; for creating images from maps also cannot be used for custom functions.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;In order to avoid these limitations, I used &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;. From previous research, it has been found that Web Apps can avoid various limitations. Also in the case of this situation, Web Apps could avoid the above limitations.&lt;/p&gt;

&lt;p&gt;To use this sample script, please deploy Web Apps as follows.&lt;/p&gt;

&lt;p&gt;On the Script Editor,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Publish

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;Deploy&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it deploys Web Apps, the approval required authorization can be done, simultaneously.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script :&lt;/h2&gt;

&lt;p&gt;Please copy and paste this script to a bound script of spreadsheet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var folderId = &amp;quot;### Folder ID ###&amp;quot;;

function embedMap(range, zoom) {
  var ac = SpreadsheetApp.getActiveSheet().getActiveCell();
  var q1 = &amp;quot;?address=&amp;quot; + range;
  var q2 = &amp;quot;&amp;amp;zoom=&amp;quot; + zoom;
  var q3 = &amp;quot;&amp;amp;row=&amp;quot; + ac.getRow();
  var q4 = &amp;quot;&amp;amp;col=&amp;quot; + ac.getColumn();
  UrlFetchApp.fetch(ScriptApp.getService().getUrl() + q1 + q2 + q3 + q4);
}

function doGet(e) {
  var data = Maps.newGeocoder().geocode(e.parameters.address).results[0];
  var file = DriveApp.getFolderById(folderId).createFile(
    Maps.newStaticMap()
    .setSize(800, 600)
    .setCenter(data.geometry.location.lat, data.geometry.location.lng)
    .setZoom(parseInt(e.parameters.zoom, 10))
    .setLanguage(&amp;quot;en&amp;quot;)
    .getBlob()
    .getAs(&#39;image/png&#39;)
    .setName(&amp;quot;map.png&amp;quot;)
  );
  file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  SpreadsheetApp
  .getActiveSheet()
  .getRange(e.parameters.row, e.parameters.col, 1, 2)
  .setFormulas([[
    &#39;=T(&amp;quot;&#39; + data.formatted_address + &#39;&amp;quot;)&#39;,
    &#39;=IMAGE(&amp;quot;&#39; + &amp;quot;http://drive.google.com/uc?id=&amp;quot; + file.getId() + &#39;&amp;quot;)&#39;
  ]]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flow-of-script&#34;&gt;Flow of Script :&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;embedMap()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input &lt;code&gt;=embedMap(&amp;quot;Tokyo station&amp;quot;, 16)&lt;/code&gt; in cell &lt;code&gt;B3&lt;/code&gt;. &lt;code&gt;&amp;quot;Tokyo station&amp;quot;&lt;/code&gt; and &lt;code&gt;16&lt;/code&gt; are a name of place and zoom, respectively.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;fetch()&lt;/code&gt;, sends data of &lt;code&gt;&amp;quot;Tokyo station&amp;quot;, 16&lt;/code&gt; and the inputted coordinate to &lt;code&gt;doGet()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;doGet()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;doGet()&lt;/code&gt;, get the data.&lt;/li&gt;
&lt;li&gt;Creates the map from the name of place.&lt;/li&gt;
&lt;li&gt;Saves a map as an image. (in this case, saves as PNG)&lt;/li&gt;
&lt;li&gt;Updates a permission of the image file to use for &lt;code&gt;=IMAGE()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Embeds the address and image using &lt;code&gt;=T()&lt;/code&gt; and &lt;code&gt;=IMAGE()&lt;/code&gt; which was imported by &lt;code&gt;setFormula()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;By inputting &lt;code&gt;=embedMap(&amp;quot;Tokyo station&amp;quot;, 16)&lt;/code&gt; in cell &lt;code&gt;B3&lt;/code&gt; as a custom function, following result can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170604a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When the custom function &lt;code&gt;embedMap()&lt;/code&gt; is used, loading time is about 40 seconds. (I don&amp;rsquo;t know whether this occurs only my environment.)&lt;/li&gt;
&lt;li&gt;Permissions of the created image are &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/access&#34;&gt;ANYONE_WITH_LINK&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/permission&#34;&gt;VIEW&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;embedMap()&lt;/code&gt; is overwritten by &lt;code&gt;=IMAGE()&lt;/code&gt;. So when the spreadsheet is reopened, the response of &lt;code&gt;=IMAGE()&lt;/code&gt; is much faster than that of &lt;code&gt;embedMap()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;related-tips&#34;&gt;Related Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Map to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Changing from &#39;float64&#39; to &#39;int&#39; for Values did Unmarshal using &#39;map[string]interface{}&#39;</title>
      <link>https://tanaikech.github.io/2017/06/02/changing-from-float64-to-int-for-values-did-unmarshal-using-mapstringinterface</link>
      <pubDate>Fri, 02 Jun 2017 17:22:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/changing-from-float64-to-int-for-values-did-unmarshal-using-mapstringinterface</guid>
      <description>&lt;p&gt;This sample is for changing from &amp;ldquo;float64&amp;rdquo; to &amp;ldquo;int&amp;rdquo; for values did unmarshal using &lt;code&gt;map[string]interface{}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When it did unmarshal using map[string]interface{}, a number with &amp;ldquo;int&amp;rdquo; was changed to &amp;ldquo;float64&amp;rdquo;. And it shows an error as follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Error :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;panic: interface conversion: interface {} is float64, not int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Sample Script :&lt;/strong&gt;
It solves using following script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;encoding/json&amp;quot;
    &amp;quot;fmt&amp;quot;
    &amp;quot;reflect&amp;quot;
)

func main() {
    data := `{&amp;quot;key&amp;quot;: 10}`
    var i map[string]interface{}
    json.Unmarshal([]byte(data), &amp;amp;i)

    val1 := i[&amp;quot;key&amp;quot;]
    fmt.Printf(&amp;quot;%v, %v\n&amp;quot;, val1, reflect.TypeOf(val1)) // 10, float64

    i[&amp;quot;key&amp;quot;] = int(i[&amp;quot;key&amp;quot;].(float64))
    val2 := i[&amp;quot;key&amp;quot;]
    fmt.Printf(&amp;quot;%v, %v\n&amp;quot;, val2, reflect.TypeOf(val2)) // 10, int
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://play.golang.org/p/kHroZ1rHVQ&#34;&gt;Go Playground&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replacing JSON Key by Golang</title>
      <link>https://tanaikech.github.io/2017/06/02/replacing-json-key-by-golang</link>
      <pubDate>Fri, 02 Jun 2017 11:56:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/replacing-json-key-by-golang</guid>
      <description>&lt;p&gt;This sample is for replacing JSON key by golang.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;encoding/json&amp;quot;
    &amp;quot;fmt&amp;quot;
)

func main() {
    json1 := `{&amp;quot;key1&amp;quot;: &amp;quot;value1&amp;quot;}`

    obj := map[string]interface{}{}
    json.Unmarshal([]byte(json1), &amp;amp;obj)

    fmt.Println(obj) // &amp;lt;-- map[key1:value1]

    obj[&amp;quot;key2&amp;quot;] = obj[&amp;quot;key1&amp;quot;]
    delete(obj, &amp;quot;key1&amp;quot;)

    fmt.Println(obj) // &amp;lt;-- map[key2:value1]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Splitting Command-Line Arguments by Golang</title>
      <link>https://tanaikech.github.io/2017/06/02/splitting-command-line-arguments-by-golang</link>
      <pubDate>Fri, 02 Jun 2017 10:59:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/02/splitting-command-line-arguments-by-golang</guid>
      <description>

&lt;p&gt;This sample script is for splitting command-line arguments by golang. There are 2 types. One is the regular expression is used. Another is that &lt;code&gt;Split()&lt;/code&gt; and &lt;code&gt;TrimSpace()&lt;/code&gt; are used.&lt;/p&gt;

&lt;p&gt;Here, each process speed was compared.&lt;/p&gt;

&lt;h2 id=&#34;script&#34;&gt;Script :&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;regexp&amp;quot;
    &amp;quot;strings&amp;quot;
    &amp;quot;testing&amp;quot;
)

func BenchmarkB1(b *testing.B) {
    str := &amp;quot;test1.txt, test2.txt&amp;quot;
    b.ResetTimer()
    for i := 0; i &amp;lt; b.N; i++ {
        ar := regexp.MustCompile(`\s*,\s*`).Split(str, -1)
        var result []string
        for _, x := range ar {
            result = append(result, x) // --&amp;gt; &#39;test.js&#39;, &#39;test2.py&#39;
        }
        _ = result
    }
}

func BenchmarkB2(b *testing.B) {
    str := &amp;quot;test1.txt, test2.txt&amp;quot;
    b.ResetTimer()
    for i := 0; i &amp;lt; b.N; i++ {
        ar := strings.Split(str, &amp;quot;,&amp;quot;)
        var result []string
        for _, x := range ar {
            result = append(result, strings.TrimSpace(x)) // --&amp;gt; &#39;test.js&#39;, &#39;test2.py&#39;
        }
        _ = result
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go test -bench .
BenchmarkB1-4             100000             13048 ns/op
BenchmarkB2-4            3000000               399 ns/op
PASS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just as expected, the regular expression was slow. And it&amp;rsquo;s much slower than that of &lt;code&gt;Split()&lt;/code&gt; and &lt;code&gt;TrimSpace()&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v121</title>
      <link>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121</link>
      <pubDate>Sun, 28 May 2017 14:20:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121</guid>
      <description>

&lt;h1 id=&#34;ggsrun-was-updated-to-v-1-2-1&#34;&gt;ggsrun was updated to v.1.2.1&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Configuration file (&lt;code&gt;ggsrun.cfg&lt;/code&gt;) became to be able to be read using the environment variable.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check this at &lt;a href=&#34;https://github.com/tanaikech/ggsrun&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Embedding a Chart to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet</link>
      <pubDate>Fri, 26 May 2017 11:59:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet</guid>
      <description>

&lt;p&gt;This sample script embeds a chart to a cell using custom function on Spreadsheet.&lt;/p&gt;

&lt;p&gt;I think that this method is one of various ideas.&lt;/p&gt;

&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;When you want to create a chart and embed it to a cell using custom functions, you notice that &lt;code&gt;insertChart()&lt;/code&gt; cannot be used. There are some limitations for using custom functions. But &lt;code&gt;insertChart()&lt;/code&gt; creates floating charts. So in order to embed a chart to a cell, the function &lt;code&gt;=IMAGE()&lt;/code&gt; is suitable for this situation. Here, &lt;code&gt;setFormula()&lt;/code&gt; for setting &lt;code&gt;=IMAGE()&lt;/code&gt; and &lt;code&gt;DriveApp.createFile()&lt;/code&gt; for creating images from charts also cannot be used for custom functions.&lt;/p&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;In order to avoid these limitations, I used &lt;a href=&#34;https://developers.google.com/apps-script/guides/web&#34;&gt;Web Apps&lt;/a&gt;. From previous research, it has been found that Web Apps can avoid various limitations. Also in the case of this situation, Web Apps could avoid the above limitations.&lt;/p&gt;

&lt;p&gt;To use this sample script, please deploy Web Apps as follows.&lt;/p&gt;

&lt;p&gt;On the Script Editor,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Manage Versions&lt;/li&gt;
&lt;li&gt;-&amp;gt; Save New Version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Publish

&lt;ul&gt;
&lt;li&gt;-&amp;gt; Deploy as Web App&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Execute the app as, select &lt;strong&gt;&amp;ldquo;your account&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; At Who has access to the app, select &lt;strong&gt;&amp;ldquo;Anyone, even anonymous&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;Deploy&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Copy &lt;strong&gt;&amp;ldquo;Current web app URL&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;-&amp;gt; Click &lt;strong&gt;&amp;ldquo;OK&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it deploys Web Apps, the approval required authorization can be done, simultaneously.&lt;/p&gt;

&lt;h2 id=&#34;sample-script&#34;&gt;Sample Script :&lt;/h2&gt;

&lt;p&gt;Please copy and paste this script to a bound script of spreadsheet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var folderId = &amp;quot;### Folder ID ###&amp;quot;;
var webappsurl = &amp;quot;https://script.google.com/macros/s/######/exec&amp;quot;;

function embedChart(range) {
  var ac = SpreadsheetApp.getActiveSheet().getActiveCell();
  var q1 = &amp;quot;?datarange=&amp;quot; + range;
  var q2 = &amp;quot;&amp;amp;row=&amp;quot; + ac.getRow();
  var q3 = &amp;quot;&amp;amp;col=&amp;quot; + ac.getColumn();
  var url = webappsurl + q1 + q2 + q3;
  UrlFetchApp.fetch(url);
}

function doGet(e) {
  var sheet = SpreadsheetApp.getActiveSheet();
  var chart = sheet.newChart()
    .setChartType(Charts.ChartType.PIE)
    .addRange(sheet.getRange(e.parameters.datarange))
    .setOption(&#39;height&#39;, 280)
    .setOption(&#39;width&#39;, 480)
    .setOption(&#39;title&#39;, &#39;Sample chart&#39;)
    .build();
  var file = DriveApp.getFolderById(folderId).createFile(
    chart.getAs(&#39;image/png&#39;).setName(&amp;quot;chart_image.png&amp;quot;)
  );
  file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  sheet.getRange(e.parameters.row, e.parameters.col).setFormula(
    &#39;=IMAGE(&amp;quot;&#39; + &amp;quot;http://drive.google.com/uc?id=&amp;quot; + file.getId() + &#39;&amp;quot;)&#39;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flow-of-script&#34;&gt;Flow of Script :&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;embedChart()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input &lt;code&gt;=embedChart(&amp;quot;a2:a6&amp;quot;)&lt;/code&gt; in cell &lt;code&gt;B7&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;fetch()&lt;/code&gt;, sends data of &lt;code&gt;a2:a6&lt;/code&gt; and the inputted coordinate to &lt;code&gt;doGet()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;doGet()&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;doGet()&lt;/code&gt;, get the data.&lt;/li&gt;
&lt;li&gt;Creates a chart using inputted range &lt;code&gt;a2:a6&lt;/code&gt;. (in this case, creates a pie chart)&lt;/li&gt;
&lt;li&gt;Saves a chart as an image.  (in this case, saves as PNG)&lt;/li&gt;
&lt;li&gt;Updates a permission of the image file to use for &lt;code&gt;=IMAGE()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Embeds the image using &lt;code&gt;=IMAGE()&lt;/code&gt; which was imported by &lt;code&gt;setFormula()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;result&#34;&gt;Result :&lt;/h2&gt;

&lt;p&gt;By inputting &lt;code&gt;=embedChart(&amp;quot;a2:a6&amp;quot;)&lt;/code&gt; in cell &lt;code&gt;B7&lt;/code&gt; as a custom function, following result can be obtained.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170526a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;note&#34;&gt;Note :&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;When the custom function &lt;code&gt;embedChart()&lt;/code&gt; is used, loading time is about 40 seconds. (I don&amp;rsquo;t know whether this occurs only my environment.)&lt;/li&gt;
&lt;li&gt;Permissions of the created image are &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/access&#34;&gt;ANYONE_WITH_LINK&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/apps-script/reference/drive/permission&#34;&gt;VIEW&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;embedChart()&lt;/code&gt; is overwritten by &lt;code&gt;=IMAGE()&lt;/code&gt;. So when the spreadsheet is reopened, the response of &lt;code&gt;=IMAGE()&lt;/code&gt; is much faster than that of &lt;code&gt;embedChart()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;related-tips&#34;&gt;Related Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/&#34;&gt;Embedding a Chart to a Cell using Custom Function on Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Retrieving HTML File ID from Microsoft Docx File on Google Drive</title>
      <link>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive</link>
      <pubDate>Wed, 24 May 2017 09:08:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive</guid>
      <description>

&lt;p&gt;This sample script converts from Microsoft Docx File on Google Drive to Google Spreadsheet, and converts to HTML file.&lt;/p&gt;

&lt;p&gt;Drive APIs v2 and v3 are used for this. Please set as follows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/drive/v2/reference/&#34;&gt;Drive API v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/drive/v3/reference/&#34;&gt;Drive API v3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.&lt;/p&gt;

&lt;p&gt;How to use it is as follows.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the script editor, select Resources &amp;gt; Advanced Google services&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the dialog that appears, click the on/off switch for Drive API v2.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;At the bottom of the dialog, click the link for the Google API Console.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the console, click into the filter box and type part of the name of the API &amp;ldquo;Drive API&amp;rdquo;, then click the name once you see it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On the next screen, click Enable API. By this, Drive APIs v2 and v3 can be used.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Close the Developers Console and return to the script editor. Click OK in the dialog. The advanced service you enabled is now available in autocomplete.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The detail information is &lt;a href=&#34;https://developers.google.com/apps-script/guides/services/advanced&#34;&gt;https://developers.google.com/apps-script/guides/services/advanced&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;script&#34;&gt;Script&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function doGet(e){
  var folderId = &amp;quot;### Folder ID ###&amp;quot;;

  var file = DriveApp.getFileById(e.parameters.id);
  var docfileId = Drive.Files.insert(
    {
      &amp;quot;title&amp;quot;: file.getName(),
      &amp;quot;mimeType&amp;quot;: &amp;quot;application/vnd.google-apps.document&amp;quot;,
      &amp;quot;parents&amp;quot;:  [{&amp;quot;id&amp;quot;: folderId}]
    },
    file.getBlob()
  ).id;
  var htmlId = DriveApp.getFolderById(folderId).createFile(
    UrlFetchApp.fetch(
      &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + docfileId + &amp;quot;/export?mimeType=text/html&amp;quot;,
      {
        headers : {Authorization: &amp;quot;Bearer &amp;quot; + ScriptApp.getOAuthToken()},
        muteHttpExceptions : true
      }
    ).getBlob()
  ).setName(file.getName() + &amp;quot;.html&amp;quot;).getId();
  Drive.Files.remove(docfileId);
  return ContentService.createTextOutput(htmlId);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;check-script&#34;&gt;Check Script&lt;/h2&gt;

&lt;p&gt;In order to check above script, you can do it using curl as follows. When Docx File ID is sent to doGet() on Google, you can retrieve HTML file ID from Google.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://script.google.com/macros/s/#####/exec?id=### Docx File ID ###
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Decoding JSON by Golang</title>
      <link>https://tanaikech.github.io/2017/05/21/decoding-json-by-golang</link>
      <pubDate>Sun, 21 May 2017 11:55:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/21/decoding-json-by-golang</guid>
      <description>&lt;p&gt;Decoding JSON by Golang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func main() {
    data := `{
      &amp;quot;A_key1&amp;quot;: {
        &amp;quot;B_key1&amp;quot;: {
          &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;
        }
      },
      &amp;quot;A_key2&amp;quot;: {
        &amp;quot;B_key2&amp;quot;: {
          &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;
        }
      },
      &amp;quot;A_key3&amp;quot;: {
        &amp;quot;B_key3&amp;quot;: {
          &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;
        }
      },
      &amp;quot;A_key4&amp;quot;: {
        &amp;quot;B_key4&amp;quot;: {
          &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;
        }
      },
      &amp;quot;A_key5&amp;quot;: {
        &amp;quot;B_key5&amp;quot;: {
          &amp;quot;C_key&amp;quot;: &amp;quot;value&amp;quot;
        }
      }
    }`
    var p interface{}
    json.NewDecoder(strings.NewReader(data)).Decode(&amp;amp;p)
    fmt.Println(p)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://play.golang.org/p/A86B8YHd5m&#34;&gt;Go Playground&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamically Creating JSON by Golang</title>
      <link>https://tanaikech.github.io/2017/05/21/dynamically-creating-json-by-golang</link>
      <pubDate>Sun, 21 May 2017 10:55:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/21/dynamically-creating-json-by-golang</guid>
      <description>&lt;p&gt;Dynamically Creating JSON by Golang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;obj := map[string]interface{}{}
obj[&amp;quot;hoge&amp;quot;] = &amp;quot;huga&amp;quot;
fmt.Println(obj)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://play.golang.org/p/7mLXgwddWO&#34;&gt;Go Playground&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Retrieving Response Headers by Golang</title>
      <link>https://tanaikech.github.io/2017/05/21/retrieving-response-headers-by-golang</link>
      <pubDate>Sun, 21 May 2017 10:43:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/21/retrieving-response-headers-by-golang</guid>
      <description>&lt;p&gt;Retrieving Response Headers by Golang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;res, _ := client.Do(req)
contentType := res.Header.Get(&amp;quot;Content-Type&amp;quot;)
contentLength := res.Header.Get(&amp;quot;Content-Length&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v120</title>
      <link>https://tanaikech.github.io/2017/05/19/updated-ggsrun-to-v120</link>
      <pubDate>Fri, 19 May 2017 08:49:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/19/updated-ggsrun-to-v120</guid>
      <description>

&lt;h1 id=&#34;ggsrun-was-updated-to-v-1-2-0&#34;&gt;ggsrun was updated to v.1.2.0&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Added a command for retrieving revision files on Google Drive.&lt;/li&gt;
&lt;li&gt;Some modifications.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check this at &lt;a href=&#34;https://github.com/tanaikech/ggsrun&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - goris</title>
      <link>https://tanaikech.github.io/2017/05/16/updated-cli-tool---goris</link>
      <pubDate>Tue, 16 May 2017 12:56:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/16/updated-cli-tool---goris</guid>
      <description>&lt;p&gt;goris is a CLI tool to search for images with Google Reverse Image Search.&lt;/p&gt;

&lt;p&gt;Today, it was updated to v1.0.1. Please check it out. &lt;a href=&#34;https://github.com/tanaikech/goris&#34;&gt;https://github.com/tanaikech/goris&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When number of retrieved URLs is smaller than number of default output, an error had occurred. This was fixed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Changing Line to Bars for Combo Chart using GAS</title>
      <link>https://tanaikech.github.io/2017/05/16/changing-line-to-bars-for-combo-chart-using-gas</link>
      <pubDate>Tue, 16 May 2017 11:42:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/16/changing-line-to-bars-for-combo-chart-using-gas</guid>
      <description>

&lt;h2 id=&#34;sample-data&#34;&gt;Sample data&lt;/h2&gt;

&lt;p&gt;This is a sample data for this sample script. The column B was created by the normal distribution formula, and the column C was created by multiplying random number for column B.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;A, B, C
1.0, 0.0001, 0.0000
1.5, 0.0009, 0.0006
2.0, 0.0044, 0.0037
2.5, 0.0175, 0.0133
3.0, 0.0540, 0.0236
3.5, 0.1296, 0.0533
4.0, 0.2420, 0.0073
4.5, 0.3522, 0.2468
5.0, 0.3990, 0.0843
5.5, 0.3522, 0.3352
6.0, 0.2420, 0.2201
6.5, 0.1296, 0.0607
7.0, 0.0540, 0.0256
7.5, 0.0175, 0.0006
8.0, 0.0044, 0.0030
8.5, 0.0009, 0.0005
9.0, 0.0001, 0.0001
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-chart&#34;&gt;Create chart&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;createChart()&lt;/code&gt; creates a chart from data. A chart with 2 lines is created by this method.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function createChart(){
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var chart = sheet.newChart()
    .setChartType(Charts.ChartType.COMBO)
    .addRange(sheet.getRange(&#39;a1:a18&#39;))
    .addRange(sheet.getRange(&#39;b1:b18&#39;))
    .addRange(sheet.getRange(&#39;c1:c18&#39;))
    .setPosition(5, 5, 0, 0)
    .setOption(&#39;series&#39;, {
      0:{type: &#39;line&#39;, color: &#39;red&#39;, curveType: &#39;function&#39;},
      1:{type: &#39;line&#39;, color: &#39;blue&#39;, curveType: &#39;function&#39;},
    })
    .setOption(&#39;useFirstColumnAsDomain&#39;, true)
    .setOption(&#39;height&#39;, 280)
    .setOption(&#39;width&#39;, 480)
    .setOption(&#39;title&#39;, &#39;Sample chart&#39;)
    .setOption(&#39;vAxis&#39;, {
      minValue: 0,
      maxValue: 0.4,
      gridlines: {
        count: 10
      }
    })
    .build();
  sheet.insertChart(chart);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;created-chart&#34;&gt;Created chart&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170516_fig1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;note&#34;&gt;note&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.setChartType(Charts.ChartType.COMBO)&lt;/code&gt; defines COMBO chart.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.setOption(&#39;series&#39;, {})&lt;/code&gt; defines each type for range &lt;code&gt;&#39;b1:b18&#39;&lt;/code&gt; and &lt;code&gt;&#39;c1:c18&#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0:{}&lt;/code&gt; and &lt;code&gt;1:{}&lt;/code&gt; of &lt;code&gt;.setOption(&#39;series&#39;, {})&lt;/code&gt; mean range &lt;code&gt;&#39;b1:b18&#39;&lt;/code&gt; and &lt;code&gt;&#39;c1:c18&#39;&lt;/code&gt;, respectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;modify-chart&#34;&gt;Modify chart&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;modifyChart()&lt;/code&gt; modifies the chart with 2 lines. It modifies from red line to red bars.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function modifyChart(){
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var chart = sheet.getCharts()[0];
  chart = chart.modify()
    .setChartType(Charts.ChartType.COMBO)
    .addRange(sheet.getRange(&#39;a1:a18&#39;))
    .addRange(sheet.getRange(&#39;b1:b18&#39;))
    .addRange(sheet.getRange(&#39;c1:c18&#39;))
    .setPosition(5, 5, 0, 0)
    .setOption(&#39;series&#39;, {
      0:{type: &#39;bars&#39;, color: &#39;red&#39;},
      1:{type: &#39;line&#39;, color: &#39;blue&#39;, curveType: &#39;function&#39;},
    })
    .setOption(&#39;useFirstColumnAsDomain&#39;, true)
    .setOption(&#39;height&#39;, 280)
    .setOption(&#39;width&#39;, 480)
    .setOption(&#39;title&#39;, &#39;Sample chart&#39;)
    .setOption(&#39;vAxis&#39;, {
      minValue: 0,
      maxValue: 0.4,
      gridlines: {
        count: 10
      }
    })
    .build();
  sheet.updateChart(chart);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;modified-chart&#34;&gt;Modified chart&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://tanaikech.github.io/img/20170516_fig2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;note-1&#34;&gt;note&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0:{type: &#39;bars&#39;, color: &#39;red&#39;}&lt;/code&gt; was modified.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;

&lt;p&gt;Reference pages are &lt;a href=&#34;https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://developers.google.com/chart/interactive/docs/gallery/areachart#configuration-options&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;commission&#34;&gt;Commission&lt;/h2&gt;

&lt;p&gt;This was accepted as a commission.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;May 13, 2017, Dr. Mehmet TEKDAL (Çukurova University)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://tanaikech.github.io/about/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tanaikech.github.io/about/</guid>
      <description>

&lt;h1 id=&#34;about-me&#34;&gt;About Me&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;m Japanese and scientist with Ph.D. in Physics. My curiosity is to quest, think and create. Especially, I always like to create things which are not exist in this world.&lt;/p&gt;

&lt;p&gt;Basically I find such new things during sleep. I had performed most of my large discoveries during sleep. In fact, I had discovered new materials, structures, methods, designs and etc during sleep so far. Although new discovery during sleep depends on my mental and physical states, I had produced various new things for the real world so far. These are published as academic papers, patents, newspapers and some products. And also have been awarded prizes.&lt;/p&gt;

&lt;p&gt;I had worked at local and international research institutes and universities. Recently I have begin to look new direction that I have never touched. I thought that my experiences may be able to be helpful for people and this field. So I launched this blog. Now I&amp;rsquo;m receiving new wind. I would like to grow this wind using my experiences. Although now I’m still groping, I introduce the wind here. I&amp;rsquo;m glad, if those could be useful for you.&lt;/p&gt;

&lt;p&gt;Now I&amp;rsquo;m looking for co-researchers and partners for the business. Would you like to create new things to this world together with me?&lt;/p&gt;

&lt;h1 id=&#34;contact&#34;&gt;Contact&lt;/h1&gt;

&lt;p&gt;When you have any problems on your works, if they are related to my activity, feel free to ask me. I would like to support you. And if you have any questions for my site, also please tell me.&lt;/p&gt;

&lt;p&gt;e-mail : tanaike@hotmail.com&lt;/p&gt;

&lt;h3 id=&#34;my-activity&#34;&gt;My Activity&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;GitHub : &lt;a href=&#34;https://github.com/tanaikech&#34;&gt;https://github.com/tanaikech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gists : &lt;a href=&#34;https://gist.github.com/tanaikech&#34;&gt;https://gist.github.com/tanaikech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google : &lt;a href=&#34;https://plus.google.com/107256237714561740394&#34;&gt;https://plus.google.com/107256237714561740394&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Homepage : &lt;a href=&#34;https://tanaikech.github.io/&#34;&gt;https://tanaikech.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Qiita (Japanese) : &lt;a href=&#34;http://qiita.com/tanaike&#34;&gt;http://qiita.com/tanaike&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stackoverflow : &lt;a href=&#34;http://stackoverflow.com/users/7108653/tanaike&#34;&gt;http://stackoverflow.com/users/7108653/tanaike&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;achievements&#34;&gt;Achievements&lt;/h1&gt;

&lt;h2 id=&#34;commissions&#34;&gt;Commissions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;May 13, 2017, Dr. Mehmet TEKDAL (Çukurova University) &lt;a href=&#34;https://gist.github.com/tanaikech/1694d3fa3621dc4ddf7e4fb6653e8f7d&#34;&gt;Here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;May 29, 2017, Jarrod Rapson (Managing Director CR Concrete Cutting) &lt;a href=&#34;https://gist.github.com/tanaikech/ab18f24cb9bbc081128e7fb026e38962&#34;&gt;Here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Above achievements are displayed after got the permission to publish.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This blog was launched by Hugo and theme of blackburn. Thank you very much.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sending E-mail When Spreadsheet was Edited from Outside by Sheet API</title>
      <link>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api</link>
      <pubDate>Sun, 14 May 2017 17:43:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api</guid>
      <description>&lt;p&gt;This sample script sends an e-mail, when spreadsheet was edited from outside by Sheet API v4. When you use this sample, please create a container bound script with spreadsheet which is edited by Sheet API. And please input your e-mail and run firstly a method of &lt;code&gt;createTrigger()&lt;/code&gt;. By this, a trigger is installed as &lt;code&gt;onChange()&lt;/code&gt;. After this, edit spreadsheet from outside by Sheet API v4.&lt;/p&gt;

&lt;p&gt;When when spreadsheet was edited from outside by Sheet API v4, I used &lt;code&gt;sendEmail()&lt;/code&gt; as a sample, because script editor is closed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample script :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function createTrigger(){
  ScriptApp.newTrigger(&#39;sendMail&#39;)
      .forSpreadsheet(SpreadsheetApp.getActive())
      .onChange()
      .create();
}

function sendMail() {
  MailApp.sendEmail(&amp;quot;### Your e-mail address ###&amp;quot;, &amp;quot;test mail&amp;quot;, &amp;quot;Spreadsheet was edited.&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>