<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Model Context Protocol on tanaike</title>
    <link>https://tanaikech.github.io/tags/model-context-protocol/</link>
    <description>Recent content in Model Context Protocol on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sat, 12 Jul 2025 11:24:44 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/model-context-protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Next-Level Data Automation: Gemini CLI, Google Sheets, and MCP</title>
      <link>https://tanaikech.github.io/2025/07/12/next-level-data-automation-gemini-cli-google-sheets-and-mcp/</link>
      <pubDate>Sat, 12 Jul 2025 11:24:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/12/next-level-data-automation-gemini-cli-google-sheets-and-mcp/</guid>
      <description>Gists
Abstract This article explores the integration of the Gemini Command-Line Interface (CLI) with Google Sheets using the Model Context Protocol (MCP). It demonstrates how to leverage the open-source projects MCPApp and ToolsForMCPServer to create a bridge between the Gemini CLI and Google Workspace. This enables users to perform powerful data automation tasks, such as creating, reading, and modifying tables in Google Sheets directly from the command line, using natural language prompts.</description>
    </item>
    
    <item>
      <title>Gemini CLI: Featuring an Enhanced ToolsForMCPServer</title>
      <link>https://tanaikech.github.io/2025/07/09/gemini-cli-featuring-an-enhanced-toolsformcpserver/</link>
      <pubDate>Wed, 09 Jul 2025 15:22:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/09/gemini-cli-featuring-an-enhanced-toolsformcpserver/</guid>
      <description>Gists
Abstract This report introduces ToolsForMCPServer, an enhanced Google Apps Script library that expands the capabilities of Gemini CLI. It showcases new tools that streamline complex workflows, with a special emphasis on facilitating seamless file content transfer and management between a user&amp;rsquo;s local environment and Google Drive.
Introduction This report details significant enhancements to ToolsForMCPServer, a powerful Google Apps Script library designed to work in tandem with Gemini CLI. By integrating this library with a Model Context Protocol (MCP) server, the capabilities of Gemini CLI are dramatically expanded, especially in its interaction with Google Workspace services.</description>
    </item>
    
    <item>
      <title>Processing File Content Using Gemini CLI with an MCP Server Built by Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/07/08/processing-file-content-using-gemini-cli-with-an-mcp-server-built-by-google-apps-script/</link>
      <pubDate>Tue, 08 Jul 2025 15:17:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/08/processing-file-content-using-gemini-cli-with-an-mcp-server-built-by-google-apps-script/</guid>
      <description>Gists
Abstract This report details two methods for processing files using the Gemini CLI and a Google Apps Script MCP server: direct Base64 encoding and indirect transfer via the Google Drive API using ggsrun. The direct method proved ineffective due to token limits. The recommended approach, leveraging ggsrun, allows for efficient, scalable file transfers by using file IDs instead of embedding content within the prompt, enabling advanced automation capabilities.
Introduction This report demonstrates how to efficiently process file content using the Gemini CLI integrated with an MCP (Magical Control Panel) server built on Google Apps Script Web Apps.</description>
    </item>
    
    <item>
      <title>Gemini CLI with MCP Server: Expanding Possibilities with Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/07/03/gemini-cli-with-mcp-server-expanding-possibilities-with-google-apps-script/</link>
      <pubDate>Thu, 03 Jul 2025 15:45:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/03/gemini-cli-with-mcp-server-expanding-possibilities-with-google-apps-script/</guid>
      <description>Gists
Abstract The Gemini CLI provides a powerful command-line interface for interacting with Google&amp;rsquo;s Gemini models. By leveraging the Model Context Protocol (MCP), the CLI can be extended with custom tools. This report explores the integration of the Gemini CLI with an MCP server built using Google Apps Script Web Apps. We demonstrate how this combination simplifies authorization for Google Workspace APIs (Gmail, Drive, Calendar, etc.), allowing Gemini to execute complex, multi-step tasks directly within the Google ecosystem.</description>
    </item>
    
    <item>
      <title>Gemini CLI with MCP Server Built by Web Apps of Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/06/27/gemini-cli-with-mcp-server-built-by-web-apps-of-google-apps-script/</link>
      <pubDate>Fri, 27 Jun 2025 16:12:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/27/gemini-cli-with-mcp-server-built-by-web-apps-of-google-apps-script/</guid>
      <description>Gists
Abstract The Gemini CLI can be integrated with Google Workspace via Google Apps Script to securely access personal data, enabling powerful automations like email summaries and calendar management.
Introduction The recently released Gemini CLI is a powerful command-line interface for interacting with Google&amp;rsquo;s Gemini models and cloud resources. Ref While powerful on its own, its utility can be significantly enhanced by connecting it to a user&amp;rsquo;s personal Google resources, such as Google Sheets, Docs, Slides, Gmail, and Calendar.</description>
    </item>
    
    <item>
      <title>Consolidating Generative AI Protocols: A Single Server Solution for MCP and A2A</title>
      <link>https://tanaikech.github.io/2025/06/19/consolidating-generative-ai-protocols-a-single-server-solution-for-mcp-and-a2a/</link>
      <pubDate>Thu, 19 Jun 2025 11:18:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/19/consolidating-generative-ai-protocols-a-single-server-solution-for-mcp-and-a2a/</guid>
      <description>Gists
Abstract A new unified Google Apps Script now deploys both Model Context Protocol (MCP) and Agent2Agent (A2A) networks as a single server, streamlining AI model integration for Google Workspace users.
Introduction The rapid growth of generative AI has led to increasing integration between AI models, exemplified by protocols like the Model Context Protocol (MCP) and Agent2Agent (A2A) Protocol. Recently, I released MCPApp and A2AApp, which establish the MCP and A2A networks using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - MCPApp</title>
      <link>https://tanaikech.github.io/2025/06/12/updated-gas-library-mcpapp/</link>
      <pubDate>Thu, 12 Jun 2025 15:36:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/12/updated-gas-library-mcpapp/</guid>
      <description>MCPApp was updated to v2.0.0   v2.0.0 (June 12, 2025)
 From v2.0.0, both the MCP client and the MCP server can be built by Google Apps Script.    You can see the detail information here https://github.com/tanaikech/MCPApp</description>
    </item>
    
    <item>
      <title>Gmail Processing using MCP Network Powered by Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/06/12/gmail-processing-using-mcp-network-powered-by-google-apps-script/</link>
      <pubDate>Thu, 12 Jun 2025 15:06:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/12/gmail-processing-using-mcp-network-powered-by-google-apps-script/</guid>
      <description>Gists
Abstract This report details an MCP network using Google Apps Script for both server and client, enabling automated, secure Gmail processing to boost efficiency.
Introduction Recently, I published a report titled &amp;ldquo;Building Model Context Protocol (MCP) Server with Google Apps Script,&amp;rdquo; which you can find here. In that initial report, I demonstrated the feasibility of creating an MCP server using Google Apps Script, with Claude Desktop serving as the client.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - MCPApp</title>
      <link>https://tanaikech.github.io/2025/05/29/updated-gas-library-mcpapp/</link>
      <pubDate>Thu, 29 May 2025 14:20:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/29/updated-gas-library-mcpapp/</guid>
      <description>MCPApp was updated to v1.0.2   v1.0.2 (May 29, 2025)
 From v1.0.2, in order to use MCPApp as a library, LockService is given.    You can see the detail information here https://github.com/tanaikech/MCPApp</description>
    </item>
    
    <item>
      <title>Image Transfer: MCP Server (Web Apps/Google Apps Script) to MCP Client (Gemini/Python)</title>
      <link>https://tanaikech.github.io/2025/05/10/image-transfer-mcp-server-web-apps/google-apps-script-to-mcp-client-gemini/python/</link>
      <pubDate>Sat, 10 May 2025 14:06:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/10/image-transfer-mcp-server-web-apps/google-apps-script-to-mcp-client-gemini/python/</guid>
      <description>Gists
Abstract This report details transferring image data via Model Context Protocol (MCP) from Google Apps Script server to a Python/Gemini client, extending capabilities for multimodal applications beyond text.
Introduction Following up on my previous report, &amp;ldquo;Building Model Context Protocol (MCP) Server with Google Apps Script&amp;rdquo; (Ref), which detailed the transfer of text data between the MCP server and client, this new report focuses on extending the protocol to handle image data.</description>
    </item>
    
    <item>
      <title>Building Model Context Protocol (MCP) Server with Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/05/08/building-model-context-protocol-mcp-server-with-google-apps-script/</link>
      <pubDate>Thu, 08 May 2025 15:29:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/08/building-model-context-protocol-mcp-server-with-google-apps-script/</guid>
      <description>Gists
Abstract This text introduces the Model Context Protocol (MCP) for standardizing AI interaction with external systems. It explores the potential of using Google Apps Script (GAS) to host an MCP server, leveraging GAS&amp;rsquo;s integration with Google Workspace for data access. A sample script demonstrates feasibility, highlighting the current absence of an official GAS SDK. The work aims to foster understanding and encourage SDK development.
Introduction Recently, the Model Context Protocol (MCP) has emerged as a standard protocol for connecting AI applications with third-party systems and data sources.</description>
    </item>
    
  </channel>
</rss>
