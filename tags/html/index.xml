<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML on tanaike</title>
    <link>https://tanaikech.github.io/tags/html/</link>
    <description>Recent content in HTML on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sun, 10 May 2020 09:40:05 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When &#39;//&#39; in template literal is used in a HTML file in script editor, it is used as a comment start</title>
      <link>https://tanaikech.github.io/2020/05/10/when-/-in-template-literal-is-used-in-a-html-file-in-script-editor-it-is-used-as-a-comment-start/</link>
      <pubDate>Sun, 10 May 2020 09:40:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/10/when-/-in-template-literal-is-used-in-a-html-file-in-script-editor-it-is-used-as-a-comment-start/</guid>
      <description>Gists
Overview When // in template literal is used in a HTML file in script editor, it is used as a comment start.
const sample = `//`;For example, when above script is used in a HTML file at the script editor, ;&amp;quot; of const sample =`//`; is used as the comment.
Description I would like to explain about this bug using the following sample flow.
Flow   Create new Spreadsheet and open the script editor.</description>
    </item>
    
    <item>
      <title>Parsing HTML using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/08/01/parsing-html-using-google-apps-script/</link>
      <pubDate>Thu, 01 Aug 2019 14:04:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/01/parsing-html-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for parsing HTML using Google Apps Script. When HTML data is converted to Google Document, the HTML data can be parsed and be converted to Google Document. In this case, the paragraphs, lists and tables are included. From this situation, I thought that this situation can be used for parsing HTML using Google Apps Script. So I could came up with this method.
In the Sheet API, the HTML data can be put to the Spreadsheet with the PasteDataRequest.</description>
    </item>
    
    <item>
      <title>Selecting Files in Google Drive using Select Box for Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/17/selecting-files-in-google-drive-using-select-box-for-google-apps-script/</link>
      <pubDate>Sun, 17 Sep 2017 13:26:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/17/selecting-files-in-google-drive-using-select-box-for-google-apps-script/</guid>
      <description>Gists
This is a sample script for selecting files in Google Drive using HTML select box for Google Apps Script.
Feature Feature of this sample.
 It is a simple and space saving. When the folder is selected, the files in the folder are shown. When the file is selected, the ID of file is retrieved. Users can use this ID at GAS. When a folder is opened, all files in the folder are cached.</description>
    </item>
    
  </channel>
</rss>