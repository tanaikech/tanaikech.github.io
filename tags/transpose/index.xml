<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>transpose on tanaike</title>
    <link>https://tanaikech.github.io/tags/transpose/</link>
    <description>Recent content in transpose on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 22 Feb 2018 11:25:43 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/transpose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Transposing Slice From (n x m) To (m x n) for golang</title>
      <link>https://tanaikech.github.io/2018/02/22/transposing-slice-from-n-x-m-to-m-x-n-for-golang/</link>
      <pubDate>Thu, 22 Feb 2018 11:25:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/22/transposing-slice-from-n-x-m-to-m-x-n-for-golang/</guid>
      <description>Gists
This is a sample script for transposing slice from (n x m) to (m x n) for golang.
Script : package mainimport &amp;#34;fmt&amp;#34;func transpose(slice [][]string) [][]string {xl := len(slice[0])yl := len(slice)result := make([][]string, xl)for i := range result {result[i] = make([]string, yl)}for i := 0; i &amp;lt; xl; i++ {for j := 0; j &amp;lt; yl; j++ {result[i][j] = slice[j][i]}}return result}func main() {sample := [][]string{[]string{&amp;#34;a1&amp;#34;, &amp;#34;a2&amp;#34;, &amp;#34;a3&amp;#34;, &amp;#34;a4&amp;#34;, &amp;#34;a5&amp;#34;},[]string{&amp;#34;b1&amp;#34;, &amp;#34;b2&amp;#34;, &amp;#34;b3&amp;#34;, &amp;#34;b4&amp;#34;, &amp;#34;b5&amp;#34;},[]string{&amp;#34;c1&amp;#34;, &amp;#34;c2&amp;#34;, &amp;#34;c3&amp;#34;, &amp;#34;c4&amp;#34;, &amp;#34;c5&amp;#34;},}ar := transpose(sample)fmt.</description>
    </item>
    
  </channel>
</rss>
