<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Copilot on tanaike</title>
    <link>https://tanaikech.github.io/tags/copilot/</link>
    <description>Recent content in Copilot on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 02 Oct 2025 14:59:18 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/copilot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Collaborative Dialogue Between Gemini CLI and Copilot CLI Through MCP</title>
      <link>https://tanaikech.github.io/2025/10/02/a-collaborative-dialogue-between-gemini-cli-and-copilot-cli-through-mcp/</link>
      <pubDate>Thu, 02 Oct 2025 14:59:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/10/02/a-collaborative-dialogue-between-gemini-cli-and-copilot-cli-through-mcp/</guid>
      <description>Gists
Abstract This article introduces a method for integrating Google&amp;rsquo;s Gemini CLI and GitHub&amp;rsquo;s Copilot CLI using the Model Context Protocol (MCP). By configuring one CLI as an MCP server, the other can invoke it from a prompt, enabling a powerful, collaborative interaction between the two AI assistants for enhanced development workflows.
Introduction Recently, GitHub released the Copilot CLI, a command-line interface that brings the power of GitHub Copilot directly to your terminal.</description>
    </item>
    
  </channel>
</rss>
