<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project on tanaike</title>
    <link>https://tanaikech.github.io/tags/project/</link>
    <description>Recent content in Project on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 20 Dec 2017 10:28:42 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Add-on - RearrangeScripts</title>
      <link>https://tanaikech.github.io/2017/12/20/add-on---rearrangescripts/</link>
      <pubDate>Wed, 20 Dec 2017 10:28:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/20/add-on---rearrangescripts/</guid>
      <description> RearrangeScripts was published as an add-on application Recently, I have reported RearrangeScripts for rearranging scripts in a GAS project. At that time, I got messages and mails from many developers. They said that you should publish this as an add-on. So, this was released. Now you can search &amp;ldquo;RearrangeScripts&amp;rdquo; as an add-on for Spreadsheet. If this is helpful for you, I&amp;rsquo;m happy.
 Add-on GitHub  Demo </description>
    </item>
    
    <item>
      <title>Rearranging Files in GAS Project (Restricted)</title>
      <link>https://tanaikech.github.io/2017/12/05/rearranging-files-in-gas-project-restricted/</link>
      <pubDate>Tue, 05 Dec 2017 15:13:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/05/rearranging-files-in-gas-project-restricted/</guid>
      <description>Gists
Introduction Recently, I have introduced a GAS library and a CLI tool for rearranging files in GAS project. Those are RearrangeScripts and ggsrun. Because today, I found a new way for rearranging files, I would like to introduce it although there is a restriction.
By the recent Google-update, users become able to create folders in GAS project. The new way uses this. At first, please see the demonstration GIF animation.</description>
    </item>
    
    <item>
      <title>GAS Library - RearrangeScripts</title>
      <link>https://tanaikech.github.io/2017/11/13/gas-library---rearrangescripts/</link>
      <pubDate>Mon, 13 Nov 2017 09:30:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/13/gas-library---rearrangescripts/</guid>
      <description>Overview This is a GAS application for rearranging Google Apps Scripts (GAS) in a project which can be seen at the script editor.
Description Have you ever thought about rearranging Google Apps Scripts in a project which can be seen at the script editor? I also have thought about it. Finally, I could find the workaround to do it. And recently, I have given this function to ggsrun which is a CLI tool.</description>
    </item>
    
    <item>
      <title>GAS Library - ProjectApp</title>
      <link>https://tanaikech.github.io/2017/11/08/gas-library---projectapp/</link>
      <pubDate>Wed, 08 Nov 2017 11:20:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/08/gas-library---projectapp/</guid>
      <description>Overview This is a GAS project library for Google Apps Script (GAS).

Description There are Class SpreadsheetApp and Class DocumentApp for operating spreadsheet and document, respectively. But there is no Class for operating GAS project. If there is the Class ProjectApp, GAS project can be directly operated by GAS script. I thought that this will lead to new applications, and created ProjectApp.
On the other hand, as a CLI tool for operating GAS project, there has already been ggsrun.</description>
    </item>
    
    <item>
      <title>Exporting Project on Google Drive using Golang Quickstart</title>
      <link>https://tanaikech.github.io/2017/08/27/exporting-project-on-google-drive-using-golang-quickstart/</link>
      <pubDate>Sun, 27 Aug 2017 12:01:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/27/exporting-project-on-google-drive-using-golang-quickstart/</guid>
      <description>Gists
This is a sample script for exporting a project on Google Drive to local PC using Golang Quickstart. A file with refresh token is saved to the same directory with this script as go-quickstart.json. Before you run this script, please enable Drive API on your Google API console.
Points for exporting project  In order to export project, both drive.DriveScriptsScope and drive.DriveScope have to be included in the scope.</description>
    </item>
    
  </channel>
</rss>