<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PDF on tanaike</title>
    <link>https://tanaikech.github.io/tags/pdf/</link>
    <description>Recent content in PDF on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sat, 05 Aug 2023 16:34:42 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/pdf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating PDF Forms from Google Slide Template using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/05/creating-pdf-forms-from-google-slide-template-using-google-apps-script/</link>
      <pubDate>Sat, 05 Aug 2023 16:34:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/05/creating-pdf-forms-from-google-slide-template-using-google-apps-script/</guid>
      <description>Gists This is a sample script for creating PDF forms from a Google Slide template using Google Apps Script. Recently, I had a situation where it is required to create a custom PDF form. In that case, I thought that when a PDF form can be created from a template, it might be useful. So, I created the following Class with Google Apps Script. When this Class is used, a</description>
    </item>
    
    <item>
      <title>Retrieving and Putting Values for PDF Forms using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/02/retrieving-and-putting-values-for-pdf-forms-using-google-apps-script/</link>
      <pubDate>Wed, 02 Aug 2023 12:17:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/02/retrieving-and-putting-values-for-pdf-forms-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving and putting values for PDF Forms using Google Apps Script.
PDF can have the PDF Form for inputting the values in the PDF by the user. Ref Recently, I had a situation that required me to retrieve and put the values to the PDF Form using Google Apps Script. In order to achieve this, I created a Class object with Google Apps Script.</description>
    </item>
    
    <item>
      <title>Changing Order of Pages in PDF file using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/27/changing-order-of-pages-in-pdf-file-using-google-apps-script/</link>
      <pubDate>Thu, 27 Jul 2023 11:51:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/27/changing-order-of-pages-in-pdf-file-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for changing the order of pages in a PDF file using Google Apps Script.
Sample script Before you run this script, please set the variables in the function main.
/** * ### Description * Changing order of pages in a PDF file. * * @param {Object} fileId is file ID of PDF file. newOrderOfpages is new order of pages. About &amp;#34;ignoreSkippedPages&amp;#34;, if this is false, when the PDF has 5 pages and &amp;#34;newOrderOfpages&amp;#34; is &amp;#34;[3, 2]&amp;#34;, the exported PDF file has 5 pages of 3, 2, 1, 4, 5.</description>
    </item>
    
    <item>
      <title>Management of PDF Metadata using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/24/management-of-pdf-metadata-using-google-apps-script/</link>
      <pubDate>Mon, 24 Jul 2023 14:45:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/24/management-of-pdf-metadata-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for managing the metadata of PDF data using Google Apps Script.
There might be a case in that you want to retrieve and update the metadata of PDF data using Google Apps Script. In this post, I would like to introduce achieving this.
Class ManagePdfMetadata This is a Class ManagePdfMetadata. This Class is used for managing the metadata of PDF files using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Exporting Specific Pages From a PDF as a New PDF Using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/14/exporting-specific-pages-from-a-pdf-as-a-new-pdf-using-google-apps-script/</link>
      <pubDate>Fri, 14 Jul 2023 14:21:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/14/exporting-specific-pages-from-a-pdf-as-a-new-pdf-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for exporting the specific pages from a PDF as a new PDF using Google Apps Script.
In this sample script, pdf-lib is used. In the current stage, it seems that this Javascript can be directly used with Google Apps Script.
Sample script async function myFunction() {  // Retrieve PDF data.  const fileId = &amp;#34;###&amp;#34;; // Please set a file ID of your a PDF file or a file ID of Google Docs files (Document, Spreadsheet, Slide).</description>
    </item>
    
    <item>
      <title>Converting All Pages in PDF File to PNG Images using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/01/11/converting-all-pages-in-pdf-file-to-png-images-using-google-apps-script/</link>
      <pubDate>Wed, 11 Jan 2023 11:09:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/11/converting-all-pages-in-pdf-file-to-png-images-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting all pages in a PDF file to PNG images using Google Apps Script.
I have already published &amp;ldquo;Merging Multiple PDF Files as a Single PDF File using Google Apps Script&amp;rdquo;. In this post, it was found that pdf-lib can be used with Google Apps Script. From this, in this post, I would like to propose a sample script for converting all pages in a PDF file to PNG images using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Merging Multiple PDF Files as a Single PDF File using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/01/10/merging-multiple-pdf-files-as-a-single-pdf-file-using-google-apps-script/</link>
      <pubDate>Tue, 10 Jan 2023 10:19:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/10/merging-multiple-pdf-files-as-a-single-pdf-file-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for merging multiple PDF files as a single PDF file using Google Apps Script.
In this sample script, pdf-lib is used. In the current stage, it seems that this Javascript can be directly used with Google Apps Script.
Sample script As a sample situation, please put multiple PDF files in your Google Drive. This sample merges those PDF files as a single PDF file.</description>
    </item>
    
  </channel>
</rss>
