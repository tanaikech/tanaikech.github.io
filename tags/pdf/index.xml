<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PDF on tanaike</title>
    <link>https://tanaikech.github.io/tags/pdf/</link>
    <description>Recent content in PDF on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sun, 26 Nov 2023 15:28:20 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/pdf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Updated: GAS Library - PDFApp</title>
      <link>https://tanaikech.github.io/2023/11/26/updated-gas-library-pdfapp/</link>
      <pubDate>Sun, 26 Nov 2023 15:28:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/11/26/updated-gas-library-pdfapp/</guid>
      <description>PDFApp was updated to v1.0.3.   v1.0.3 (November 26, 2023)
 From this discussion, I changed the logic of the method mergePDFs. The method for using mergePDFs and the output are not changed. With this modification, the large PDF data can be merged.    You can see the detail information here https://github.com/tanaikech/PDFApp</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - PDFApp</title>
      <link>https://tanaikech.github.io/2023/08/21/updated-gas-library-pdfapp/</link>
      <pubDate>Mon, 21 Aug 2023 14:10:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/21/updated-gas-library-pdfapp/</guid>
      <description>PDFApp was updated to v1.0.2.   v1.0.2 (August 21, 2023)
 A new method of insertHeaderFooter was added. Ref When this method is used, the custom header and footer can be added when a Google Spreadsheet is exported as PDF.    You can see the detail information here https://github.com/tanaikech/PDFApp</description>
    </item>
    
    <item>
      <title>Add Header and Footer to Exported PDF from Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/21/add-header-and-footer-to-exported-pdf-from-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 21 Aug 2023 12:08:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/21/add-header-and-footer-to-exported-pdf-from-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for adding header and footer to PDF using Google Apps Script.
In the current stage, when Google Spreadsheet is manually exported as a PDF file at &amp;ldquo;Print settings&amp;rdquo; on the UI of Spreadsheet, the custom header and footer can be added as shown in the following image.
But, unfortunately, in the current stage, this cannot be directly achieved by Google Apps Script. So, I created this sample script.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - PDFApp</title>
      <link>https://tanaikech.github.io/2023/08/18/updated-gas-library-pdfapp/</link>
      <pubDate>Fri, 18 Aug 2023 21:20:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/18/updated-gas-library-pdfapp/</guid>
      <description>PDFApp was updated to v1.0.1.   v1.0.1 (August 18, 2023)
 About the method of &amp;ldquo;getMetadata&amp;rdquo;, pageInfo is added to the retrieved metadata. By this, each page size can be obtained.    You can see the detail information here https://github.com/tanaikech/PDFApp</description>
    </item>
    
    <item>
      <title>GAS Library - PDFApp</title>
      <link>https://tanaikech.github.io/2023/08/17/gas-library-pdfapp/</link>
      <pubDate>Thu, 17 Aug 2023 14:46:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/17/gas-library-pdfapp/</guid>
      <description>Overview This is a Google Apps Script library for managing PDFs.
Description Google Apps Script is one of the most powerful tools for cloud computing. When Google Apps Script is used, the result can be obtained even when the user doesn&amp;rsquo;t stay in front of the PC and mobile phone by the triggers. One day, there might be a case where it is required to manage PDF data using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Cooking PDF over Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/17/cooking-pdf-over-google-apps-script/</link>
      <pubDate>Thu, 17 Aug 2023 14:42:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/17/cooking-pdf-over-google-apps-script/</guid>
      <description>Gists
Abstract When PDF file can be managed with Google Apps Script, that will lead to the automation process on cloud. In this report, the method for cooking PDF over Google Apps Script.
Introduction Google Apps Script is one of the strong tools for achieving the automation process. When Google Apps Script can be used for the situation, it can be processed with cloud computing. By this, the users are not required to stay on the desks with the PC.</description>
    </item>
    
    <item>
      <title>Embedding Objects in PDF using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/07/embedding-objects-in-pdf-using-google-apps-script/</link>
      <pubDate>Mon, 07 Aug 2023 17:06:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/07/embedding-objects-in-pdf-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for embedding the objects in PDF using Google Apps Script.
Recently, I had a situation where it is required to manage PDFs using Google Apps Script. At that time, I had a situation where it is required to embed objects of texts and images in PDF using Google Apps Script. So, I created the following Class with Google Apps Script. When this Class is used, the objects of texts and images can embed in PDF.</description>
    </item>
    
    <item>
      <title>Creating PDF Forms from Google Slide Template using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/05/creating-pdf-forms-from-google-slide-template-using-google-apps-script/</link>
      <pubDate>Sat, 05 Aug 2023 16:34:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/05/creating-pdf-forms-from-google-slide-template-using-google-apps-script/</guid>
      <description>Gists This is a sample script for creating PDF forms from a Google Slide template using Google Apps Script. Recently, I had a situation where it is required to create a custom PDF form. In that case, I thought that when a PDF form can be created from a template, it might be useful. So, I created the following Class with Google Apps Script. When this Class is used, a</description>
    </item>
    
    <item>
      <title>Retrieving and Putting Values for PDF Forms using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/08/02/retrieving-and-putting-values-for-pdf-forms-using-google-apps-script/</link>
      <pubDate>Wed, 02 Aug 2023 12:17:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/08/02/retrieving-and-putting-values-for-pdf-forms-using-google-apps-script/</guid>
      <description>Gists This is a sample script for retrieving and putting values for PDF Forms using Google Apps Script. PDF can have the PDF Form for inputting the values in the PDF by the user. Ref Recently, I had a situation that required me to retrieve and put the values to the PDF Form using Google Apps Script. In order to achieve this, I created a Class object with Google Apps</description>
    </item>
    
    <item>
      <title>Changing Order of Pages in PDF file using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/27/changing-order-of-pages-in-pdf-file-using-google-apps-script/</link>
      <pubDate>Thu, 27 Jul 2023 11:51:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/27/changing-order-of-pages-in-pdf-file-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for changing the order of pages in a PDF file using Google Apps Script.
Sample script Before you run this script, please set the variables in the function main.
/** * ### Description * Changing order of pages in a PDF file. * * @param {Object} fileId is file ID of PDF file. newOrderOfpages is new order of pages. About &amp;#34;ignoreSkippedPages&amp;#34;, if this is false, when the PDF has 5 pages and &amp;#34;newOrderOfpages&amp;#34; is &amp;#34;[3, 2]&amp;#34;, the exported PDF file has 5 pages of 3, 2, 1, 4, 5.</description>
    </item>
    
    <item>
      <title>Management of PDF Metadata using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/24/management-of-pdf-metadata-using-google-apps-script/</link>
      <pubDate>Mon, 24 Jul 2023 14:45:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/24/management-of-pdf-metadata-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for managing the metadata of PDF data using Google Apps Script.
There might be a case in that you want to retrieve and update the metadata of PDF data using Google Apps Script. In this post, I would like to introduce achieving this.
Class ManagePdfMetadata This is a Class ManagePdfMetadata. This Class is used for managing the metadata of PDF files using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Exporting Specific Pages From a PDF as a New PDF Using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/14/exporting-specific-pages-from-a-pdf-as-a-new-pdf-using-google-apps-script/</link>
      <pubDate>Fri, 14 Jul 2023 14:21:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/14/exporting-specific-pages-from-a-pdf-as-a-new-pdf-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for exporting the specific pages from a PDF as a new PDF using Google Apps Script.
In this sample script, pdf-lib is used. In the current stage, it seems that this Javascript can be directly used with Google Apps Script.
Sample script async function myFunction() {  // Retrieve PDF data.  const fileId = &amp;#34;###&amp;#34;; // Please set a file ID of your a PDF file or a file ID of Google Docs files (Document, Spreadsheet, Slide).</description>
    </item>
    
    <item>
      <title>Converting All Pages in PDF File to PNG Images using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/01/11/converting-all-pages-in-pdf-file-to-png-images-using-google-apps-script/</link>
      <pubDate>Wed, 11 Jan 2023 11:09:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/11/converting-all-pages-in-pdf-file-to-png-images-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting all pages in a PDF file to PNG images using Google Apps Script.
I have already published &amp;ldquo;Merging Multiple PDF Files as a Single PDF File using Google Apps Script&amp;rdquo;. In this post, it was found that pdf-lib can be used with Google Apps Script. From this, in this post, I would like to propose a sample script for converting all pages in a PDF file to PNG images using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Merging Multiple PDF Files as a Single PDF File using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/01/10/merging-multiple-pdf-files-as-a-single-pdf-file-using-google-apps-script/</link>
      <pubDate>Tue, 10 Jan 2023 10:19:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/10/merging-multiple-pdf-files-as-a-single-pdf-file-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for merging multiple PDF files as a single PDF file using Google Apps Script.
In this sample script, pdf-lib is used. In the current stage, it seems that this Javascript can be directly used with Google Apps Script.
Sample script 1 As a sample situation, please put multiple PDF files in your Google Drive. This sample merges those PDF files as a single PDF file.</description>
    </item>
    
  </channel>
</rss>
