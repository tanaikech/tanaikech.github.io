<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Synchronous on tanaike</title>
    <link>https://tanaikech.github.io/tags/synchronous/</link>
    <description>Recent content in Synchronous on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 12 Feb 2019 09:02:16 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/synchronous/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sample Script for Executing with Synchronous Process using Node.js</title>
      <link>https://tanaikech.github.io/2019/02/12/sample-script-for-executing-with-synchronous-process-using-node.js/</link>
      <pubDate>Tue, 12 Feb 2019 09:02:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/02/12/sample-script-for-executing-with-synchronous-process-using-node.js/</guid>
      <description>Gists
This is a sample script for executing with the synchronous process using Node.js.
Sample script function work(e) { return new Promise((resolve, reject) =&amp;gt; { setTimeout(() =&amp;gt; { console.log(e); resolve(&amp;quot;ok&amp;quot; + e); }, 1000); }); } async function main() { var ar = [1, 2, 3, 4, 5]; for (var i = 0; i &amp;lt; ar.length; i++) { console.log(&#39;start&#39; + ar[i]); await work(ar[i]).then((res) =&amp;gt; console.log(res)); console.log(&#39;end&#39; + ar[i]); } } main(); // Run main().</description>
    </item>
    
  </channel>
</rss>