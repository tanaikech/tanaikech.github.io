<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>struct on tanaike</title>
    <link>https://tanaikech.github.io/tags/struct/</link>
    <description>Recent content in struct on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 25 Jun 2019 14:34:02 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/struct/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dynamically Retrieving Keys and Values from Struct Property</title>
      <link>https://tanaikech.github.io/2019/06/25/dynamically-retrieving-keys-and-values-from-struct-property/</link>
      <pubDate>Tue, 25 Jun 2019 14:34:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/06/25/dynamically-retrieving-keys-and-values-from-struct-property/</guid>
      <description>Gists
This is a sample script for dynamically retrieving the keys and values from struct property using golang.
Sample script: Go Playground
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;reflect&amp;quot;)func main() {s := struct {key1 stringkey2 stringkey3 string}{&amp;quot;value1&amp;quot;, &amp;quot;value2&amp;quot;, &amp;quot;value3&amp;quot;}r := reflect.ValueOf(&amp;amp;s).Elem()rt := r.Type()for i := 0; i &amp;lt; rt.NumField(); i++ {field := rt.Field(i)rv := reflect.ValueOf(&amp;amp;s)value := reflect.Indirect(rv).FieldByName(field.Name)fmt.Println(field.Name, value.</description>
    </item>
    
  </channel>
</rss>