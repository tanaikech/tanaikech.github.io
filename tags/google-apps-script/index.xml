<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Apps Script on tanaike</title>
    <link>https://tanaikech.github.io/tags/google-apps-script/</link>
    <description>Recent content in Google Apps Script on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 19 Apr 2021 15:56:30 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/google-apps-script/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Colorful Buttons on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/19/creating-colorful-buttons-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 19 Apr 2021 15:56:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/19/creating-colorful-buttons-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating the colorful buttons on Google Spreadsheet on Google Apps Script.
In order to achieve this, I have been looking for the method for creating the PNG image with the alpha channel using Google Apps Script. Recently, finally, I could find it. By this, the goal of this report got to be able to be achieved by the report of &amp;ldquo;Creating PNG Image with Alpha Channel using Google Apps Script&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Creating PNG Image with Alpha Channel using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/19/creating-png-image-with-alpha-channel-using-google-apps-script/</link>
      <pubDate>Mon, 19 Apr 2021 15:50:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/19/creating-png-image-with-alpha-channel-using-google-apps-script/</guid>
      <description>This is a sample script for creating a PNG image with the alpha channel using Google Apps Script.
The PNG image with the alpha channel is the image includes the transparent background. I have been looking for the method for creating such image using Google Apps Script. It is considered that when this will be achieved, it will be able to be used for various situations. For example, it is considered the following situations.</description>
    </item>
    
    <item>
      <title>A Bug of New IDE about Time Zone of Google Apps Script project was removed</title>
      <link>https://tanaikech.github.io/2021/04/06/a-bug-of-new-ide-about-time-zone-of-google-apps-script-project-was-removed/</link>
      <pubDate>Tue, 06 Apr 2021 16:57:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/06/a-bug-of-new-ide-about-time-zone-of-google-apps-script-project-was-removed/</guid>
      <description>Gists
I had confirmed a bug of new IDE about the time zone of Google Apps script project. When I created new Google Apps Script project using new IDE, the time zone of GAS project is always America/New_York. In my area, it&#39;s Asia/Tokyo. The time zone can be confirmed at appscript.json.
So, I had reported this issue to Google issue tracker. Ref After I posted this, I had also confirmed this issue at Stackoverflow.</description>
    </item>
    
    <item>
      <title>Plotting Points on Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/02/plotting-points-on-image-using-google-apps-script/</link>
      <pubDate>Fri, 02 Apr 2021 15:27:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/02/plotting-points-on-image-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for plotting the points on an image using Google Apps Script.
Unfortunately, in the current stage, there are no methods for directly editing the image and putting the texts and some shapes in the methods for Google Apps Script. So in this case, it is required to use the workaround.
Fortunately, I have already published a report about &amp;ldquo;Inserting Text on Image using Google Apps Script&amp;rdquo; in my blog.</description>
    </item>
    
    <item>
      <title>Redeploying Web Apps without Changing URL of Web Apps for new IDE</title>
      <link>https://tanaikech.github.io/2021/03/29/redeploying-web-apps-without-changing-url-of-web-apps-for-new-ide/</link>
      <pubDate>Mon, 29 Mar 2021 14:51:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/03/29/redeploying-web-apps-without-changing-url-of-web-apps-for-new-ide/</guid>
      <description>Gists
At March 15, 2021, one endpoint is created for one deployment. Ref By this, when you redeploy &amp;ldquo;Web Apps&amp;rdquo;, the endpoint is changed. Because the deployment ID is changed. It seems that this it the new specification. In this report, I would like to introduce the method for redeploying Web Apps without changing the URL of Web Apps for new IDE.
Deploy Web Apps   Open &amp;ldquo;New deployment&amp;rdquo; dialog with &amp;ldquo;Deploy&amp;rdquo; -&amp;gt; &amp;ldquo;New deployment&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Linking Google Cloud Platform Project to Google Apps Script Project for New IDE</title>
      <link>https://tanaikech.github.io/2021/03/29/linking-google-cloud-platform-project-to-google-apps-script-project-for-new-ide/</link>
      <pubDate>Mon, 29 Mar 2021 12:45:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/03/29/linking-google-cloud-platform-project-to-google-apps-script-project-for-new-ide/</guid>
      <description>This is the document for linking Google Cloud Platform Project to Google Apps Script Project for New IDE. And also, several sample scripts using Google Apps Script API and Google Photos API are introduced.
You can see the detail of this document at https://github.com/tanaikech/Linking-Google-Cloud-Platform-Project-to-Google-Apps-Script-Project-for-New-IDE.</description>
    </item>
    
    <item>
      <title>Copying Protections for Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/03/26/copying-protections-for-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 26 Mar 2021 10:43:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/03/26/copying-protections-for-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for copying the protections for Spreadsheet using Google Apps Script. When several protections of the sheet protection and the range protection are set to a Google Spreadsheet and the Spreadsheet is copied using the script and the manual copy with the browser, unfortunately, the protections of ranges are not copied. And also, the protections of sheets can be copied. But, the editor emails are not included.</description>
    </item>
    
    <item>
      <title>Javascript library - HtmlFormObjectParserForGoogleAppsScript_js</title>
      <link>https://tanaikech.github.io/2021/02/13/javascript-library-htmlformobjectparserforgoogleappsscript_js/</link>
      <pubDate>Sat, 13 Feb 2021 17:11:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/02/13/javascript-library-htmlformobjectparserforgoogleappsscript_js/</guid>
      <description>Parser for Sending HTML Form Object to Google Apps Script using google.script.run Overview This is a Javascript library for sending the HTML form object to Google Apps Script using google.script.run.
Description HTML form object is parsed by this library, and the object can be sent to Google Apps Script using google.script.run. After the V8 runtime got to be able to be used for Google Apps Script, when the file input tag is included in the HTML form object, the object sent to Google Apps Script using google.</description>
    </item>
    
    <item>
      <title>XPath Tester using Web Apps Created by Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/02/02/xpath-tester-using-web-apps-created-by-google-apps-script/</link>
      <pubDate>Tue, 02 Feb 2021 18:15:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/02/02/xpath-tester-using-web-apps-created-by-google-apps-script/</guid>
      <description>Gists
In this post, I would like to introduce the xpath tester using Web Apps created by Google Apps Script.
Demo Usage 1. Prepare Google Spreadsheet. Please create new Google Spreadsheet on your Google Drive.
2. Enable Sheets API. Please open the script editor at the created new Spreadsheet and enable Sheets API at Advanced Google services.
3. Prepare sample script. Please copy and paste the following script to the script editor on the created new Spreadsheet and save it.</description>
    </item>
    
    <item>
      <title>Simple Photo Gallery Created by Google Slides and Web Apps using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/01/24/simple-photo-gallery-created-by-google-slides-and-web-apps-using-google-apps-script/</link>
      <pubDate>Sun, 24 Jan 2021 15:56:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/24/simple-photo-gallery-created-by-google-slides-and-web-apps-using-google-apps-script/</guid>
      <description>Overview This is a sample script for achieving a simple photo gallery created by Google Slides and Web Apps using Google Apps Script.
Description At Google, there is a great Google Photos. Ref Recently, I was required to have a simple photo gallery. At that time, I thought that when an independence photo gallery instead of Google Photos can be used, it will be useful. Also, this might be useful for other users.</description>
    </item>
    
    <item>
      <title>Trend of google-apps-script Tag on Stackoverflow 2021</title>
      <link>https://tanaikech.github.io/2021/01/16/trend-of-google-apps-script-tag-on-stackoverflow-2021/</link>
      <pubDate>Sat, 16 Jan 2021 15:46:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/16/trend-of-google-apps-script-tag-on-stackoverflow-2021/</guid>
      <description>Gists
Published: January 16, 2021
Kanshi Tanaike
Introduction At Stackoverflow, a lot of people post the questions and answers to the questions every day. There are various tags in Stackoverflow. A lot of discussions are performed at each tag. Their discussions bring the important information and are much useful for a lot of people. As one of tags, there is &amp;ldquo;google-apps-script&amp;rdquo;. I sometimes discuss at the questions with that tag. When we see the discussions, we can notice that the discussions are changed and progressed by the time, because &amp;ldquo;Google Apps Script&amp;rdquo; which is the origin of the tag is updated.</description>
    </item>
    
    <item>
      <title>Creating Custom Grid View of Google Slides as Image and Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/01/13/creating-custom-grid-view-of-google-slides-as-image-and-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 13 Jan 2021 12:19:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/13/creating-custom-grid-view-of-google-slides-as-image-and-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating the custom grid view of Google Slides as an image using Google Apps Script.
Demo Usage In order to use this script, please do the following flow.
1. Install GAS library This sample script uses a library of DocsServiceApp. So please install DocsServiceApp. You can see the method for installing it at here.
2. Enable APIs This sample script uses 2 APIs of Drive API and Slides API.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2021/01/13/updated-gas-library-batchrequest/</link>
      <pubDate>Wed, 13 Jan 2021 09:53:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/13/updated-gas-library-batchrequest/</guid>
      <description>BatchRequest was updated to v1.1.3.   v1.1.3 (January 13, 2021)
 In order to give the access token from outside, the access token got to be able to be included in the object. By this, for example, you can use the access token retrieved by the service account.    You can check this at https://github.com/tanaikech/BatchRequest.</description>
    </item>
    
    <item>
      <title>Adding Slide Page Link to Shape using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/01/10/adding-slide-page-link-to-shape-using-google-apps-script/</link>
      <pubDate>Sun, 10 Jan 2021 16:00:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/10/adding-slide-page-link-to-shape-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for adding the slide page link to the shape using Google Apps Script.
When I use Google Slides, there is the case that I want to jump to the specific slide on the same Google Slides. And, I have the case that I want to jump from the last slide to the 1st slide. In those cases, I had manually added the slide page link to each shape.</description>
    </item>
    
    <item>
      <title>Safe-Uploading for Google Drive by HTML in External Server using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</link>
      <pubDate>Tue, 29 Dec 2020 11:13:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</guid>
      <description>Overview This is a report for safe-uploading files to Google Drive by HTML put in the external server using Google Apps Script.
Description When you want to make the user upload a file to your own Google Drive using the HTML put in the external server of Google side, when the file size is smaller than 50 MB, this can be achieved without using the access token. Ref (When the HTML is put in the internal server of Google side, you can also use google.</description>
    </item>
    
    <item>
      <title>Meet the Google Workspace Developer Experts</title>
      <link>https://tanaikech.github.io/2020/12/15/meet-the-google-workspace-developer-experts/</link>
      <pubDate>Tue, 15 Dec 2020 10:57:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/15/meet-the-google-workspace-developer-experts/</guid>
      <description>Original post
Superheroes are well known for wearing capes, fighting villains and looking to save the world from evil. There also are superheroes that quietly choose to use their super powers to explain technology to new users, maintain community forums, write blog posts, speak at events, host video series, create demos, share sample code and more. All in the name of helping other developers become more successful by learning new skills, delivering better apps, and ultimately enhancing their careers.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FilesApp</title>
      <link>https://tanaikech.github.io/2020/12/12/updated-gas-library-filesapp/</link>
      <pubDate>Sat, 12 Dec 2020 17:23:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/12/updated-gas-library-filesapp/</guid>
      <description>FilesApp was updated to v1.1.3.
  v1.1.3 (December 12, 2020)
 Access token got to be able to be given as an argument. When the access token is not given as the argument, ScriptApp.getOAuthToken() is used as the default access token. By this, the service account can be used.    GitHub of FilesApp</description>
    </item>
    
    <item>
      <title>New IDE for Google Apps Script has been finally released</title>
      <link>https://tanaikech.github.io/2020/12/08/new-ide-for-google-apps-script-has-been-finally-released/</link>
      <pubDate>Tue, 08 Dec 2020 12:15:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/08/new-ide-for-google-apps-script-has-been-finally-released/</guid>
      <description>New IDE for Google Apps Script has finally been released at December 7, 2020. Ref
I think that the speed for displaying the log is faster than old one, and the code completion also got to be easy to see.</description>
    </item>
    
    <item>
      <title>Achieving Search of Files by &#39;is:unorganized owner:me&#39; using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/12/06/achieving-search-of-files-by-isunorganized-ownerme-using-google-apps-script/</link>
      <pubDate>Sun, 06 Dec 2020 15:52:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/06/achieving-search-of-files-by-isunorganized-ownerme-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for achieving the search of files by is:unorganized owner:me using Google Apps Script.
In the current stage, unfortunately, the files cannot be directly retrieved by searching is:unorganized owner:me with Drive API and Drive service. So as the current workaround, all files are retrieved using the method of &amp;ldquo;Files: list&amp;rdquo; of Drive API with &#39;me&#39; in owners and trashed = false, and the file list is retrieved from all file list using a script.</description>
    </item>
    
    <item>
      <title>Sample Scripts for Creating New Event with Google Meet Link to Google Calendar using Various Languages</title>
      <link>https://tanaikech.github.io/2020/12/03/sample-scripts-for-creating-new-event-with-google-meet-link-to-google-calendar-using-various-languages/</link>
      <pubDate>Thu, 03 Dec 2020 16:04:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/03/sample-scripts-for-creating-new-event-with-google-meet-link-to-google-calendar-using-various-languages/</guid>
      <description>Gists
This is the sample scripts for creating new event with Google Meet link to Google Calendar using various languages. When I saw the official document of &amp;ldquo;Add video and phone conferences to events&amp;rdquo;, in the current stage, I can see only the sample script for Javascript. But I saw the several questions related to this for various languages. So I published the sample scripts for creating new event with Google Meet link to Google Calendar using various languages.</description>
    </item>
    
    <item>
      <title>Downloading Active Sheet in Google Spreadsheet as CSV and PDF file by Clicking Button</title>
      <link>https://tanaikech.github.io/2020/11/23/downloading-active-sheet-in-google-spreadsheet-as-csv-and-pdf-file-by-clicking-button/</link>
      <pubDate>Mon, 23 Nov 2020 14:10:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/11/23/downloading-active-sheet-in-google-spreadsheet-as-csv-and-pdf-file-by-clicking-button/</guid>
      <description>Gists
This is a sample script for downloading the active sheet in Google Spreadsheet to the local PC as a CSV file and a PDF file when a button on the side bar and the dialog is clicked. This is created with Google Apps Script and HTML&amp;amp;Javascript. In this post, the script of the previous post was modified.
Sample script Please create new Google Spreadsheet and copy and paste the following scripts to the script editor.</description>
    </item>
    
    <item>
      <title>Converting Texts to Bold, Italic and Bold-Italic Types of Unicode using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/11/13/converting-texts-to-bold-italic-and-bold-italic-types-of-unicode-using-google-apps-script/</link>
      <pubDate>Fri, 13 Nov 2020 13:39:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/11/13/converting-texts-to-bold-italic-and-bold-italic-types-of-unicode-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting the texts to the bold, italic, bold-italic types, underline and strike through of the unicode using Google Apps Script. In the current stage, at Google Docs (Spreadsheet, Document, Slides and so on), the rich texts cannot be directly managed for all places using Google Apps Script. But there are the places which can use the bold, italic and bold-italic fonts with the unicode.</description>
    </item>
    
    <item>
      <title>Replacing Multiple Values in Google Spreadsheet with Low Process Cost using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/11/13/replacing-multiple-values-in-google-spreadsheet-with-low-process-cost-using-google-apps-script/</link>
      <pubDate>Fri, 13 Nov 2020 08:06:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/11/13/replacing-multiple-values-in-google-spreadsheet-with-low-process-cost-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing the multiple values with various values in Google Spreadsheet with the low process cost using Google Apps Script. In this script, the batchUpdate method of Sheets API is used. So the request can be done by one API call. When Spreadsheet services is used for this situation, the values are retrieved from the sheet and replaced the retrieved values, and then, the updated values are put to the sheet.</description>
    </item>
    
    <item>
      <title>Benchmark: Measuring Process Costs for Formulas in Cells on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/11/11/benchmark-measuring-process-costs-for-formulas-in-cells-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 11 Nov 2020 14:20:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/11/11/benchmark-measuring-process-costs-for-formulas-in-cells-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Description When Google Spreadsheet is used, there is the case that the built-in functions and the custom functions in the cells are used. For the functions of Google Apps Script, there is the method for measuring the process cost. Ref But for the built-in functions, it is required to create the script for it. In this report, the script for measuring a function put in a cell has been proposed, and the process cost of the built-in functions has been measured.</description>
    </item>
    
    <item>
      <title>Downloading Google Spreadsheet as XLSX and PDF file by Clicking Button</title>
      <link>https://tanaikech.github.io/2020/11/10/downloading-google-spreadsheet-as-xlsx-and-pdf-file-by-clicking-button/</link>
      <pubDate>Tue, 10 Nov 2020 14:47:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/11/10/downloading-google-spreadsheet-as-xlsx-and-pdf-file-by-clicking-button/</guid>
      <description>Gists
This is a sample script for downloading Google Spreadsheet to the local PC as a XLSX file and a PDF file when a button on the side bar and the dialog is clicked. This is created with Google Apps Script and HTML&amp;amp;Javascript.
Sample script Please create new Google Spreadsheet and copy and paste the following scripts to the script editor. And please run openSidebar(). By this, the side bar is opened to the Spreadsheet.</description>
    </item>
    
    <item>
      <title>User Runs Script for Range Protected by Owner using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/11/05/user-runs-script-for-range-protected-by-owner-using-google-apps-script/</link>
      <pubDate>Thu, 05 Nov 2020 11:57:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/11/05/user-runs-script-for-range-protected-by-owner-using-google-apps-script/</guid>
      <description>Gists
There is a situation that it wants to make users run a script for the range protected by the owner using Google Apps Script. This is a sample script that an user runs a script for the range protected by the owner using Google Apps Script.
Demo This demonstration shows the following situations.
  Spreadsheet is shared with an user.
  The cell &amp;ldquo;A1&amp;rdquo; is protected by the owner.</description>
    </item>
    
    <item>
      <title>Benchmark: Process Costs for Retrieving Values from Arrays for Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/23/benchmark-process-costs-for-retrieving-values-from-arrays-for-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 23 Oct 2020 16:37:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/23/benchmark-process-costs-for-retrieving-values-from-arrays-for-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Introduction Here, I would like to report the process costs for retrieving the values from the arrays for Spreadsheet using Google Apps Script (GAS). When Spreadsheet is used with Google Apps Script, we have the following situations.
  Retrieve values from the multiple rows in a column.
  Retrieve values from the multiple columns in a row.
  When the values are retrieved from above situations, it is required to retrieve the values from 1 dimensional array in the 2 dimensional array.</description>
    </item>
    
    <item>
      <title>Creating Multiple Buttons on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/21/creating-multiple-buttons-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 21 Oct 2020 11:37:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/21/creating-multiple-buttons-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating the multiple buttons on Google Spreadsheet using Google Apps Script.
Recently, I have got several contacts about this. I thought that when this is published, it might be useful for other users. So I published this sample script.
Sample script Please copy and paste the following script to the script editor of the container-bound script of Google Spreadsheet. And, please set the variables and run the function createButtons.</description>
    </item>
    
    <item>
      <title>Request of multipart/form-data with Simple Request Body using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/17/request-of-multipart/form-data-with-simple-request-body-using-google-apps-script/</link>
      <pubDate>Sat, 17 Oct 2020 11:00:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/17/request-of-multipart/form-data-with-simple-request-body-using-google-apps-script/</guid>
      <description>Gists
This is a sample script of the request of multipart/form-data with a simple request body using Google Apps Script. I hope that the users will easy to use Class UrlFetchApp by this report.
This report is the updated post of &amp;ldquo;Multipart-POST Request Using Google Apps Script&amp;quot;.
Description I had already reported about this at this report. In that case, it was required to create a bit complicated request body to request multipart/form-data.</description>
    </item>
    
    <item>
      <title>Inserting Text on Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/13/inserting-text-on-image-using-google-apps-script/</link>
      <pubDate>Tue, 13 Oct 2020 08:23:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/13/inserting-text-on-image-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for inserting a text on an image using Google Apps Script.
Demo In this demonstration, &amp;ldquo;sample text&amp;rdquo; is inserted to the image. The image is from https://www.deviantart.com/k3-studio/art/Rainbow-painting-281090729.
Preparation When you use this script, please install the following 2 Google Apps Script libraries.
 DocsServiceApp ImgApp  And, please enable Slides API at Advanced Google services.
Flow The flow of this sample script is as follows.</description>
    </item>
    
    <item>
      <title>Retrieving All Values from All Sheets from URL of 2PACX- of Web Published Google Spreadsheet using Google Apps Script and Javascript</title>
      <link>https://tanaikech.github.io/2020/10/12/retrieving-all-values-from-all-sheets-from-url-of-2pacx-of-web-published-google-spreadsheet-using-google-apps-script-and-javascript/</link>
      <pubDate>Mon, 12 Oct 2020 13:42:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/12/retrieving-all-values-from-all-sheets-from-url-of-2pacx-of-web-published-google-spreadsheet-using-google-apps-script-and-javascript/</guid>
      <description>Gists
This is a sample script for retrieving all values from all sheets from URL of 2PACX- of Web Published Google Spreadsheet using Google Apps Script and Javascript.
In this post, it supposes that the Google Spreadsheet has already been published for Web. Ref
Flow The flow of this method is as follows.
 From the client side, send the URL of web published Google Spreadsheet to the Web Apps created by Google Apps Script.</description>
    </item>
    
    <item>
      <title>Sorting Cells on Google Spreadsheet with Background colors using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/09/sorting-cells-on-google-spreadsheet-with-background-colors-using-google-apps-script/</link>
      <pubDate>Fri, 09 Oct 2020 12:46:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/09/sorting-cells-on-google-spreadsheet-with-background-colors-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for sorting the cells on Google Spreadsheet with the background colors using Google Apps Script.
Unfortunately, in the current stage, it seems that sort(sortSpecObj) of Class Range cannot directly sort by the background colors of cells. But when Sheets API is used, this goal can be achieved. Here, &amp;ldquo;SortRangeRequest&amp;rdquo; of the method of &amp;ldquo;spreadsheets.batchUpdate&amp;rdquo; in Sheets API is used.
Flow The flow of this sample script is as follows.</description>
    </item>
    
    <item>
      <title>Statistical Analysis of Duplicated Questions for google-apps-script tag in Stackoverflow</title>
      <link>https://tanaikech.github.io/2020/10/07/statistical-analysis-of-duplicated-questions-for-google-apps-script-tag-in-stackoverflow/</link>
      <pubDate>Wed, 07 Oct 2020 13:51:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/07/statistical-analysis-of-duplicated-questions-for-google-apps-script-tag-in-stackoverflow/</guid>
      <description>Gists
Introduction At Stackoverflow, a lot of people post the questions and answer to the questions every day. By this, there are a lot of important information in Stackoverflow. I have already reported &amp;ldquo;Trend of google-apps-script Tag on Stackoverflow&amp;rdquo; using the data retrieved from Stackoverflow. Ref. 1 It is found that the important statistical result can be obtained by analyzing the data on Stackoverflow. In this report, I would like to introduce the statistical analysis of duplicated questions for the google-apps-script tag in Stackoverflow.</description>
    </item>
    
    <item>
      <title>Setting Alternate Background Colors for Rows in Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/06/setting-alternate-background-colors-for-rows-in-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Tue, 06 Oct 2020 13:39:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/06/setting-alternate-background-colors-for-rows-in-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for setting alternate background colors for rows in Google Spreadsheet using Google Apps Script.
It has already been known when the conditional formatting rule and custom function are used, this can be simply achieved. Ref In this report, I would like to introduce the method for using Google Apps Script.
Sample script In this sample script, the values of column &amp;ldquo;A&amp;rdquo; are checked.
function myFunction() {const colors = { color1: &amp;#34;#f4cccc&amp;#34;, color2: &amp;#34;#d9ead3&amp;#34; };const sheet = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Running Specific Function When Specific Sheet is Edited on Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2020/10/04/running-specific-function-when-specific-sheet-is-edited-on-google-spreadsheet/</link>
      <pubDate>Sun, 04 Oct 2020 09:23:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/04/running-specific-function-when-specific-sheet-is-edited-on-google-spreadsheet/</guid>
      <description>Gists
This is a sample Google Apps Script for running the specific function when the specific sheet is edited.
Sample script Please copy and paste the following script to the container-bound script of Spreadsheet and set sheets object.
// When the cells are edited, this function is run by the fire of event trigger.function onEdit(e) {// Please set the sheet name and function as follows. const sheets = {Sheet1: functionForSheet1, // Sheet1 is the sheet name.</description>
    </item>
    
    <item>
      <title>Benchmark: Process Costs for Searching Values in Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/09/30/benchmark-process-costs-for-searching-values-in-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 30 Sep 2020 11:42:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/30/benchmark-process-costs-for-searching-values-in-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Introduction Here, I would like to report the process costs for searching values in Spreadsheet using Google Apps Script (GAS). When the values are searched in Google Spreadsheet, the following 3 patterns can be considered. Ref
 Retrieve all values using getValues, and the values are searched from the retrieved array. Use TextFinder. Use Query language.  In these cases, it has already been found that the lowest process cost is to use the Query language.</description>
    </item>
    
    <item>
      <title>Creating Spreadsheet with Custom Header and Footer using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/09/25/creating-spreadsheet-with-custom-header-and-footer-using-google-apps-script/</link>
      <pubDate>Fri, 25 Sep 2020 09:52:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/25/creating-spreadsheet-with-custom-header-and-footer-using-google-apps-script/</guid>
      <description>Gists
In order to print and export as PDF file, this is a sample script for converting Spreadsheet to Spreadsheet which has the custom header and footer.
In this sample script, DocsServiceApp, which is Google Apps Script library, is used. And, in this case, the Spreadsheet with the custom header and footer is created as new Spreadsheet.
Before you use this script, please install DocsServiceApp and enable Drive API at Advanced Google services.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2020/09/24/updated-gas-library-imgapp/</link>
      <pubDate>Thu, 24 Sep 2020 14:41:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/24/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.3.0.
 v1.3.0 (September 24, 2020)  Added new method. Added editImage() This method is for editing images. In the current stage, the image can be cropped. And several images can be merged as an image.    You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>GAS Library - DocsServiceApp</title>
      <link>https://tanaikech.github.io/2020/09/24/gas-library-docsserviceapp/</link>
      <pubDate>Thu, 24 Sep 2020 14:39:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/24/gas-library-docsserviceapp/</guid>
      <description>Overview This is a Google Apps Script library for supporting Document service, Docs API, Spreadsheet service, Sheets API, Slides service and Slides API. The aim of this library is to compensate the processes that they services cannot achieve.
Description The Google services, which are Document service, Docs API, Spreadsheet service, Sheets API, Slides service and Slides API, are growing now. But, unfortunately, there are still the processes that they cannot done.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FetchApp</title>
      <link>https://tanaikech.github.io/2020/09/19/updated-gas-library-fetchapp/</link>
      <pubDate>Sat, 19 Sep 2020 13:11:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/19/updated-gas-library-fetchapp/</guid>
      <description>FetchApp was updated to v1.0.2.   v1.0.2 (September 19, 2020)
 From this version, when a blob is sent, the blob is sent to files.    You can check this at https://github.com/tanaikech/FetchApp.</description>
    </item>
    
    <item>
      <title>Retrieving All URLs in Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/09/14/retrieving-all-urls-in-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 14 Sep 2020 10:57:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/14/retrieving-all-urls-in-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving All URLs in Google Document using Google Apps Script. In this sample script, the method of &amp;ldquo;documents.get&amp;rdquo; in Google Docs API is used. By this, the URL can be retrieve using JSON.parse().
Sample script Before you use this script, please enable Google Docs API at Advanced Google Services.
const documentId = &amp;#34;###&amp;#34;; // Please set the Google Document ID.const content = Docs.</description>
    </item>
    
    <item>
      <title>Using Values Submitted from HTML Form using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/09/04/using-values-submitted-from-html-form-using-google-apps-script/</link>
      <pubDate>Fri, 04 Sep 2020 14:58:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/04/using-values-submitted-from-html-form-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for using the values submitted from the HTML form using Google Apps Script and Javascript. In this case, the values include the files.
Issue &amp;lt;form&amp;gt;Text: &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;sampleText1&amp;#34; /&amp;gt;&amp;lt;br /&amp;gt;Single file: &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;sampleFile1&amp;#34; /&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;inputtype=&amp;#34;submit&amp;#34;name=&amp;#34;button&amp;#34;value=&amp;#34;submit&amp;#34;onclick=&amp;#34;main(this.parentNode)&amp;#34;/&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;script&amp;gt;function main(e) {google.script.run.sample(e);}&amp;lt;/script&amp;gt;This is a simple sample script for sending the values of form to Google Apps Script.</description>
    </item>
    
    <item>
      <title>Converting Range in Google Spreadsheet as Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/19/converting-range-in-google-spreadsheet-as-image-using-google-apps-script/</link>
      <pubDate>Wed, 19 Aug 2020 14:25:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/19/converting-range-in-google-spreadsheet-as-image-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting a range in Google Spreadsheet as an image data using Google Apps Script. Unfortunately, there are no methods for directly converting the range in Google Spreadsheet as an image data in the built-in functions. So in this case, as a workaround, Charts Service is used.
Sample script const range = &amp;#34;B5:D10&amp;#34;;const [header, ...values] = SpreadsheetApp.getActiveSheet().getRange(range).getDisplayValues();const table = Charts.newDataTable();header.</description>
    </item>
    
    <item>
      <title>Modifying 1st-Page Header in Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/19/modifying-1st-page-header-in-google-document-using-google-apps-script/</link>
      <pubDate>Wed, 19 Aug 2020 13:42:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/19/modifying-1st-page-header-in-google-document-using-google-apps-script/</guid>
      <description>Gists
These are sample scripts for modifying the 1st-page header in Google Document using Google Apps Script. Unfortunately, in the current stage, the 1st-page header cannot be modified by Document service. In this case, it is required to use Google Docs API. Here, I would like to introduce 2 sample scripts for modifying the 1st page header using Docs API.
When you use this, please enable Google Docs API at Advanced Google services.</description>
    </item>
    
    <item>
      <title>Uploading File to Google Drive from External HTML without Authorization</title>
      <link>https://tanaikech.github.io/2020/08/13/uploading-file-to-google-drive-from-external-html-without-authorization/</link>
      <pubDate>Thu, 13 Aug 2020 15:27:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/13/uploading-file-to-google-drive-from-external-html-without-authorization/</guid>
      <description>Gists
This is a sample script for uploading a file to Google Drive from the external HTML without the authorization. In this case, the client side can be used at the outside of Google. And as the server side, the Web Apps created by Google Apps Script is used.
Usage Please do the following flow.
1. Create new project of Google Apps Script. Sample script of Web Apps is a Google Apps Script.</description>
    </item>
    
    <item>
      <title>Decoding QR code on Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/07/decoding-qr-code-on-google-slides-using-google-apps-script/</link>
      <pubDate>Fri, 07 Aug 2020 17:07:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/07/decoding-qr-code-on-google-slides-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for decoding a QR code put in Google Slides using Google Apps Script. In this case, Javascript is used at the opened dialog. And Canvas API and jsQR are used. So unfortunately, this method cannot be used with the time-driven trigger and the Google Apps Script project of the standalone type.
Of course, this method can be also used for Google Document and Google Spreadsheet.</description>
    </item>
    
    <item>
      <title>Cropping Images in Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/06/cropping-images-in-google-slides-using-google-apps-script/</link>
      <pubDate>Thu, 06 Aug 2020 14:18:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/06/cropping-images-in-google-slides-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for cropping images in the Google Slides using Google Apps Script. In the current stage, in order to crop the images in Google Slides, it is required to use replace(blobSource, crop) Because, although there is the &amp;ldquo;cropProperties&amp;rdquo; of &amp;ldquo;UpdateImagePropertiesRequest&amp;rdquo; in Slides API, unfortunately, in the current stage, this cannot be still used. This has already been reported. Ref
About cropping using replace(blobSource, crop), I thought that how to use might be a bit difficult.</description>
    </item>
    
    <item>
      <title>IMPORTANT: reduceRight with and without v8 runtime for Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/03/important-reduceright-with-and-without-v8-runtime-for-google-apps-script/</link>
      <pubDate>Mon, 03 Aug 2020 14:25:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/03/important-reduceright-with-and-without-v8-runtime-for-google-apps-script/</guid>
      <description>Gists
This is an important point for using reduceRignt with and without v8 runtime for Google Apps Script.
Sample script function myFunction() {var array = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;e&amp;#34;];var res = array.reduceRight(function (ar, e, i) {ar.push([e, i]);return ar;}, []);Logger.log(res);}Result With V8 When V8 runtime is used, the following result is obtained.
[[&amp;quot;e&amp;quot;,4],[&amp;quot;d&amp;quot;,3],[&amp;quot;c&amp;quot;,2],[&amp;quot;b&amp;quot;,1],[&amp;quot;a&amp;quot;,0]]Without V8 When V8 runtime is NOT used, the following result is obtained.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - DownloadLargeFilesByUrl</title>
      <link>https://tanaikech.github.io/2020/08/01/updated-gas-library-downloadlargefilesbyurl/</link>
      <pubDate>Sat, 01 Aug 2020 17:24:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/01/updated-gas-library-downloadlargefilesbyurl/</guid>
      <description>v1.0.3 (August 1, 2020)
 When the file size less than the default chunk is downloaded, an error occurred. This bug was removed.    You can see the detail information here https://github.com/tanaikech/DownloadLargeFilesByUrl</description>
    </item>
    
    <item>
      <title>GAS Library - GASProjectApp</title>
      <link>https://tanaikech.github.io/2020/07/31/gas-library-gasprojectapp/</link>
      <pubDate>Fri, 31 Jul 2020 16:22:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/31/gas-library-gasprojectapp/</guid>
      <description>Overview This is a Google Apps Script library for creating, updating and exporting Google Apps Script project of the standalone type using Drive API. In this case, Apps Script API is not used.
Description I had reported &amp;ldquo;Drive API cannot create Google Apps Script project no longer&amp;rdquo; before. Ref About this, I had reported the future request. Ref At July 30, 2020, I could confirm that the Google Apps Script project of the standalone type got to be able to be created by multipart/form-data using Drive API again.</description>
    </item>
    
    <item>
      <title>Drive API got to be able to create Google Apps Script project again</title>
      <link>https://tanaikech.github.io/2020/07/30/drive-api-got-to-be-able-to-create-google-apps-script-project-again/</link>
      <pubDate>Thu, 30 Jul 2020 17:23:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/30/drive-api-got-to-be-able-to-create-google-apps-script-project-again/</guid>
      <description>Gists
I have reported &amp;ldquo;Drive API cannot create Google Apps Script project no longer&amp;rdquo;. Ref About this, I had reported the future request. Ref Today, I could confirm that the Google Apps Script project of the standalone type got to be able to be created by multipart/form-data using Drive API. This is a good news for me. By this, the following 2 patterns can be used from now.
Pattern 1:  Create new standalone GAS project by Apps Script API.</description>
    </item>
    
    <item>
      <title>Workaround: Showing Log in Web Apps to Apps Script Dashboard using Javascript</title>
      <link>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</link>
      <pubDate>Wed, 29 Jul 2020 09:24:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</guid>
      <description>Gists
I have already reported for showing the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps. Ref In order to show the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps, it is required to use the access token. But in the current stage, when the access token is used for XMLHttpRequest and fetch of Javascript in the request headers, the error related to CORS occurs.</description>
    </item>
    
    <item>
      <title>Switching Buttons for Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/27/switching-buttons-for-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 27 Jul 2020 08:55:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/27/switching-buttons-for-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
These are the sample scripts for achieving the switching buttons for Google Spreadsheet using Google Apps Script. The management of images using Spreadsheet service is growing now. But, in the current stage, in order to achieve the switching buttons, it needs a little ingenuity. In this report, I would like to introduce 4 kinds of the switching buttons.
Pattern 1 In this pattern, the drawing is used as the button.</description>
    </item>
    
    <item>
      <title>Logs in Web Apps for Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/26/logs-in-web-apps-for-google-apps-script/</link>
      <pubDate>Sun, 26 Jul 2020 08:26:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/26/logs-in-web-apps-for-google-apps-script/</guid>
      <description>Gists
This is a report for retrieving the logs in Web Apps for Google Apps Script, when it requests to the Web Apps.
Experimental condition 1. Sample script for Web Apps const doGet = (e) =&amp;gt; {Logger.log(`GET method: ${JSON.stringify(e)}`);console.log(`GET method: ${JSON.stringify(e)}`);return ContentService.createTextOutput(JSON.stringify({ method: &amp;#34;GET&amp;#34;, e: e }));};const doPost = (e) =&amp;gt; {Logger.log(`POST method: ${JSON.stringify(e)}`);console.log(`POST method: ${JSON.stringify(e)}`);return ContentService.createTextOutput(JSON.stringify({ method: &amp;#34;POST&amp;#34;, e: e }));}; This Web Apps is deployed as Execute the app as: Me and Who has access to the app: Anyone, even anonymous.</description>
    </item>
    
    <item>
      <title>Converting SVG Format to PNG Format using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/20/converting-svg-format-to-png-format-using-google-apps-script/</link>
      <pubDate>Mon, 20 Jul 2020 15:23:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/20/converting-svg-format-to-png-format-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting the SVG image data to PNG image data using Google Apps Script.
Unfortunately, in the current stage, there are no methods for directly converting the SVG to PNG in Google Drive service. But it can be achieved by Drive API. The sample script is as follows.
Before you use this, please enable Drive API at Advanced Google services.
Sample script function myFunction() {const svgFileId = &amp;#34;###&amp;#34;; // Please set the fileId of the SVG file.</description>
    </item>
    
    <item>
      <title>Statistics of triggers Tag on Stackoverflow</title>
      <link>https://tanaikech.github.io/2020/07/19/statistics-of-triggers-tag-on-stackoverflow/</link>
      <pubDate>Sun, 19 Jul 2020 10:23:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/19/statistics-of-triggers-tag-on-stackoverflow/</guid>
      <description>Gists
This is the statistics for the tag triggers on Stackoverflow. The tag of triggers was created at 2011-07-28. This statistics are retrieve from Stackoverflow using Stackexchange API. About 2020, the data is retrieved from 2020-01-01 to 2020-07-16.
This statistics data was obtained at 2020-07-16.
Measurement result Fig. 1: About triggers tag. Year vs. Total questions, Answered, Solved and Closed questions
Fig. 2: About google-apps-script tag and triggers tag. Year vs.</description>
    </item>
    
    <item>
      <title>Retrieving Users, Sessions and PageViews of User Summary Report from Google Analytics using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/16/retrieving-users-sessions-and-pageviews-of-user-summary-report-from-google-analytics-using-google-apps-script/</link>
      <pubDate>Thu, 16 Jul 2020 11:11:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/16/retrieving-users-sessions-and-pageviews-of-user-summary-report-from-google-analytics-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving &amp;ldquo;Users&amp;rdquo;, &amp;ldquo;Sessions&amp;rdquo; and &amp;ldquo;PageViews&amp;rdquo; of User Summary Report from Google Analytics using Google Apps Script. When you use this, please enable Analytics Reporting API at Advanced Google services.
Sample script function myFunction() {const viewId = &amp;#34;###&amp;#34;;const startDate = &amp;#34;2020-01-01&amp;#34;;const endDate = &amp;#34;2020-06-01&amp;#34;;const resource = {reportRequests: [{viewId: viewId,dateRanges: [{ startDate: startDate, endDate: endDate }],metrics: [{ expression: &amp;#34;ga:users&amp;#34; },{ expression: &amp;#34;ga:sessions&amp;#34; },{ expression: &amp;#34;ga:pageviews&amp;#34; },],},],};const res = AnalyticsReporting.</description>
    </item>
    
    <item>
      <title>Tags Using Together with google-apps-script Tag at Stackoverflow</title>
      <link>https://tanaikech.github.io/2020/07/16/tags-using-together-with-google-apps-script-tag-at-stackoverflow/</link>
      <pubDate>Thu, 16 Jul 2020 10:06:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/16/tags-using-together-with-google-apps-script-tag-at-stackoverflow/</guid>
      <description>Gists
This table shows all tags using together with the tag of &amp;ldquo;google-apps-script&amp;rdquo; at Stackoverflow. The tags are summarized every year. At 2020, the data is retrieved from January 1, 2020 to July 16, 2020. The number enclosed (###) means the number of use of the tag. When this table was a material for discussing about the current tags for &amp;ldquo;google-apps-script&amp;rdquo;, I&#39;m glad.
   Year Used Tag list     2008    2009 google-form(1),google-sheets(1),google-apps-script(1)   2010 google-apps-script(50),google-sheets(31),javascript(23),google-apps(4),custom-function(2),google-calendar-api(2),spreadsheet(2),google-docs-api(2),vba(2),google-docs(2),amazon(1),amazon-web-services(1),api(1),timezone(1),ms-office(1),xml-namespaces(1),xml(1),closures(1),google-sites(1),google-maps-api-3(1),array-formulas(1),google-sheets-formula(1),google-data-api(1),date-manipulation(1),datetime(1)   2011 google-apps-script(72),google-sheets(31),google-apps(16),javascript(15),google-docs(8),google-spreadsheet-api(4),google-form(3),google-api(3),google-docs-api(2),spreadsheet(2),google-fusion-tables(2),google-calendar-api(2),java(2),google-app-engine(2),number-formatting(1),file-upload(1),google-apps-marketplace(1),json(1),email(1),html(1),tabpanel(1),gmail(1),performance(1),user-interface(1),zend-framework(1)   2012 google-apps-script(1877),google-sheets(345),javascript(161),google-docs(63),google-sites(61),google-apps(54),google-spreadsheet-api(44),google-drive-api(44),gmail(40),google-calendar-api(31),google-docs-api(29),html(19),google-visualization(18),triggers(18),email(15),google-form(15),spreadsheet(14),urlfetch(13),gwt(13),oauth(13),custom-function(13),google-app-engine(12),user-interface(11),jquery(11),jdbc(10)   2013 google-apps-script(2606),google-sheets(765),javascript(413),google-drive-api(124),google-docs(120),google-form(97),google-spreadsheet-api(78),google-apps(77),gmail(58),google-sites(57),html(56),google-calendar-api(41),google-api(34),email(31),google-docs-api(26),jquery(24),arrays(23),triggers(22),forms(22),google-app-engine(21),google-visualization(21),user-interface(20),spreadsheet(20),json(19),google-caja(19)   2014 google-apps-script(2758),google-sheets(875),javascript(606),google-form(177),google-drive-api(168),google-docs(143),google-spreadsheet-api(90),google-apps(84),html(81),google-calendar-api(61),google-sites(56),gmail(54),email(53),jquery(49),arrays(45),forms(39),spreadsheet(35),triggers(35),excel(33),json(33),google-docs-api(28),google-api(28),google-app-engine(24),google-visualization(22),google-bigquery(22)   2015 google-apps-script(2781),google-sheets(1134),javascript(714),google-form(159),html(158),google-docs(127),google-apps(115),google-spreadsheet-api(98),google-drive-api(97),gmail(66),arrays(57),google-calendar-api(57),jquery(51),google-api(46),forms(40),spreadsheet(39),email(38),google-docs-api(36),json(35),triggers(33),google-sites(32),regex(32),google-visualization(30),php(23),css(20)   2016 google-apps-script(2888),google-sheets(1198),javascript(783),google-form(156),html(118),google-drive-api(117),google-apps(117),google-docs(77),arrays(74),google-spreadsheet-api(73),json(60),gmail(59),email(46),google-calendar-api(43),google-sheets-api(42),google-api(42),triggers(38),google-visualization(31),jquery(31),spreadsheet(31),google-docs-api(29),date(24),regex(23),forms(22),csv(22)   2017 google-apps-script(3873),google-sheets(1537),javascript(979),google-form(194),html(158),google-sheets-api(137),google-docs(127),google-apps(122),google-drive-api(122),google-spreadsheet-api(114),arrays(110),gmail(85),email(64),json(56),gmail-api(52),google-api(52),triggers(51),jquery(51),spreadsheet(48),google-calendar-api(42),regex(34),google-sites(31),forms(27),custom-function(27),excel(27)   2018 google-apps-script(4716),google-sheets(2062),javascript(1046),google-form(189),google-drive-api(189),google-docs(167),google-sheets-api(165),gmail-addons(155),html(134),triggers(129),gmail(120),arrays(111),google-calendar-api(79),json(68),google-app-maker(63),email(59),google-apps-script-addon(55),gmail-api(54),google-api(50),regex(50),custom-function(48),gsuite(47),google-bigquery(45),google-slides-api(43),web-applications(43)   2019 google-apps-script(6731),google-sheets(3300),javascript(1352),google-form(263),html(250),google-sheets-api(223),google-drive-api(216),google-sheets-formula(168),google-docs(158),gmail(154),web-applications(143),arrays(141),google-sheets-macros(134),triggers(128),google-apps-script-web-application(112),google-calendar-api(88),gmail-addons(85),google-apps-script-addon(85),json(82),google-apps(77),gsuite(76),google-api(69),google-app-maker(64),scripting(61),google-apps-script-editor(61)   2020 google-apps-script(4853),google-sheets(2503),javascript(1221),html(199),google-form(176),google-drive-api(161),google-apps-script-web-application(160),arrays(154),google-sheets-api(149),google-docs(124),google-sheets-formula(120),google-sheets-macros(90),gmail(86),json(85),google-apps-script-simple-triggers(69),google-calendar-api(68),urlfetch(66),google-apps-script-addon(65),spreadsheet(57),triggers(51),gsuite-addons(48),gs-installable-triggers(47),email(47),gsuite(47),google-apps-script-editor(45)    </description>
    </item>
    
    <item>
      <title>Sample Scripts for Requesting to Web Apps by Various Languages</title>
      <link>https://tanaikech.github.io/2020/07/15/sample-scripts-for-requesting-to-web-apps-by-various-languages/</link>
      <pubDate>Wed, 15 Jul 2020 15:52:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/15/sample-scripts-for-requesting-to-web-apps-by-various-languages/</guid>
      <description>Gists
These are the sample scripts by the various languages for requesting to Web Apps created by Google Apps Script.
 curl Google Apps Script Javascript ajax Node.js axios angular go python php powershell  Sample script for Web Apps   Sample script for Web Apps is as follows.
const doGet = (e) =&amp;gt;ContentService.createTextOutput(JSON.stringify({ method: &amp;#34;GET&amp;#34;, eventObject: e })).setMimeType(ContentService.MimeType.JSON);const doPost = (e) =&amp;gt;ContentService.createTextOutput(JSON.stringify({ method: &amp;#34;POST&amp;#34;, eventObject: e })).</description>
    </item>
    
    <item>
      <title>Statistics of gas Tag on Stackoverflow</title>
      <link>https://tanaikech.github.io/2020/07/15/statistics-of-gas-tag-on-stackoverflow/</link>
      <pubDate>Wed, 15 Jul 2020 09:05:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/15/statistics-of-gas-tag-on-stackoverflow/</guid>
      <description>Gists
This is the statistics for the tag gas on Stackoverflow. This statistics are retrieve from Stackoverflow using Stackexchange API. About 2020, the data is retrieved from 2020-01-01 to 2020-07-01.
This statistics data was obtained at 2020-07-15.
Measurement result Fig. 1: Year vs. Total questions, Answered, Solved and Closed questions
Table 1: Tags which were used together with gas tag for each year.
   Year Used Tag list     2008    2009 gas(12),assembly(11),x86(4),gcc(3),nasm(2),linux(2),relative-addressing(1),disassembly(1),avr(1),macos(1),segments(1),inline-assembly(1),tdm-mingw(1),c(1),directive(1),mips(1),compiler-construction(1),gnu(1),stack(1),multithreading(1)   2010 gas(31),assembly(28),x86(9),ld(6),gcc(4),linux(4),arm(4),gnu(3),c(3),inline-assembly(2),linker(2),elf(1),gdb(1),macos(1),ubuntu(1),mips(1),binutils(1),iphone(1),x86-64(1),64-bit(1),macros(1),intel-syntax(1),compiler-construction(1),python(1),embedded(1)   2011 gas(46),assembly(37),x86(16),gcc(11),c(9),linux(6),gnu(4),64-bit(3),arm(3),nasm(3),att(3),inline-assembly(3),binutils(2),x86-64(2),register-allocation(2),system-calls(1),32-bit(1),cortex-a8(1),fibonacci(1),recursion(1),xcode(1),string(1),mips(1),dwarf(1),callstack(1)   2012 gas(59),assembly(46),gcc(15),x86(10),x86-64(6),macos(6),gnu(6),linux(6),att(5),c(5),arm(4),ld(4),system-calls(3),binutils(3),nasm(3),struct(2),elf(2),syntax(2),interrupt(2),fpu(2),inline-assembly(1),clang(1),webrtc(1),compilation(1),iphone(1)   2013 gas(70),assembly(55),x86(18),x86-64(16),gcc(14),linux(14),att(7),nasm(6),c++(5),inline-assembly(4),c(4),syntax(3),intel-syntax(2),printf(2),arm(2),intel(2),segmentation-fault(2),arrays(2),linker(2),i386(2),ffmpeg(1),ios(1),yasm(1),tasm(1),elf(1)   2014 gas(61),assembly(53),x86(17),c(9),gcc(8),x86-64(7),nasm(5),linux(5),gdb(4),arm(4),stack(3),masm(3),disassembly(3),att(3),inline-assembly(3),arrays(2),32-bit(2),cpu-registers(2),shellcode(1),sockets(1),intel-syntax(1),opcode(1),gnu(1),c++(1),scanf(1)   2015 gas(89),assembly(76),x86(25),att(15),c(13),gcc(12),x86-64(12),gnu(6),nasm(4),linux(4),gdb(3),inline-assembly(3),mips(3),macos(2),clang(2),elf(2),disassembly(2),macros(2),yasm(2),xcode(2),calling-convention(2),makefile(2),ld(2),arm64(2),intel-syntax(1)   2016 gas(97),assembly(86),x86(32),x86-64(17),gcc(16),linux(16),att(14),c(5),nasm(5),osdev(4),ld(4),x86-16(4),linker(4),c++(3),gnu(3),gdb(2),forth(2),riscv(2),dwarf(2),intel(2),memory-alignment(2),intel-syntax(2),macos(2),system-calls(2),real-mode(2)   2017 gas(73),assembly(64),x86(26),gcc(22),att(15),c(11),x86-64(11),intel-syntax(4),gnu(4),linux(4),arm(4),bootloader(4),64-bit(4),nasm(3),x86-16(3),ubuntu(2),osdev(2),inline-assembly(2),gdb(2),macos(2),ld(2),string(2),go(1),if-statement(1),objdump(1)   2018 gas(69),assembly(55),x86(24),x86-64(14),gcc(13),att(6),linux(6),arm(4),macos(3),intel-syntax(3),position-independent-code(3),forth(2),ubuntu(2),x86-16(2),gdb(2),scanf(2),inline-assembly(2),gnu(2),blockchain(2),nasm(2),ld(2),osdev(2),bootloader(2),cygwin(1),debugging(1)   2019 gas(74),assembly(58),x86(21),x86-64(15),gcc(10),att(10),c(8),linux(8),gnu(5),gdb(5),ld(4),macros(3),intel-syntax(3),inline-assembly(2),shared-libraries(2),macos(2),dwarf(2),elf(2),arm(2),addressing-mode(2),machine-code(2),bootloader(2),c-preprocessor(1),pdp-11(1),thumb(1)   2020 gas(68),assembly(55),x86(25),gcc(17),x86-64(16),att(13),intel-syntax(7),c(4),bootloader(4),x86-16(4),osdev(3),arm(3),linux(3),c++(3),gnu(3),linker(3),arm64(2),string-literals(2),powerpc(2),riscv(2),calling-convention(2),ld(2),macos(2),clang(1),abi(1)    Summary From Fig.</description>
    </item>
    
    <item>
      <title>GAS Library - OwnershipTransfer</title>
      <link>https://tanaikech.github.io/2020/07/13/gas-library-ownershiptransfer/</link>
      <pubDate>Mon, 13 Jul 2020 13:39:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/13/gas-library-ownershiptransfer/</guid>
      <description>Overview This is a Google Apps Script library for achieving the ownership-transfer of the specific folder including the files and sub-folders using Drive API.
IMPORTANT: PLEASE BE CAREFUL THIS. At first, please read this section I cannot take responsibility for the problems occurred by this library. So when you use this library, please use it by according to your own decision and at your own responsibility. This GAS library transfers the ownership of files and folders.</description>
    </item>
    
    <item>
      <title>Transfer of owner of files got to be able to be achieved with batch requests of Drive API</title>
      <link>https://tanaikech.github.io/2020/07/10/transfer-of-owner-of-files-got-to-be-able-to-be-achieved-with-batch-requests-of-drive-api/</link>
      <pubDate>Fri, 10 Jul 2020 13:51:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/10/transfer-of-owner-of-files-got-to-be-able-to-be-achieved-with-batch-requests-of-drive-api/</guid>
      <description>At July 7, 2020, I have reported the transfer of owner of files got not to be able to be achieved with batch requests of Drive API. Ref But today, I could confirm that this got to be able to be achieved.
But, I&#39;m worry about the possibility that this might not be able to be used in the future again.</description>
    </item>
    
    <item>
      <title>Transfer of owner of files got not to be able to be used with batch requests of Drive API</title>
      <link>https://tanaikech.github.io/2020/07/07/transfer-of-owner-of-files-got-not-to-be-able-to-be-used-with-batch-requests-of-drive-api/</link>
      <pubDate>Tue, 07 Jul 2020 13:31:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/07/transfer-of-owner-of-files-got-not-to-be-able-to-be-used-with-batch-requests-of-drive-api/</guid>
      <description>At 15, June 2020, I have reported the transfer of owner of files got to be able to be achieved with batch requests of Drive API. Ref And also, yesterday (06, July 2020), I could have confirmed that this could be worked. But, now (07, July 2020), the following response is returned.
{&amp;#34;error&amp;#34;: {&amp;#34;errors&amp;#34;: [{&amp;#34;domain&amp;#34;: &amp;#34;global&amp;#34;,&amp;#34;reason&amp;#34;: &amp;#34;invalidSharingRequest&amp;#34;,&amp;#34;message&amp;#34;: &amp;#34;Bad Request. User message: \&amp;#34;You can&amp;#39;t yet change the owner of this item.</description>
    </item>
    
    <item>
      <title>Statistics of appscript Tag on Stackoverflow</title>
      <link>https://tanaikech.github.io/2020/07/06/statistics-of-appscript-tag-on-stackoverflow/</link>
      <pubDate>Mon, 06 Jul 2020 10:58:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/06/statistics-of-appscript-tag-on-stackoverflow/</guid>
      <description>Gists
This is the statistics for the tag appscript on Stackoverflow. This statistics are retrieve from Stackoverflow using Stackexchange API. About 2020, the data is retrieved from 2020-01-01 to 2020-07-01.
Recently, this tag is modified by editing the tags. So I think that it has to be said that this statistics data is obtained at 2020-07-06.
Measurement result Fig. 1: Year vs. Total questions, Answered, Solved and Closed questions
Table 1: Tags which were used together with appscript tag for each year.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RichTextApp</title>
      <link>https://tanaikech.github.io/2020/07/03/updated-gas-library-richtextapp/</link>
      <pubDate>Fri, 03 Jul 2020 14:46:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/03/updated-gas-library-richtextapp/</guid>
      <description>RichTextApp was updated to v1.2.0   v1.2.0 (July 3, 2020)
 Added the method of AutoResizeFontForSpreadsheet. This method can automatically adjust the text length to fit in the cell width by changing the font size.    You can see the detail information here https://github.com/tanaikech/RichTextApp</description>
    </item>
    
    <item>
      <title>Adjusting Text Length to Fit in Cell Width on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/03/adjusting-text-length-to-fit-in-cell-width-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 03 Jul 2020 14:31:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/03/adjusting-text-length-to-fit-in-cell-width-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for adjusting the text length to fit in the cell width on Google Spreadsheet using Google Apps Script. In this case, in order to fit to the cell width, the font size is changed.
Issue and workaround: Unfortunately, in the current stage, there are no methods for automatically resize the font size for fitting in the cell width in the Spreadsheet service. So in this case, it is required to think of the workaround.</description>
    </item>
    
    <item>
      <title>Updated: Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/01/updated-taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Wed, 01 Jul 2020 10:32:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/01/updated-taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>New section CORS in Web Apps was added to Taking advantage of Web Apps with Google Apps Script
In this section, I would like to introduce CORS in Web Apps. As the result, in order to prevent the error related to CORS, it was found the following important points.
  It is required to return ContentService.createTextOutput() and ContentService.createTextOutput(&amp;quot;done&amp;quot;) from doGet and doPost.
  For POST method, the data is required to be converted to the string and sent to Web Apps.</description>
    </item>
    
    <item>
      <title>Report: Processing to Create New File to Specific Folder using Drive API</title>
      <link>https://tanaikech.github.io/2020/06/29/report-processing-to-create-new-file-to-specific-folder-using-drive-api/</link>
      <pubDate>Mon, 29 Jun 2020 13:59:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/29/report-processing-to-create-new-file-to-specific-folder-using-drive-api/</guid>
      <description>Gists
In this report, I would like to report for processing to create new file to the specific folder using Drive API. When the new file is created to the specific folder using Drive API, the property of parents with the value of folder ID is included in the request body of the method &amp;ldquo;Files: create&amp;rdquo;. About this process, I had thought that the file is directly created to the specific folder.</description>
    </item>
    
    <item>
      <title>Search Dialog Sample using TextFinder with Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/26/search-dialog-sample-using-textfinder-with-google-apps-script/</link>
      <pubDate>Fri, 26 Jun 2020 16:06:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/26/search-dialog-sample-using-textfinder-with-google-apps-script/</guid>
      <description>Gists
This is a sample script for the search dialog using TextFinder with Google Apps Script. If this sample script could help to indicate the possibility of TextFinder, I&#39;m glad.
Demo In this demonstration, the value of test is searched. When &amp;quot;NEXT&amp;quot; is clicked, the next searched value is activated. When &amp;quot;PREVIOUS&amp;quot; is clicked, the previous searched value is activated. The search can be done for all sheets in the Google Spreadsheet.</description>
    </item>
    
    <item>
      <title>Workaround: Putting Multiple Hyperlinks to a Cell using Sheets API</title>
      <link>https://tanaikech.github.io/2020/06/26/workaround-putting-multiple-hyperlinks-to-a-cell-using-sheets-api/</link>
      <pubDate>Fri, 26 Jun 2020 08:09:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/26/workaround-putting-multiple-hyperlinks-to-a-cell-using-sheets-api/</guid>
      <description>Gists
This is a current workaround for putting the multiple hyperlinks to a cell using Sheets API.
Description Recently, at Spreadsheet service, the multiple hyperlinks got to be able to be put to a cell. Ref In this case, it can be achieved using RichTextValue. On the other hand, at Sheets API, in the current stage, there are no methods for directly putting the multiple hyperlinks to a cell. And also, such methods have not been added.</description>
    </item>
    
    <item>
      <title>Managing Texts on Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/24/managing-texts-on-google-slides-using-google-apps-script/</link>
      <pubDate>Wed, 24 Jun 2020 11:57:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/24/managing-texts-on-google-slides-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for managing the texts on Google Slides using Google Apps Script. Recently, I got the request like this. I published this here, because I thought that this might be also useful for other users.
Demo In this demonstration, the text of {{baz}} on Google Slides are searched and replaced to other text, and also, the text style is changed.
Sample situation In this case, it supposes that there are 3 types of shapes in the slide.</description>
    </item>
    
    <item>
      <title>Workaround: Correctly Exporting Charts on Google Spreadsheet as Images using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/23/workaround-correctly-exporting-charts-on-google-spreadsheet-as-images-using-google-apps-script/</link>
      <pubDate>Tue, 23 Jun 2020 13:22:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/23/workaround-correctly-exporting-charts-on-google-spreadsheet-as-images-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for correctly exporting the charts on Google Spreadsheet as the images using Google Apps Script. In the current stage, using Google Apps Script, when the charts on Google Spreadsheet are exported as the images, it seems that the exported images are not the same with the original one on Google Spreadsheet. About this, today, I could notice that I had answered for 2 questions. Q1, Q2 And also, I had already been reported this at the issue tracker.</description>
    </item>
    
    <item>
      <title>Retrieving Difference Between 2 Arrays using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/19/retrieving-difference-between-2-arrays-using-google-apps-script/</link>
      <pubDate>Fri, 19 Jun 2020 16:18:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/19/retrieving-difference-between-2-arrays-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the difference between 2 arrays, which are the old values and the new values, using Google Apps Script. In my environment, I sometimes have the situation that it is required to retrieve the difference between 2 arrays. So I prepared this as a sample script. I think that this can be also used at Javascript and Node.js. If this was also useful for your situation, I&#39;m glad.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RichTextApp</title>
      <link>https://tanaikech.github.io/2020/06/17/updated-gas-library-richtextapp/</link>
      <pubDate>Wed, 17 Jun 2020 20:48:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/17/updated-gas-library-richtextapp/</guid>
      <description>RichTextApp was updated to v1.1.3   v1.1.3 (June 17, 2020)
 The variable name for the error processing was not correct. The bug was removed. Added a sample script for using this library.    You can see the detail information here https://github.com/tanaikech/RichTextApp</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RichTextApp</title>
      <link>https://tanaikech.github.io/2020/06/16/updated-gas-library-richtextapp/</link>
      <pubDate>Tue, 16 Jun 2020 15:11:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/16/updated-gas-library-richtextapp/</guid>
      <description>RichTextApp was updated to v1.1.2   v1.1.0 (June 16, 2020)
 Add new method of RichTextToHTMLForSpreadsheet. The method of RichTextToHTMLForSpreadsheet can convert the rich texts in the cells to the HTML format.    v1.1.1 (June 16, 2020)
 About the method of RichTextToHTMLForSpreadsheet, I forgot to convert hyperlinks to HTML. This was modified.    v1.1.2 (June 16, 2020)
 When one row and several columns are used as the range, only 1st column is returned.</description>
    </item>
    
    <item>
      <title>Transfer of owner of files got to be able to be achieved with batch requests of Drive API</title>
      <link>https://tanaikech.github.io/2020/06/15/transfer-of-owner-of-files-got-to-be-able-to-be-achieved-with-batch-requests-of-drive-api/</link>
      <pubDate>Mon, 15 Jun 2020 14:37:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/15/transfer-of-owner-of-files-got-to-be-able-to-be-achieved-with-batch-requests-of-drive-api/</guid>
      <description>Today, I could confirm that the transfer of owner of files got to be able to be achieved with batch requests of Drive API. When I had tested this at January 31, 2020, an error of there is no function to change the owner of this item yet (currently under development) had occurred.
But today, I could confirm that this got to be able to be achieved by the batch requests.</description>
    </item>
    
    <item>
      <title>Batch Requests for Drive API using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/15/batch-requests-for-drive-api-using-google-apps-script/</link>
      <pubDate>Mon, 15 Jun 2020 11:33:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/15/batch-requests-for-drive-api-using-google-apps-script/</guid>
      <description>Overview These are the sample scripts of the batch requests for Drive API using Google Apps Script.
Description When we want to manage the files and folders on Google Drive, we have 2 ways. One is the use of Drive service. Another is the use of Drive API. In the case of them, when we want to manage a lot of files and folders, unfortunately, both ways have no batch requests.</description>
    </item>
    
    <item>
      <title>Managing A Lot Of Google Calendar Events using Batch Requests with Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/12/managing-a-lot-of-google-calendar-events-using-batch-requests-with-google-apps-script/</link>
      <pubDate>Fri, 12 Jun 2020 16:14:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/12/managing-a-lot-of-google-calendar-events-using-batch-requests-with-google-apps-script/</guid>
      <description>Overview This is the sample scripts for managing a lot of Google Calendar Events using the batch requests with Google Apps Script.
Description When we want to manage the events of Google Calendar, we have 2 ways. One is the use of Calendar service. Another is the use of Calendar API. In the case of them, when we want to manage a lot of calendar events, unfortunately, both ways have no batch requests.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2020/06/12/updated-gas-library-batchrequest/</link>
      <pubDate>Fri, 12 Jun 2020 14:43:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/12/updated-gas-library-batchrequest/</guid>
      <description>BatchRequest was updated to v1.1.2.   v1.1.1 (June 12, 2020)
 Error handling for the input object was added.    v1.1.2 (June 12, 2020)
 Removed a bug that when the returned value is empty, an error occurred.    You can check this at https://github.com/tanaikech/BatchRequest.</description>
    </item>
    
    <item>
      <title>Highlighting Row and Column of Selected Cell using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/11/highlighting-row-and-column-of-selected-cell-using-google-apps-script/</link>
      <pubDate>Thu, 11 Jun 2020 20:55:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/11/highlighting-row-and-column-of-selected-cell-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for highlighting the row and column of the selected cell using Google Apps Script. For this, the OnSelectionChange event trigger is used.
Demo Sample script Please copy and paste the following script to the script editor of Spreadsheet. And, please select a cell. By this, the script is run by the OnSelectionChange event trigger.
function onSelectionChange(e) {const range = e.range;const sheet = range.</description>
    </item>
    
    <item>
      <title>Disabling Buttons Put on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/11/disabling-buttons-put-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Thu, 11 Jun 2020 10:58:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/11/disabling-buttons-put-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Description This is a sample script for disabling the buttons put on Google Spreadsheet using Google Apps Script.
When a script is run by clicking a button on Google Spreadsheet, there is the case that you don&#39;t want to make users run the script in duplicate. This sample script achieves this situation.
Demo In this demonstration, 2 types of buttons are used. Those are the drawing and image, respectively. When the button is clicked, the worker of 10 seconds is run.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2020/06/10/updated-gas-library-batchrequest/</link>
      <pubDate>Wed, 10 Jun 2020 14:56:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/10/updated-gas-library-batchrequest/</guid>
      <description>BatchRequest was updated to v1.1.0.   v1.1.0 (June 10, 2020)
 New method of EDo() was added. This method is the enhanced Do() method. When this method is used, the result values from the batch requests are parsed. And also, the number of requests more than 100 can be used. In this case, the split of the number of requests is processed for the limitation of 100.    You can check this at https://github.</description>
    </item>
    
    <item>
      <title>Enhanced Custom Function for Google Spreadsheet using Web Apps as Wrapper</title>
      <link>https://tanaikech.github.io/2020/06/08/enhanced-custom-function-for-google-spreadsheet-using-web-apps-as-wrapper/</link>
      <pubDate>Mon, 08 Jun 2020 14:48:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/08/enhanced-custom-function-for-google-spreadsheet-using-web-apps-as-wrapper/</guid>
      <description>Overview This is a proposal of the enhanced custom function for Google Spreadsheet using Web Apps as the wrapper.
Demo Description When the custom function is used, in the current specification, the most methods except several methods (for example, one of them is UrlFetchApp.) that the authorization is required cannot be used. So for example, when the filenames in the folder are retrieved from the folder name, unfortunately, this cannot be directly achieved.</description>
    </item>
    
    <item>
      <title>Managing Shared Drive using Drive Service of Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/02/managing-shared-drive-using-drive-service-of-google-apps-script/</link>
      <pubDate>Tue, 02 Jun 2020 20:42:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/02/managing-shared-drive-using-drive-service-of-google-apps-script/</guid>
      <description>Gists
When the method of &amp;ldquo;Files: list&amp;rdquo; in Drive API v3, the official document of includeItemsFromAllDrives and supportsAllDrives says as follows.
 Deprecated - Whether both My Drive and shared drive items should be included in results. This parameter will only be effective until June 1, 2020. Afterwards shared drive items are included in the results. (Default: false)
  Deprecated - Whether the requesting application supports both My Drives and shared drives.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2020/05/31/updated-gas-library-runall/</link>
      <pubDate>Sun, 31 May 2020 16:13:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/31/updated-gas-library-runall/</guid>
      <description>RunAll was updated to v1.1.2.   v1.1.2 (May 31, 2020)
 When the access token and project ID are not included in the object, getOAuthToken() and getScriptId(). By this, an error is removed.    You can see the detail information here https://github.com/tanaikech/RunAll</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FilesApp</title>
      <link>https://tanaikech.github.io/2020/05/29/updated-gas-library-filesapp/</link>
      <pubDate>Fri, 29 May 2020 17:11:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/29/updated-gas-library-filesapp/</guid>
      <description>FilesApp was updated to v1.1.2.
  v1.1.2 (May 29, 2020)
 A bug that all files were not retrieved from the shared drive was removed.    GitHub of FilesApp</description>
    </item>
    
    <item>
      <title>Creating Shortcut on Google Drive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/28/creating-shortcut-on-google-drive-using-google-apps-script/</link>
      <pubDate>Thu, 28 May 2020 14:49:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/28/creating-shortcut-on-google-drive-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating a shortcut on Google Drive using Google Apps Script.
Sample script Before you run the script, please enable Drive API at Advanced Google services.
function createShortcut(targetId, name, folderId) {const resource = {shortcutDetails: { targetId: targetId },title: name,mimeType: &amp;#34;application/vnd.google-apps.shortcut&amp;#34;,};if (folderId) resource.parents = [{ id: folderId }];const shortcut = Drive.Files.insert(resource);return shortcut.id;}// Please run this function.</description>
    </item>
    
    <item>
      <title>Detecting Quickly Checked Checkboxes on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/27/detecting-quickly-checked-checkboxes-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 27 May 2020 13:44:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/27/detecting-quickly-checked-checkboxes-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Abstract This is a report for detecting quickly checked checkboxes on Google Spreadsheet using Google Apps Script. It supposes that when the checkbox is checked, a function of Google Apps Script is run by the event trigger. In this case, when the multiple checkboxes on Google Spreadsheet are checked quickly, the script cannot be run for all checked checkboxes, because of the response speed of the event trigger. It is considered that to understand the response of event trigger is useful for creating the application for Spreadsheet.</description>
    </item>
    
    <item>
      <title>GAS Library - CopyFolder</title>
      <link>https://tanaikech.github.io/2020/05/26/gas-library-copyfolder/</link>
      <pubDate>Tue, 26 May 2020 07:53:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/26/gas-library-copyfolder/</guid>
      <description>Overview This is Google Apps Script library for copying folder on Google Drive.
Description I have sometimes the situation that it is required to back up the folder on Google Drive to Google Drive. But unfortunately, the method of makeCopy() of Class File and the method of Files: copy of Drive API cannot be used for directly copying the folder on Google Drive. So I created this as a library. This library can copy the folder on Google Drive.</description>
    </item>
    
    <item>
      <title>Characteristics of Response for onSelectionChange</title>
      <link>https://tanaikech.github.io/2020/05/19/characteristics-of-response-for-onselectionchange/</link>
      <pubDate>Tue, 19 May 2020 14:19:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/19/characteristics-of-response-for-onselectionchange/</guid>
      <description>Gists
Abstract I have already reported about &amp;ldquo;Change Tab Detection on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script&amp;rdquo;. Ref It is considered that when the situation which uses the event trigger of onSelectionChange is thought, the response speed is important. So, here, I investigated the characteristics of response for the event trigger of onSelectionChange.
Demo Experiment Sample script In order to investigate the response speed, I used the following sample script.</description>
    </item>
    
    <item>
      <title>Change Tab Detection on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/18/change-tab-detection-on-google-spreadsheet-using-onselectionchange-event-trigger-with-google-apps-script/</link>
      <pubDate>Mon, 18 May 2020 15:50:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/18/change-tab-detection-on-google-spreadsheet-using-onselectionchange-event-trigger-with-google-apps-script/</guid>
      <description>Gists
onSelectionChange has been released at April 22, 2020. But this couldn&#39;t be used at the released day. But now, I could confirm that this got to be able to be used. So in order to test this event trigger, I prepared a simple sample script. This is a sample script for detecting the change tab on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script.
Demo Usage  Please copy and paste the following script to the container-bound script of Google Spreadsheet, and save the script.</description>
    </item>
    
    <item>
      <title>Updated Specification of Google Spreadsheet: Multiple Hyperlinks to a Cell</title>
      <link>https://tanaikech.github.io/2020/05/15/updated-specification-of-google-spreadsheet-multiple-hyperlinks-to-a-cell/</link>
      <pubDate>Fri, 15 May 2020 13:24:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/15/updated-specification-of-google-spreadsheet-multiple-hyperlinks-to-a-cell/</guid>
      <description>Gists
Recently, it seems that the specification of Google Spreadsheet was updated. Before this, when a cell has only one hyperlink. In this case, the hyperlink was given to a cell using =HYPERLINK(&amp;quot;http://www.google.com/&amp;quot;, &amp;quot;Google&amp;quot;) as following figure.
But by the recent update, a cell got to be able to have multiple hyperlinks as following figure. In this case, the hyperlinks are set by the RichTextValue object.
In this report, I would like to introduce the method for setting and retrieving the multiple URLs for a cell.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FilesApp</title>
      <link>https://tanaikech.github.io/2020/05/14/updated-gas-library-filesapp/</link>
      <pubDate>Thu, 14 May 2020 09:44:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/14/updated-gas-library-filesapp/</guid>
      <description>FilesApp was updated to v1.1.0.
 Shared drive got to be able to be used. From the version 1.1.0, the following modification was added.  V8 is used. As the default setting, the file list is retrieved from both your Google Drive and the shared drive.  By this, for example, when the folder ID in the shared Drive is used to ### of const res = FilesApp.createTree(&amp;quot;###&amp;quot;), the folder tree of the shared Drive is retrieved, if you have the shared Drive.</description>
    </item>
    
    <item>
      <title>Hiding and Deleting Rows and Columns on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/11/hiding-and-deleting-rows-and-columns-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 11 May 2020 16:18:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/11/hiding-and-deleting-rows-and-columns-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
These are the sample scripts for hiding and deleting rows and columns on Google Spreadsheet using Google Apps Script. I sometimes see the questions for hiding and deleting rows and columns on Spreadsheet at Stackoverflow. So here, I would like to introduce the sample scripts for this.
In this case, when the process costs of the scripts created by using Spreadsheet service and Sheets API are compared, the cost of script created by Sheets API is much lower than that of script created by Spreadsheet service.</description>
    </item>
    
    <item>
      <title>When &#39;//&#39; in template literal is used in a HTML file in script editor, it is used as a comment start</title>
      <link>https://tanaikech.github.io/2020/05/10/when-/-in-template-literal-is-used-in-a-html-file-in-script-editor-it-is-used-as-a-comment-start/</link>
      <pubDate>Sun, 10 May 2020 09:40:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/10/when-/-in-template-literal-is-used-in-a-html-file-in-script-editor-it-is-used-as-a-comment-start/</guid>
      <description>Gists
Overview When // in template literal is used in a HTML file in script editor, it is used as a comment start.
const sample = `//`;For example, when above script is used in a HTML file at the script editor, ;&amp;quot; of const sample =`//`; is used as the comment.
Description I would like to explain about this bug using the following sample flow.
Flow   Create new Spreadsheet and open the script editor.</description>
    </item>
    
    <item>
      <title>Workaround for Retrieving Direct Links of All Sheets from URL of 2PACX- of Web Published Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2020/04/27/workaround-for-retrieving-direct-links-of-all-sheets-from-url-of-2pacx-of-web-published-google-spreadsheet/</link>
      <pubDate>Mon, 27 Apr 2020 08:51:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/27/workaround-for-retrieving-direct-links-of-all-sheets-from-url-of-2pacx-of-web-published-google-spreadsheet/</guid>
      <description>Gists
This is a sample script for retrieving the direct links of all sheets from the URL like https://docs.google.com/spreadsheets/d/e/2PACX-###/pubhtml of the web published Google Spreadsheet. This sample script can be used for the following situation.
 The Spreadsheet is published to Web and the URL like https://docs.google.com/spreadsheets/d/e/2PACX-###/pubhtml is known You are not the owner of Google Spreadsheet. You don&#39;t know the Spreadsheet ID and Sheet IDs.  Under above situation, unfortunately, the direct links of each sheet cannot be directly retrieved.</description>
    </item>
    
    <item>
      <title>Limitation of Array.prototype.push.apply under V8 for Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/04/20/limitation-of-array.prototype.push.apply-under-v8-for-google-apps-script/</link>
      <pubDate>Mon, 20 Apr 2020 14:11:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/20/limitation-of-array.prototype.push.apply-under-v8-for-google-apps-script/</guid>
      <description>Gists
Description When V8 is enabled, Array.apply has the limitation for the number of elements. When it is over the limitation, an error like RangeError: Maximum call stack size exceeded occurs, while the issue didn&#39;t occur when V8 is disabled. In this case, this issue occurs at both Google Apps Script and Javascript. So please be careful this.
Sample situation For example, when Array.prototype.push.apply is used for combining the arrays because the process cost of Array.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FetchApp</title>
      <link>https://tanaikech.github.io/2020/04/13/updated-gas-library-fetchapp/</link>
      <pubDate>Mon, 13 Apr 2020 21:27:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/13/updated-gas-library-fetchapp/</guid>
      <description>FetchApp was updated to v1.0.1.   v1.0.1 (April 13, 2020)
 When V8 runtime is enabled, it was found that an error occurred. So this bug was removed.    You can check this at https://github.com/tanaikech/FetchApp.</description>
    </item>
    
    <item>
      <title>Updated: Expanding A1Notations using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/04/04/updated-expanding-a1notations-using-google-apps-script/</link>
      <pubDate>Sat, 04 Apr 2020 15:07:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/04/updated-expanding-a1notations-using-google-apps-script/</guid>
      <description>Gists
This sample script is for expanding a1Notations using Google Apps Script. This was updated from this sample script.
Sample script function expandA1Notations_(a1Notations, maxRow, maxColumn) {maxRow = maxRow || &amp;#34;1000&amp;#34;;maxColumn = maxColumn || &amp;#34;Z&amp;#34;;// Ref: https://stackoverflow.com/a/21231012/7108653 const columnToLetter = column =&amp;gt; {let temp,letter = &amp;#34;&amp;#34;;while (column &amp;gt; 0) {temp = (column - 1) % 26;letter = String.fromCharCode(temp + 65) + letter;column = (column - temp - 1) / 26;}return letter;};const letterToColumn = letter =&amp;gt; {let column = 0,length = letter.</description>
    </item>
    
    <item>
      <title>Drawing objects on Spreadsheet got to be able to be managed</title>
      <link>https://tanaikech.github.io/2020/04/03/drawing-objects-on-spreadsheet-got-to-be-able-to-be-managed/</link>
      <pubDate>Fri, 03 Apr 2020 14:22:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/03/drawing-objects-on-spreadsheet-got-to-be-able-to-be-managed/</guid>
      <description>The drawing objects on Google Spreadsheet got to be able to be managed by the update at April 2, 2020. Ref
By this update, we can assign the function to the drawing objects and remove the drawing objects. The following sample is for removing the drawing objects on the active sheet. Ref
SpreadsheetApp.getActiveSheet().getDrawings().forEach(e =&amp;gt; e.remove());</description>
    </item>
    
    <item>
      <title>Retrieving Overwrapped Cells Between 2 Ranges on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/04/03/retrieving-overwrapped-cells-between-2-ranges-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 03 Apr 2020 14:11:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/03/retrieving-overwrapped-cells-between-2-ranges-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the overwrapped cells between 2 ranges on Google Spreadsheet using Google Apps Script. Please use this with enabling V8.
const getOverwrappedRanges_ = (rangeList1, rangeList2) =&amp;gt; {if (rangeList1.toString() != &amp;#34;RangeList&amp;#34; ||rangeList2.toString() != &amp;#34;RangeList&amp;#34;) {throw new Error(&amp;#34;Input RangeList object.&amp;#34;);}// Ref: https://stackoverflow.com/a/21231012/7108653 const columnToLetter = column =&amp;gt; {let temp,letter = &amp;#34;&amp;#34;;while (column &amp;gt; 0) {temp = (column - 1) % 26;letter = String.</description>
    </item>
    
    <item>
      <title>Benchmark: Process Costs under V8 using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/03/22/benchmark-process-costs-under-v8-using-google-apps-script/</link>
      <pubDate>Sun, 22 Mar 2020 13:46:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/22/benchmark-process-costs-under-v8-using-google-apps-script/</guid>
      <description>Gists
 March 22, 2020  Published.    Kanshi Tanaike
Introduction V8 engine got to be able to be used at Google Apps Script. By this, I have reported about the process costs with and without using V8. Ref It is considered that knowing the process costs for various methods will be useful for creating the applications with Google Apps Script. Here, I would like to introduce the process costs of each situations under V8.</description>
    </item>
    
    <item>
      <title>Retrieving Files and Folders without Parents in Google Drive</title>
      <link>https://tanaikech.github.io/2020/03/13/retrieving-files-and-folders-without-parents-in-google-drive/</link>
      <pubDate>Fri, 13 Mar 2020 17:00:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/13/retrieving-files-and-folders-without-parents-in-google-drive/</guid>
      <description>Gists
This is a sample script for retrieving the files and folders which have no parents in own Google Drive.
When you use this script, please enable Drive API at Advanced Google services.
Sample script const myFunction = () =&amp;gt; {const token = ScriptApp.getOAuthToken();const fields = decodeURIComponent(&amp;#34;nextPageToken,files(name,id,mimeType,parents)&amp;#34;);const q = decodeURIComponent(&amp;#34;&amp;#39;me&amp;#39; in owners and trashed = false&amp;#34;);let files = [];let pageToken = &amp;#34;&amp;#34;;do {const res = UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Completed: Web Application for searching Google Apps Script Library from Database</title>
      <link>https://tanaikech.github.io/2020/03/12/completed-web-application-for-searching-google-apps-script-library-from-database/</link>
      <pubDate>Thu, 12 Mar 2020 11:58:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/12/completed-web-application-for-searching-google-apps-script-library-from-database/</guid>
      <description>Web Application for searching Google Apps Script Library from Database was completed. So I published it as v1.0.0. Please check Google Apps Script Library Database.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v174</title>
      <link>https://tanaikech.github.io/2020/03/11/updated-ggsrun-to-v174/</link>
      <pubDate>Wed, 11 Mar 2020 15:48:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/11/updated-ggsrun-to-v174/</guid>
      <description>v1.7.4 (March 11, 2020)
  Recently, I noticed that new Google Apps Script project of the standalone script type cannot be created by the create method of Drive API. From now, in order to create the standalone Google Apps Script project, only Google Apps Script API is required to be used. Ref By this, I updated ggsrun. So the command for creating new GAS project is not changed.</description>
    </item>
    
    <item>
      <title>Drive API cannot create Google Apps Script project no longer</title>
      <link>https://tanaikech.github.io/2020/03/09/drive-api-cannot-create-google-apps-script-project-no-longer/</link>
      <pubDate>Mon, 09 Mar 2020 15:09:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/09/drive-api-cannot-create-google-apps-script-project-no-longer/</guid>
      <description>Gists
Today, I noticed that new Google Apps Script project of the standalone script type cannot be created by the method of Files: create in Drive API. From now, in order to manage the Google Apps Script project, only Google Apps Script API is required to be used. By this, the following issues are brought.
 When the new standalone GAS project is created in the specific folder by uploading the local script, the following flow is required to be run.</description>
    </item>
    
    <item>
      <title>GAS Library - GPhotoApp</title>
      <link>https://tanaikech.github.io/2020/02/26/gas-library-gphotoapp/</link>
      <pubDate>Wed, 26 Feb 2020 09:27:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/26/gas-library-gphotoapp/</guid>
      <description>Overview This is a GAS library for retrieving and creating the albums and media items using Google Photo API using Google Apps Script (GAS).
Description In the current stage, Google Photo API is not included in Advanced Google services. But in order to use Google Photo API with Google Apps Script, I created this as a GAS library. So in the current stage, in order to use this library, the following flow is required.</description>
    </item>
    
    <item>
      <title>GAS Library - RichTextApp</title>
      <link>https://tanaikech.github.io/2020/02/19/gas-library-richtextapp/</link>
      <pubDate>Wed, 19 Feb 2020 14:28:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/19/gas-library-richtextapp/</guid>
      <description>Overview This is a GAS library for copying the rich text with the text styles from Google Document to Google Spreadsheet or from Google Spreadsheet to Google Document using Google Apps Script (GAS).
Description Google Spreadsheet can use the rich text as the cell value. But I thought that it is difficult for me to directly edit the rich text in a cell. So I wanted to copy the rich text, that I edited at the Google Document, to the cell of Google Spreadsheet.</description>
    </item>
    
    <item>
      <title>Uploading File to Google Drive using HTML and Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/02/18/uploading-file-to-google-drive-using-html-and-google-apps-script/</link>
      <pubDate>Tue, 18 Feb 2020 08:36:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/18/uploading-file-to-google-drive-using-html-and-google-apps-script/</guid>
      <description>Gists
This is a simple sample script for uploading a file using the file input tag of HTML. As the important point, the file is sent as the byte array for using Google Apps Script. By this, at Google Apps Script side, the byte array can be converted to a blob using a simple script.
HTML &amp;amp; Javascript &amp;lt;input id=&amp;#34;file&amp;#34; type=&amp;#34;file&amp;#34; onchange=&amp;#34;saveFile(this)&amp;#34; /&amp;gt;&amp;lt;script&amp;gt;function saveFile(f) {const file = f.</description>
    </item>
    
    <item>
      <title>Google Apps Script Library Database and Search Application</title>
      <link>https://tanaikech.github.io/2020/02/17/google-apps-script-library-database-and-search-application/</link>
      <pubDate>Mon, 17 Feb 2020 10:22:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/17/google-apps-script-library-database-and-search-application/</guid>
      <description>Overview This is for the Google Apps Script Library Database.
Description Since Google Apps Script was released on August 19th, 2009, it is used by a lot of users. Ref1, Ref2 By this, now there are a lot of useful libraries of Google Apps Script (GAS) in all over the world. But when I want to search a GAS library, I always use Google search engine. Unfortunately, in the current stage, the libraries cannot be directly searched by a database.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2020/02/12/updated-gas-library-manifestsapp/</link>
      <pubDate>Wed, 12 Feb 2020 14:13:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/12/updated-gas-library-manifestsapp/</guid>
      <description>ManifestsApp was updated to v1.0.4.
  v1.0.4 (February 12, 2020)
  &amp;ldquo;runtimeVersion&amp;rdquo; got to be able to be got and set. Now, &amp;lsquo;STABLE&amp;rsquo;, &amp;lsquo;V8&amp;rsquo;, &amp;lsquo;DEPRECATED_ES5&amp;rsquo; can be used as the value of &amp;ldquo;runtimeVersion&amp;rdquo;. For example, you can enable V8 with the following script.
var r = ManifestsApp.setProjectId(projectId).setRuntimeVersion(&amp;#34;V8&amp;#34;);Logger.log(r);  As one important point, when &amp;ldquo;STABLE&amp;rdquo; and &amp;ldquo;DEPRECATED_ES5&amp;rdquo; are used for the Google Apps Script project created before 2020 as the value of &amp;ldquo;runtimeVersion&amp;rdquo;, the error of Syntax error: Illegal character.</description>
    </item>
    
    <item>
      <title>Rearranging Columns on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/02/10/rearranging-columns-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 10 Feb 2020 15:14:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/10/rearranging-columns-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for rearranging the columns on Google Spreadsheet using Google Apps Script.
Sample script In this sample script, the columns are rearranged with an array including the rearranged column indexes.
function rearrangeColumns(sheet, ar) {var obj = ar.reduce(function(ar, e, i) {return ar.concat({ from: e + 1, to: i + 1 });}, []);obj.sort(function(a, b) {return a.to &amp;lt; b.to ? -1 : 1;});obj.</description>
    </item>
    
    <item>
      <title>Benchmark: Loop for Array Processing using Google Apps Script with V8</title>
      <link>https://tanaikech.github.io/2020/02/09/benchmark-loop-for-array-processing-using-google-apps-script-with-v8/</link>
      <pubDate>Sun, 09 Feb 2020 17:01:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/09/benchmark-loop-for-array-processing-using-google-apps-script-with-v8/</guid>
      <description>Gists
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>V8 Runtime was added to Google Apps Script at February 7, 2020</title>
      <link>https://tanaikech.github.io/2020/02/07/v8-runtime-was-added-to-google-apps-script-at-february-7-2020/</link>
      <pubDate>Fri, 07 Feb 2020 11:09:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/07/v8-runtime-was-added-to-google-apps-script-at-february-7-2020/</guid>
      <description>Gists
In my environment, at February 7, 2020, when I opened the script editor of Google Apps Script, the following notification could be seen.
By this, I could notice that finally, the V8 Runtime has already been added to Google Apps Script. I think that this will be also the great news for a lot of users including me.
The detail of V8 Runtime can be seen at https://developers.google.com/apps-script/guides/v8-runtime.</description>
    </item>
    
    <item>
      <title>GAS Library - DateFinder</title>
      <link>https://tanaikech.github.io/2020/01/30/gas-library-datefinder/</link>
      <pubDate>Thu, 30 Jan 2020 13:37:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/30/gas-library-datefinder/</guid>
      <description>Overview DateFinder is a GAS library for searching the date objects from the cell range on the sheet in the Spreadsheet and retrieving the searched range as the RangeList object using Google Apps Script (GAS).
Description There is the Class TextFinder for searching the text from cells of the Spreadsheet using the Google Apps Script. But in this case, the date object in the cell is used as the string. Namely, the values for searching are used as the same with the values retrieved by getDisplayValues().</description>
    </item>
    
    <item>
      <title>GAS Library - EncodeApp</title>
      <link>https://tanaikech.github.io/2020/01/24/gas-library-encodeapp/</link>
      <pubDate>Fri, 24 Jan 2020 16:39:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/24/gas-library-encodeapp/</guid>
      <description>Overview EncodeApp is a GAS library for retrieving the encoding set (charset) and doing URL encode with the specific encoding set using Google Apps Script (GAS).
You can see the detail information here https://github.com/tanaikech/EncodeApp</description>
    </item>
    
    <item>
      <title>URL Encode with Shift-JIS using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/01/23/url-encode-with-shift-jis-using-google-apps-script/</link>
      <pubDate>Thu, 23 Jan 2020 15:35:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/23/url-encode-with-shift-jis-using-google-apps-script/</guid>
      <description>Gists This is a sample script for achieving the URL encode with Shift-JIS using Google Apps Script. Unfortunately, there are no methods for directly achieving above in the methods of Google Apps Script. So it is required to prepare it as the script. In order to use Shift-JIS of the character set at Google Apps Script, it is required to use it as the binary data. Because, when the value</description>
    </item>
    
    <item>
      <title>Deleting Last Empty Page of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/01/17/deleting-last-empty-page-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 17 Jan 2020 15:55:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/17/deleting-last-empty-page-of-google-document-using-google-apps-script/</guid>
      <description>Gists
Overview This is a sample script for deleting the last empty page which has only one paragraph including no values which is &amp;quot;&amp;quot; in the Google Document using Google Apps Script.
Description As a sample situation, it supposes that there is the following Google Document.
In this sample, the last page of Google Document has only one paragraph including no values which is &amp;quot;&amp;quot;. When I try to delete only last page without modifying the previous page, I noticed that this cannot be achieved with only Google Document service.</description>
    </item>
    
    <item>
      <title>Trend of google-apps-script Tag on Stackoverflow 2020</title>
      <link>https://tanaikech.github.io/2020/01/10/trend-of-google-apps-script-tag-on-stackoverflow-2020/</link>
      <pubDate>Fri, 10 Jan 2020 10:14:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/10/trend-of-google-apps-script-tag-on-stackoverflow-2020/</guid>
      <description>Gists
Published: January 10, 2020
Kanshi Tanaike
Introduction At Stackoverflow, a lot of people post the questions and answers to the questions every day. There are various tags in Stackoverflow. A lot of discussions are performed at each tag. Their discussions bring the important information and are much useful for a lot of people. As one of tags, there is &amp;ldquo;google-apps-script&amp;rdquo;. I sometimes discuss at the questions with that tag. When we see the discussions, we can notice that the discussions are changed and progressed by the time, because &amp;ldquo;Google Apps Script&amp;rdquo; which is the origin of the tag is updated.</description>
    </item>
    
    <item>
      <title>Retrieving Event ID from Event URL of Google Calendar using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/01/09/retrieving-event-id-from-event-url-of-google-calendar-using-google-apps-script/</link>
      <pubDate>Thu, 09 Jan 2020 14:13:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/09/retrieving-event-id-from-event-url-of-google-calendar-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the event ID from the event URL of Google Calendar using Google Apps Script.
The event URL is like https://www.google.com/calendar/event?###. At the event URL, ### of https://www.google.com/calendar/event?### is not the event ID. So it is required to convert it.
Sample script var eventUrl = &amp;#34;https://www.google.com/calendar/event?###&amp;#34;;var eventId = Utilities.newBlob(Utilities.base64Decode(eventUrl.split(&amp;#34;=&amp;#34;)[1])).getDataAsString().split(&amp;#34; &amp;#34;)[0];Logger.log(eventId);</description>
    </item>
    
    <item>
      <title>Running Google Apps Script by Event Notification from Google Calendar</title>
      <link>https://tanaikech.github.io/2020/01/09/running-google-apps-script-by-event-notification-from-google-calendar/</link>
      <pubDate>Thu, 09 Jan 2020 11:19:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/09/running-google-apps-script-by-event-notification-from-google-calendar/</guid>
      <description>Gists
Overview This is a simple method running Google Apps Script by the event notification from Google Calendar.
Description There are several event triggers in Google Apps Script. Ref1, Ref2 There is an event trigger for Google Calendar. The official document says An installable calendar event trigger runs when a user&#39;s calendar events are updated—created, edited, or deleted.. Ref3 If I want to use the trigger when the event in the calendar is starts and finished, it is required to use Calendar API by preparing the URL for receiving from Google.</description>
    </item>
    
    <item>
      <title>Dynamically Updating Custom Menu of Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/12/20/dynamically-updating-custom-menu-of-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 20 Dec 2019 07:48:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/12/20/dynamically-updating-custom-menu-of-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for dynamically updating the custom menu of Google Spreadsheet using Google Apps Script.
Demo In this demonstration, when the Spreadsheet is opened, 5 functions added to the custom menu. You can see that when a column is added and deleted, the custom menu is updated.
Issue and workaround for this goal Unfortunately, in the current stage, when a function is added to the custom menu with addItem method, the argument cannot been able to be used.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GmailToList</title>
      <link>https://tanaikech.github.io/2019/12/17/updated-gas-library-gmailtolist/</link>
      <pubDate>Tue, 17 Dec 2019 11:40:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/12/17/updated-gas-library-gmailtolist/</guid>
      <description>GmailToList was updated to v1.0.1.   v1.0.1 (December 17, 2019)
 New method of getAttachmentFiles() was added. The attachment files can be retrieved as blob using this method.    You can see the detail information here https://github.com/tanaikech/GmailToList</description>
    </item>
    
    <item>
      <title>GAS Library - GmailToList</title>
      <link>https://tanaikech.github.io/2019/12/16/gas-library-gmailtolist/</link>
      <pubDate>Mon, 16 Dec 2019 16:00:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/12/16/gas-library-gmailtolist/</guid>
      <description>Overview This is a library for exporting all messages of Gmail as a list using Google Apps Script (GAS).
Description Recently, I have had a situation it had been required to backup all messages in own Gmail. In order to achieve this, I created a simple script. After I created it, I thought that when such situation might occur for other users and the script is published as a library, they might be useful.</description>
    </item>
    
    <item>
      <title>Moving File to Specific Folder using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/11/20/moving-file-to-specific-folder-using-google-apps-script/</link>
      <pubDate>Wed, 20 Nov 2019 15:45:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/11/20/moving-file-to-specific-folder-using-google-apps-script/</guid>
      <description>Gists
These are 3 sample scripts for moving a file to the specific folder in Google Drive using Google Apps Script.
Sample script 1 In this script, only Drive Service is used.
var sourceFileId = &amp;#34;###&amp;#34;;var destinationFolderId = &amp;#34;###&amp;#34;;var file = DriveApp.getFileById(sourceFileId);DriveApp.getFolderById(destinationFolderId).addFile(file);file.getParents().next().removeFile(file);Sample script 2 In this script, only Drive API at Advanced Google services. (In this case, it&#39;s Drive API v2.)
var sourceFileId = &amp;#34;###&amp;#34;;var destinationFolderId = &amp;#34;###&amp;#34;;Drive.</description>
    </item>
    
    <item>
      <title>Figma to Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/11/11/figma-to-google-slides-using-google-apps-script/</link>
      <pubDate>Mon, 11 Nov 2019 14:43:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/11/11/figma-to-google-slides-using-google-apps-script/</guid>
      <description>Gists
In this sample script, all pages in the Figma file are retrieved and the retrieved pages are put to new Google Slides as the image.
Usage 1. Retrieve access token You can see the method for retrieving the access token at here. Although there is also OAuth2 for retrieving the access token, in your situation, I thought that the method for directly generating the access token on the site might be suitable.</description>
    </item>
    
    <item>
      <title>Retrieving Values from Sheet Filtered by Slicer in Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/11/08/retrieving-values-from-sheet-filtered-by-slicer-in-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 08 Nov 2019 16:13:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/11/08/retrieving-values-from-sheet-filtered-by-slicer-in-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Overview This is a sample script for retrieving values from a sheet filtered by Slicer in Spreadsheet using Google Apps Script.
Description By the update of Google side at November 6, 2019, Class Slicer was added. And also, for Sheets API, AddSlicerRequest and UpdateSlicerSpecRequest were added. By this, Slicer of Spreadsheet got to be able to be managed with Google Apps Script and other languages.
Here, I would like to introduce the method for retrieving values from a sheet filtered by Slicer in Spreadsheet using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Automatic Recalculation of Custom Function on Spreadsheet Part 2</title>
      <link>https://tanaikech.github.io/2019/10/28/automatic-recalculation-of-custom-function-on-spreadsheet-part-2/</link>
      <pubDate>Mon, 28 Oct 2019 08:09:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/28/automatic-recalculation-of-custom-function-on-spreadsheet-part-2/</guid>
      <description>Gists
Description I have already reported about &amp;ldquo;Automatic Recalculation of Custom Function on Spreadsheet Part 1&amp;rdquo; at here. Here, I would like to introduce other workaround for forcibly recalculating the custom functions and built-in functions using Class TextFinder. Class TextFinder has added at April 5, 2019. By this, this workaround can be proposed.
Sample scripts Pattern 1 If you want to refresh all functions of all sheets in a Spreadsheet, you can use the following script.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GetEditType</title>
      <link>https://tanaikech.github.io/2019/10/25/updated-gas-library-getedittype/</link>
      <pubDate>Fri, 25 Oct 2019 10:27:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/25/updated-gas-library-getedittype/</guid>
      <description>GetEditType was updated to v1.0.1.   v1.0.1 (October 25, 2019)
 Updated: This answer was reflected.    You can see the detail information here https://github.com/tanaikech/GetEditType</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ZipFolder</title>
      <link>https://tanaikech.github.io/2019/10/15/updated-gas-library-zipfolder/</link>
      <pubDate>Tue, 15 Oct 2019 14:33:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/15/updated-gas-library-zipfolder/</guid>
      <description>ZipFolder was updated to v1.0.1.   v1.0.1 (October 15, 2019)
 The option for preventing the duplicated filenames when the Google Docs is converted was added.    You can see the detail information here https://github.com/tanaikech/ZipFolder</description>
    </item>
    
    <item>
      <title>Resumable Upload of Multiple Files with Asynchronous Process for Google Drive</title>
      <link>https://tanaikech.github.io/2019/10/14/resumable-upload-of-multiple-files-with-asynchronous-process-for-google-drive/</link>
      <pubDate>Mon, 14 Oct 2019 11:06:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/14/resumable-upload-of-multiple-files-with-asynchronous-process-for-google-drive/</guid>
      <description>Overview This is a sample script for uploading multiple files with large size (&amp;gt; 50 MB) at the sidebar, dialog of Google Docs and Web Apps using the resumable upload of the asynchronous process with Javascript and Google Apps Script (GAS).
Demo This is a demonstration of this script. As a demonstration, it uploads 5 files with the size of 100 MB to own Google Drive. When the files were selected and the upload button is clicked, those are uploaded by the resumable upload with the asynchronous process.</description>
    </item>
    
    <item>
      <title>One Time Download for Google Drive</title>
      <link>https://tanaikech.github.io/2019/10/04/one-time-download-for-google-drive/</link>
      <pubDate>Fri, 04 Oct 2019 11:59:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/04/one-time-download-for-google-drive/</guid>
      <description>Overview This is a sample script for downloading files from Google Drive by the one time download method.
Description When you download a file from Google Drive, in generally, the login and the access token are required. If you want to download the file without the authorization for the simple situation, the file is required to be publicly shared. But the file might not be able to be shared publicly, because of various reasons.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2019/09/20/updated-gas-library-runall/</link>
      <pubDate>Fri, 20 Sep 2019 10:43:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/09/20/updated-gas-library-runall/</guid>
      <description>RunAll was updated to v1.1.1.   v1.1.1 (September 20, 2019)
 When the number of 0 was used as the argument, null was returned. This bug was removed. Coffeescript as the source was updated.    You can see the detail information here https://github.com/tanaikech/RunAll</description>
    </item>
    
    <item>
      <title>Modifying Revisions of a File on Google Drive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/09/16/modifying-revisions-of-a-file-on-google-drive-using-google-apps-script/</link>
      <pubDate>Mon, 16 Sep 2019 15:50:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/09/16/modifying-revisions-of-a-file-on-google-drive-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for modifying the revisions of a file on Google Drive using Google Apps Script. This script can be used for not only Google Docs files, but also the files except for Google Docs.
Issue and workaround: Unfortunately, in the current stage, at Google Docs files, the revision of Google Docs cannot be directly changed by APIs with a script. So as one of several workarounds, I would like to propose to overwrite the Google Docs file using the exported data.</description>
    </item>
    
    <item>
      <title>Benchmark: Importing CSV Data to Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/08/28/benchmark-importing-csv-data-to-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 28 Aug 2019 12:01:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/28/benchmark-importing-csv-data-to-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes for Consumer and Google Apps free edition, and 30 minutes for G Suite and Early Access. 1 So many users always have to pay attention to reducing the process cost of scripts. So it is very important to know the process cost of various situations.</description>
    </item>
    
    <item>
      <title>Running Functions by Specifying Function Names with Web Apps for Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/08/26/running-functions-by-specifying-function-names-with-web-apps-for-google-apps-script/</link>
      <pubDate>Mon, 26 Aug 2019 17:55:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/26/running-functions-by-specifying-function-names-with-web-apps-for-google-apps-script/</guid>
      <description>Gists
In this report, I would like to introduce the method for running functions by directly specifying the function names with Web Apps for Google Apps Script.
Description It has already been known that the directly specified functions in the project can be run from the outside by enabling &amp;ldquo;API executable&amp;rdquo; and using the method of scripts.run in Google Apps Script API. In this case, the installation for using Apps Script API is a bit complicate.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2019/08/26/updated-gas-library-runall/</link>
      <pubDate>Mon, 26 Aug 2019 17:40:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/26/updated-gas-library-runall/</guid>
      <description>RunAll was updated to v1.1.0.   v1.1.0 (August 26, 2019)
 New method for achieving the parallel processing with Web Apps was added.    You can see the detail information here https://github.com/tanaikech/RunAll</description>
    </item>
    
    <item>
      <title>Examples of How to Derive a Signing Key for Signature Version 4 (AWS) for Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/08/11/examples-of-how-to-derive-a-signing-key-for-signature-version-4-aws-for-google-apps-script/</link>
      <pubDate>Sun, 11 Aug 2019 16:15:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/11/examples-of-how-to-derive-a-signing-key-for-signature-version-4-aws-for-google-apps-script/</guid>
      <description>Gists
This is a sample script for &amp;ldquo;Examples of How to Derive a Signing Key for Signature Version 4&amp;rdquo; using Google Apps Script.
In order to use AWS SDKs, there are the sample scripts for the languages of Java, .NET (C#), Python, Ruby, JavaScript (Node.js). But the sample script of Google Apps Script is not prepared. I saw the question related to this at Stackoverflow. So I would like to also introduce the sample script here.</description>
    </item>
    
    <item>
      <title>Parsing HTML using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/08/01/parsing-html-using-google-apps-script/</link>
      <pubDate>Thu, 01 Aug 2019 14:04:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/01/parsing-html-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for parsing HTML using Google Apps Script. When HTML data is converted to Google Document, the HTML data can be parsed and be converted to Google Document. In this case, the paragraphs, lists and tables are included. From this situation, I thought that this situation can be used for parsing HTML using Google Apps Script. So I could came up with this method.
In the Sheet API, the HTML data can be put to the Spreadsheet with the PasteDataRequest.</description>
    </item>
    
    <item>
      <title>Retrieving Values from Filtered Sheet in Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/07/28/retrieving-values-from-filtered-sheet-in-spreadsheet-using-google-apps-script/</link>
      <pubDate>Sun, 28 Jul 2019 17:05:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/28/retrieving-values-from-filtered-sheet-in-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving values from filtered Sheet in Spreadsheet using Google Apps Script. When the values are retrieved the filtered sheet by the basic filter, if setValues() and setDisplayValues() are used, all values without the filter are retrieved. In this script, I would like to introduce the method for retrieving the values from the filtered sheet using Google Apps Script.
In order to retrieve the values from the filtered sheet, one method has already been proposed.</description>
    </item>
    
    <item>
      <title>GAS Library - UnzipGs</title>
      <link>https://tanaikech.github.io/2019/07/26/gas-library-unzipgs/</link>
      <pubDate>Fri, 26 Jul 2019 13:49:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/26/gas-library-unzipgs/</guid>
      <description>Overview This is a GAS library for unzipping a Zip file protected by a password using Google Apps Script.
Description Recently, I had a situation that it is required to unzip a Zip file protected with the password. But unfortunately, in the current stage, the method of Utilities.unzip() cannot unzip such protected files. So when I had been looking for the other workarounds, I found zlib.js. Especially, it&#39;s unzip.min.js. This is created for Javascript.</description>
    </item>
    
    <item>
      <title>Protecting Cells of Spreadsheet that Users Copied from Your Google Drive to User&#39;s Google Drive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/07/17/protecting-cells-of-spreadsheet-that-users-copied-from-your-google-drive-to-users-google-drive-using-google-apps-script/</link>
      <pubDate>Wed, 17 Jul 2019 08:20:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/17/protecting-cells-of-spreadsheet-that-users-copied-from-your-google-drive-to-users-google-drive-using-google-apps-script/</guid>
      <description>Gists
This is the method for protecting cells of Spreadsheet that users copied from your Google Drive to user&#39;s Google Drive using Google Apps Script.
Situation: This method supposes the following situation.
 You want to make users copy a Spreadsheet on your Google Drive to user&#39;s Google Drive. - Your Spreadsheet has several protected ranges. - Your Spreadsheet is shared with the user. - User doesn&#39;t have own folder shared with you.</description>
    </item>
    
    <item>
      <title>Linking Cloud Platform Project to Google Apps Script Project</title>
      <link>https://tanaikech.github.io/2019/07/05/linking-cloud-platform-project-to-google-apps-script-project/</link>
      <pubDate>Fri, 05 Jul 2019 09:17:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/05/linking-cloud-platform-project-to-google-apps-script-project/</guid>
      <description>Gists
Introduction At April 8, 2019, the specification of Google Apps Script Project was changed. You can see this at Google Cloud Platform Projects. The official document says as follows.
 Warning: Starting on or after April 8, 2019, the Google Cloud Platform Console won&#39;t be able to access the default GCP projects created for new Apps Script projects. Older, existing scripts may have default GCP projects that are still accessible, however.</description>
    </item>
    
    <item>
      <title>GAS Library - GetEditType</title>
      <link>https://tanaikech.github.io/2019/06/10/gas-library-getedittype/</link>
      <pubDate>Mon, 10 Jun 2019 16:19:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/06/10/gas-library-getedittype/</guid>
      <description>Overview GetEditType is a GAS library for retrieving the edit types of the OnEdit event trigger of Spreadsheet using Google Apps Script (GAS).
Description In the case that the OnEdit event trigger (simple and installable triggers) is used at Spreadsheet, when users manually edited the cell of Spreadsheet, the trigger is fired. At this time, there is the case that I want to know the edit type. For example, I would like to know about the following edit types.</description>
    </item>
    
    <item>
      <title>Fixing Value Putting by Custom Function of Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/06/02/fixing-value-putting-by-custom-function-of-spreadsheet-using-google-apps-script/</link>
      <pubDate>Sun, 02 Jun 2019 17:41:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/06/02/fixing-value-putting-by-custom-function-of-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for fixing a value putting by a custom function of Spreadsheet using Google Apps Script. When a custom function is used, the value retrieved by the custom function of Spreadsheet is automatically updated by recalculating. So in the case that the value retrieved by the custom function is changed by the time, the value is also changed by automatically updating. In this sample script, I would like to introduce a method for fixing such values.</description>
    </item>
    
    <item>
      <title>Retrieving Values with and without Duplicating from JSON Object using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/30/retrieving-values-with-and-without-duplicating-from-json-object-using-google-apps-script/</link>
      <pubDate>Thu, 30 May 2019 14:14:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/30/retrieving-values-with-and-without-duplicating-from-json-object-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the values with and without duplicating from JSON object using Google Apps Script. Also this can be used by Javascript.
Sample script var obj = [{ key1: &amp;#34;value1a&amp;#34;, key2: &amp;#34;value1b&amp;#34; },{ key1: &amp;#34;value2a&amp;#34;, key2: &amp;#34;value2b&amp;#34; },{ key1: &amp;#34;value5a&amp;#34;, key2: &amp;#34;value5b&amp;#34; },{ key1: &amp;#34;value3a&amp;#34;, key2: &amp;#34;value3b&amp;#34; },{ key1: &amp;#34;value1a&amp;#34;, key2: &amp;#34;value1b&amp;#34; },{ key1: &amp;#34;value4a&amp;#34;, key2: &amp;#34;value4b&amp;#34; },{ key1: &amp;#34;value5a&amp;#34;, key2: &amp;#34;value5b&amp;#34; },{ key1: &amp;#34;value3a&amp;#34;, key2: &amp;#34;value3b&amp;#34; }];var res = obj.</description>
    </item>
    
    <item>
      <title>Creating New Table and Putting Values to Cells using Google Docs API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/22/creating-new-table-and-putting-values-to-cells-using-google-docs-api-with-google-apps-script/</link>
      <pubDate>Wed, 22 May 2019 11:06:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/22/creating-new-table-and-putting-values-to-cells-using-google-docs-api-with-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating new table and putting values to cells using Google Docs API with Google Apps Script. Unfortunately, in the current stage, although I had been looking for the method for creating a table and putting the values in each cell at the official document, I couldn&#39;t find. Google Docs API is growing now. So such documents might be not prepared yet. By this situation, I investigated about the method for achieving this method.</description>
    </item>
    
    <item>
      <title>Possibility of Real Time Processes In a Cell on Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/22/possibility-of-real-time-processes-in-a-cell-on-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 22 May 2019 10:12:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/22/possibility-of-real-time-processes-in-a-cell-on-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for investigating the possibility of the real time processes in a cell on Google Spreadsheet using Google Apps Script. As a sample situation, it tried the real time clock in a cell on Google Spreadsheet using Google Apps Script.
Demo: Usage: When you use this script, please do the following flow.
 Copy and paste the following script to the script editor (the container-bound script of Spreadsheet).</description>
    </item>
    
    <item>
      <title>Deleting Pages of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/17/deleting-pages-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 17 May 2019 15:12:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/17/deleting-pages-of-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for deleting pages of Google Document from the last page using Google Apps Script. There are no methods for directly deleting pages of Google Document. This is one of several workarounds. In this workaround, the following flow is used.
Flow  Retrieve paragraphs in the body of Document. Retrieve elements in each paragraph. The page break is included in the paragraph. Delete elements from last page in order.</description>
    </item>
    
    <item>
      <title>Retrieving Total Page of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/17/retrieving-total-page-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 17 May 2019 15:05:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/17/retrieving-total-page-of-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving total page of Google Document using Google Apps Script. There are no methods for directly retrieving the total page of Google Document. This is one of several workarounds. In this workaround, the total page is retrieved by converting to PDF format.
var n =DriveApp.getFileById(id).getBlob().getDataAsString().split(&amp;#34;/Contents&amp;#34;).length - 1;Logger.log(&amp;#34;totalPages: %s&amp;#34;, n); When you use this, please set the Google Document ID as id.</description>
    </item>
    
    <item>
      <title>Processing Duplicated Rows of 2 Dimensional Arrays using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/17/processing-duplicated-rows-of-2-dimensional-arrays-using-google-apps-script/</link>
      <pubDate>Fri, 17 May 2019 13:21:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/17/processing-duplicated-rows-of-2-dimensional-arrays-using-google-apps-script/</guid>
      <description>Gists
Overview These are sample scripts for processing the duplicated rows of 2 dimensional arrays using Google Apps Script.
Description When I use Google Spreadsheet and/or see Stackoverflow, I sometimes see the situation which is required to process the duplicated rows of 2 dimensional arrays. I thought that when the sample scripts for it have already prepared, they will be useful for other users including me. So I published this post.</description>
    </item>
    
    <item>
      <title>Specification of Google Apps Script Project was Changed at April 8, 2019</title>
      <link>https://tanaikech.github.io/2019/05/16/specification-of-google-apps-script-project-was-changed-at-april-8-2019/</link>
      <pubDate>Thu, 16 May 2019 08:50:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/16/specification-of-google-apps-script-project-was-changed-at-april-8-2019/</guid>
      <description>Gists
At April 8, 2019, the specification of Google Apps Script Project was changed. Various specification was changed. Please see the detail at Google Cloud Platform Projects. Here, I would like to introduce one change which might be useful for users. The official document says as follows.
 When you enable an advanced service for your script project in the Apps Script editor, it is automatically enabled in the default GCP project when the script project is saved.</description>
    </item>
    
    <item>
      <title>Backup Project as zip File using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/06/backup-project-as-zip-file-using-google-apps-script/</link>
      <pubDate>Mon, 06 May 2019 13:23:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/06/backup-project-as-zip-file-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for backing up a project as a zip file. When you use this script, please install a GAS library of ProjectApp2. You can back up both the standalone script type and the container-bound script type.
In this script, the blob of zip file can be retrieved from ProjectApp2. So you can also send it as email without creating a file.
var projectId = &amp;#34;### fileId of project ###&amp;#34;;var blob = ProjectApp2.</description>
    </item>
    
    <item>
      <title>Split Array by n Elements using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/30/split-array-by-n-elements-using-google-apps-script/</link>
      <pubDate>Tue, 30 Apr 2019 13:54:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/30/split-array-by-n-elements-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for splitting an array by n elements using Google Apps Script.
Sample script 1: var limit = 3;var ar = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];var res = [];while (ar.length &amp;gt; 0) res.push(ar.splice(0, limit));Logger.log(res); // [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0], [10.0]]Above sample script is a simple. But at Google Apps Script, the process cost of &amp;ldquo;while&amp;rdquo; is higher than the for loop as shown in this report.</description>
    </item>
    
    <item>
      <title>Overwriting Several Google Documents by 2 Text Files using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/20/overwriting-several-google-documents-by-2-text-files-using-google-apps-script/</link>
      <pubDate>Sat, 20 Apr 2019 11:11:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/20/overwriting-several-google-documents-by-2-text-files-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for overwriting several Google Documents by 2 text files using Google Apps Script.
Before you run this sample script, please install a GAS library of FetchApp.
As a sample situation, it supposes to overwrite 2 existing Google Documents by 2 text files using the method of files.update Drive API v3. In the current stage, the batch request of Drive API cannot use the file media.</description>
    </item>
    
    <item>
      <title>Creating Google Document by Converting PDF and Image Files with OCR using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/20/creating-google-document-by-converting-pdf-and-image-files-with-ocr-using-google-apps-script/</link>
      <pubDate>Sat, 20 Apr 2019 11:10:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/20/creating-google-document-by-converting-pdf-and-image-files-with-ocr-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating Google Document by converting PDF and image files with OCR using Google Apps Script.
Before you run this sample script, please install a GAS library of FetchApp.
function sample() {var fileId = &amp;#34;### fileId of PDF file and image files ###&amp;#34;;var metadata = {name: &amp;#34;sampleDocument&amp;#34;, // Filename of created Google Document mimeType: MimeType.GOOGLE_DOCS // MimeType of Google Document };var fileBlob = DriveApp.</description>
    </item>
    
    <item>
      <title>GAS Library - FetchApp</title>
      <link>https://tanaikech.github.io/2019/04/20/gas-library-fetchapp/</link>
      <pubDate>Sat, 20 Apr 2019 11:07:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/20/gas-library-fetchapp/</guid>
      <description>Overview This is a GAS library for creating and requesting the type of multipart/form-data using Google Apps Script. This library enhances Class UelFetchApp of Google Apps Script.
Description In order to fetch data from URL, there is Class UrlFetchApp in Google Apps Script. As the method for fetching, there is the method of fetch(url, params). In the current stage which was released this library, when user want to request with the type of multipart/form-data, the request body is required to be created by the user.</description>
    </item>
    
    <item>
      <title>Converting Many Files to Google Docs using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/11/converting-many-files-to-google-docs-using-google-apps-script/</link>
      <pubDate>Thu, 11 Apr 2019 11:14:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/11/converting-many-files-to-google-docs-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting a lot of files to Google Docs (Spreadsheet, Document and Slides).
 Batch request can be used for converting files. In this sample script, the files are converted using the batch request. Batch request can request 100 API by one API call. This sample script uses the fetchAll method. So even if there are over 100 files, this script can process them.  Sample script: Before you run the script, please set the variables at main().</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2019/04/06/updated-gas-library-imgapp/</link>
      <pubDate>Sat, 06 Apr 2019 10:46:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/06/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.2.2.
  v1.2.2 (April 6, 2019)
By Google&#39;s update, the error of &amp;ldquo;Malformed multipart body.&amp;rdquo; occurs. This error was resolved.
  You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>Limitations for Inserting Images to Google Docs</title>
      <link>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</link>
      <pubDate>Fri, 05 Apr 2019 11:49:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</guid>
      <description>Gists
When an image is inserted to Google Docs (Spreadsheet, Document and Slides) using the method of insertImage using Google Apps Script, there is the case that the error occurs. The error messages are &amp;ldquo;server error&amp;rdquo; and &amp;ldquo;invalid image data&amp;rdquo;. Here, I would like to introduce the limitations for inserting images to Google Docs. As the result, it was found that the limitation is due to both the mimeTypes and the area of image rather than the file size.</description>
    </item>
    
    <item>
      <title>Deleting Positioned Images on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/01/deleting-positioned-images-on-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 01 Apr 2019 10:49:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/01/deleting-positioned-images-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for deleting the positioned images on Google Document using Google Apps Script. In the current stage, unfortunately, there are no methods for deleting the positioned images in Class PositionedImage, yet. But when Google Docs API is used, the positioned images can be deleted.
When you use this script, please enable Google Docs API at Advanced Google Services and API console. You can see how to enable them at here</description>
    </item>
    
    <item>
      <title>Modify Searched Text to Small Capital Letters using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/01/modify-searched-text-to-small-capital-letters-using-google-apps-script/</link>
      <pubDate>Mon, 01 Apr 2019 10:43:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/01/modify-searched-text-to-small-capital-letters-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for modifying the searched text to the small capital letters using Google Apps Script. Unfortunately, in the current stage, there are no methods for modifying the part of texts to the small capital letters in Document Service, yet. But when Google Docs API is used, this can be achieved.
When you use this script, please enable Google Docs API at Advanced Google Services and API console.</description>
    </item>
    
    <item>
      <title>GAS Library - GistChecker</title>
      <link>https://tanaikech.github.io/2019/04/01/gas-library-gistchecker/</link>
      <pubDate>Mon, 01 Apr 2019 10:27:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/01/gas-library-gistchecker/</guid>
      <description>Overview This is a GAS library for notifying the change of number of comments, stars and forks of own Gists as an email using Google Apps Script.
Description Recently, I noticed that when a comment was posted to own Gists, and the numbers of stars and forks of own Gists were changed, the notification mail is not sent. Also I knew that in the current stage, there are no official methods for notifying them, yet.</description>
    </item>
    
    <item>
      <title>Communities for Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/03/28/communities-for-google-apps-script/</link>
      <pubDate>Thu, 28 Mar 2019 09:33:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/28/communities-for-google-apps-script/</guid>
      <description>Gists
Consumer (personal) version of Google+ is closed on April 2, 2019. By this, Apps Script community of Google+ is also closed. This is one of important communities for discussing. So in this post, I would like to introduce the other communities related to Google Apps Script.
  As the next community of Apps Script community of Google+, Google Apps Script Community was launched.
 This is also introduced at How to get help of official site like this.</description>
    </item>
    
    <item>
      <title>Parsing Query Parameters from URL using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/03/26/gastips/</link>
      <pubDate>Tue, 26 Mar 2019 14:58:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/26/gastips/</guid>
      <description>Gists
This is a sample script for parsing query parameters from an URL using Google Apps Script. Also this can be used at Javascript. The process cost becomes a bit lower than that of the script using the regular expression.
Sample script function parseQuery(url) {var query = url.split(&amp;#34;?&amp;#34;)[1];if (query) {return query.split(&amp;#34;&amp;amp;&amp;#34;).reduce(function(o, e) {var temp = e.split(&amp;#34;=&amp;#34;);var key = temp[0].trim();var value = temp[1].trim();value = isNaN(value) ?</description>
    </item>
    
    <item>
      <title>Trend of google-apps-script Tag on Stackoverflow 2019</title>
      <link>https://tanaikech.github.io/2019/03/25/trend-of-google-apps-script-tag-on-stackoverflow-2019/</link>
      <pubDate>Mon, 25 Mar 2019 16:29:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/25/trend-of-google-apps-script-tag-on-stackoverflow-2019/</guid>
      <description>Gists
Kanshi Tanaike
Introduction At Stackoverflow, a lot of people post the questions and answers to the questions every day. There are various tags in Stackoverflow. A lot of discussions are performed at each tag. Their discussions bring the important information and are much useful for a lot of people. As one of tags, there is &amp;ldquo;google-apps-script&amp;rdquo;. I sometimes discuss at the questions with that tag. When we see the discussions, we can notice that the discussions are changed and progressed by the time, because &amp;ldquo;Google Apps Script&amp;rdquo; which is the origin of the tag is updated.</description>
    </item>
    
    <item>
      <title>Modify Shading Color of Paragraph on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/03/16/modify-shading-color-of-paragraph-on-google-document-using-google-apps-script/</link>
      <pubDate>Sat, 16 Mar 2019 16:25:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/16/modify-shading-color-of-paragraph-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a script for modifying the shading color of paragraph on Google Document using Google Apps Script.
Recently, by releasing Google Docs API, the shading color got to be able to be modified using the script. Here, I would like to introduce a sample script for modifying the shading color of the paragraph on Google Document. At the current Document Service, the shading color cannot be modified yet. I think that this will be achieved in the future update.</description>
    </item>
    
    <item>
      <title>Adding Title of vAxis to Embedded Chart on Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/03/04/adding-title-of-vaxis-to-embedded-chart-on-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 04 Mar 2019 13:48:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/04/adding-title-of-vaxis-to-embedded-chart-on-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
When a chart is created by using EmbeddedChartBuilder of Spreadsheet service, the title of vAxis which is put by setOption(&amp;quot;vAxis&amp;quot;, {title: &amp;quot;y axis&amp;quot;}) doesn&#39;t work. It is considered that this is a bug. Because I have confirmed that this had worked fine. Ref But this specification had been changed. So I would like to introduce the method for adding the title of vAxis when a chart is created using Google Apps Script.</description>
    </item>
    
    <item>
      <title>tarUnarchiver for Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/02/27/tarunarchiver-for-google-apps-script/</link>
      <pubDate>Wed, 27 Feb 2019 13:45:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/02/27/tarunarchiver-for-google-apps-script/</guid>
      <description>Overview This is a script for extracting files from a tar file using Google Apps Script. This script was created by native Google Apps Script.
The following 3 situations gave me the motivarion for creating this script.
 Although I had been looking for the script for extracting files from a tar file from before, I have still not been able to find it. Unfortunately, there are no methods for extracting the files from the tar file in Google Apps Script.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ProcessApp</title>
      <link>https://tanaikech.github.io/2019/02/10/updated-gas-library-processapp/</link>
      <pubDate>Sun, 10 Feb 2019 11:04:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/02/10/updated-gas-library-processapp/</guid>
      <description>ProcessApp was updated to v1.0.1.
  v1.0.1 (February 10, 2019)
 New method of getExecutionTimeOfProcessType() was added.  This method retrieves the total execution time of all functions by filtering the process type. For example, the total execution time of Web Apps can be retrieved.      You can see the detail information here https://github.com/tanaikech/ProcessApp</description>
    </item>
    
    <item>
      <title>GAS Library - ProcessApp</title>
      <link>https://tanaikech.github.io/2019/02/09/gas-library-processapp/</link>
      <pubDate>Sat, 09 Feb 2019 16:11:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/02/09/gas-library-processapp/</guid>
      <description>Overview This is a library for retrieving the process and information of Google Apps Script.
Methods  getExecutionTimeOfTrigger() : This method retrieves the total execution time of all functions executed by the time-driven trigger at owner&#39;s account. For example, you can know the total execution time of all functions executed by the time-driven trigger in 24 h. getDevUrl() : This method retrieves the endpoint of developer mode for Web Apps like https://script.</description>
    </item>
    
    <item>
      <title>Creating One-time Writing Cells using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/01/24/creating-one-time-writing-cells-using-google-apps-script/</link>
      <pubDate>Thu, 24 Jan 2019 11:37:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/01/24/creating-one-time-writing-cells-using-google-apps-script/</guid>
      <description>Gists
This sample script is for creating one-time writing cells using Google Apps Script. At first, it supposes the following situation.
 A Spreadsheet is shared with users. The owner of Spreadsheet is you. After users put a value to a cell, you don&#39;t want to make users edit the cell again.  Namely, you want to protect the cell.    This sample script achieves above situation.
Preparation Before you use this script, please do the following flow.</description>
    </item>
    
    <item>
      <title>Update: Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/01/16/update-taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Wed, 16 Jan 2019 10:42:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/01/16/update-taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>&amp;ldquo;Taking advantage of Web Apps with Google Apps Script&amp;rdquo; was updated. A section of &amp;ldquo;How to use dev mode from outside&amp;rdquo; was added.
 When you deploy Web Apps, you can see the link labeled latest code. The link is like https://script.google.com/macros/s/###/dev. When you access to the link of latest code using your browser under you login to Google, you can access to Web Apps with the dev mode. But if you want to access to Web Apps with the dev mode from outside, there are no documents for the method.</description>
    </item>
    
    <item>
      <title>Opening Dialog Box during Calculation and Retrieving Calculated Result using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/01/13/opening-dialog-box-during-calculation-and-retrieving-calculated-result-using-google-apps-script/</link>
      <pubDate>Sun, 13 Jan 2019 15:35:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/01/13/opening-dialog-box-during-calculation-and-retrieving-calculated-result-using-google-apps-script/</guid>
      <description>Gists
 When it starts a calculation, open a dialog box. When the calculation is finished, close the dialog and retrieve the calculated result.  This is a sample script for achieving above flow. This sample script supposes to use the container-bound script of Spreadsheet. When you use this, please run the function of run().
Sample script: function doSomething(e) {// Scripts for calculating.Utilities.sleep(3000); // This is a sample wait time.</description>
    </item>
    
    <item>
      <title>Closing Existing Sidebar using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/01/09/closing-existing-sidebar-using-google-apps-script/</link>
      <pubDate>Wed, 09 Jan 2019 11:58:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/01/09/closing-existing-sidebar-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for closing the existing sidebar using Google Apps Script. When the sidebar is opened, in order to close the sidebar, the sidebar can be closed by running google.script.host.close() with the script of sidebar. This is the general case.
If you want to close the opened sidebar, such functions are not prepared. So I thought this workaround. The flow of this workaround is as follows.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v171</title>
      <link>https://tanaikech.github.io/2018/12/30/updated-ggsrun-to-v171/</link>
      <pubDate>Sun, 30 Dec 2018 12:16:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/30/updated-ggsrun-to-v171/</guid>
      <description>ggsrun was updated to v.1.7.1  v1.7.1 (December 30, 2018)  A bug was removed.  When a project is downloaded and zipped, there was a case that &amp;ldquo;createdTime&amp;rdquo; and &amp;ldquo;modifiedTime&amp;rdquo; of the project cannot be retrieved by Apps Script API. This was modified.      You can check ggsrun at https://github.com/tanaikech/ggsrun.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v170</title>
      <link>https://tanaikech.github.io/2018/12/27/updated-ggsrun-to-v170/</link>
      <pubDate>Thu, 27 Dec 2018 11:51:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/27/updated-ggsrun-to-v170/</guid>
      <description>ggsrun was updated to v.1.7.0  v1.7.0 (December 27, 2018)  Manage permissions of files. Get Drive Information. By this, you can know the storage quotas. ggsrun got to be able to be used by not only OAuth2, but also Service Account. By this, using ggsrun, Google Drive for Service Account got to be able to be managed. Some modifications.    You can check ggsrun at https://github.com/tanaikech/ggsrun.</description>
    </item>
    
    <item>
      <title>Uploading Multiple Files From Local To Google Drive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/12/22/uploading-multiple-files-from-local-to-google-drive-using-google-apps-script/</link>
      <pubDate>Sat, 22 Dec 2018 16:44:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/22/uploading-multiple-files-from-local-to-google-drive-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for uploading multiple files from local PC to Google Drive using Google Apps Script. The dialog, sidebar and Web Apps can be used as the GUI interface.
Sample 1 In this sample, the following flow is run.
 Select files at browser. Upload the files every file. Save each file in Google Drive.  When you use this, please copy and paste the Google Apps Script and HTML to the script editor, and run the HTML using the dialog, sidebar and Web Apps.</description>
    </item>
    
    <item>
      <title>Summarizing Slides as Thumbnails</title>
      <link>https://tanaikech.github.io/2018/12/14/summarizing-slides-as-thumbnails/</link>
      <pubDate>Fri, 14 Dec 2018 16:26:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/14/summarizing-slides-as-thumbnails/</guid>
      <description>Gists
This is a sample script for summarizing Slides as thumbnails. For example, it supposes a Slides including 15 pages. When this script is run, it summarizes 6 pages to one page as images. I created this because there are no methods for directly achieving this. This is useful for myself. If this is also useful for you, I&#39;m glad.
The flow of this workaround is as follows.
Flow:  Copy the original Slides file as a temporary file.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</link>
      <pubDate>Fri, 07 Dec 2018 12:09:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Google Apps Script. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  var private_key = &amp;#34;#####&amp;#34;; // private_key of JSON file retrieved by creating Service Accountvar client_email = &amp;#34;#####&amp;#34;; // client_email of JSON file retrieved by creating Service Accountvar scopes = [&amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - DownloadLargeFilesByUrl</title>
      <link>https://tanaikech.github.io/2018/12/05/updated-gas-library-downloadlargefilesbyurl/</link>
      <pubDate>Wed, 05 Dec 2018 15:44:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/05/updated-gas-library-downloadlargefilesbyurl/</guid>
      <description>v1.0.1 (December 5, 2018)
 When the filename have not been retrieved, an error have occurred. This bug was removed.    You can see the detail information here https://github.com/tanaikech/DownloadLargeFilesByUrl</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v160</title>
      <link>https://tanaikech.github.io/2018/11/30/updated-ggsrun-to-v160/</link>
      <pubDate>Fri, 30 Nov 2018 10:44:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/30/updated-ggsrun-to-v160/</guid>
      <description>ggsrun was updated to v.1.6.0  v1.6.0 (November 30, 2018)  Although at ggsrun, files can be searched by filename and file ID, searching files using search query and regex couldn&#39;t be done. From version 1.6.0, files got to be able to be searched using the search query and regex.  $ ggsrun sf -q &amp;quot;### search query ###&amp;quot; -f &amp;quot;### fields ###&amp;quot; -r &amp;quot;### regex ###&amp;quot;   Some modifications.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2018/11/05/updated-gas-library-imgapp/</link>
      <pubDate>Mon, 05 Nov 2018 14:17:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/05/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.2.1.
  v1.2.1 (November 5, 2018)
Efficiency of each loop was enhanced by this benchmark.
  You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v152</title>
      <link>https://tanaikech.github.io/2018/11/04/updated-ggsrun-to-v152/</link>
      <pubDate>Sun, 04 Nov 2018 13:10:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/04/updated-ggsrun-to-v152/</guid>
      <description>ggsrun was updated to v.1.5.2  v1.5.2 (November 4, 2018)  About downloading folders, when files are downloaded from a folder, you can download Google Docs files with the mimeType you want. For example, when you download files from the folder, if -e txt is used, Google Docs are downloaded as the text file. When -e pdf is used, they are downloaded as the PDF file. Of course, there are mimeType which cannot be converted.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v151</title>
      <link>https://tanaikech.github.io/2018/11/02/updated-ggsrun-to-v151/</link>
      <pubDate>Fri, 02 Nov 2018 14:18:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/02/updated-ggsrun-to-v151/</guid>
      <description>ggsrun was updated to v.1.5.1  v1.5.1 (November 2, 2018)  Removed a bug.  When a file information was retrieved, createdTime and modifiedTime couldn&#39;t be seen and the information was incomplete.      You can check ggsrun at https://github.com/tanaikech/ggsrun.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v150</title>
      <link>https://tanaikech.github.io/2018/10/27/updated-ggsrun-to-v150/</link>
      <pubDate>Sat, 27 Oct 2018 16:01:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/27/updated-ggsrun-to-v150/</guid>
      <description>ggsrun was updated to v.1.5.0  v1.5.0 (October 27, 2018)  From this version, ggsrun got to be able to download all files and folders in the specific folder in Google Drive. When all files are downloaded from a folder, the same folder structure of Google Drive is created to the local PC.  $ ggsrun d -f folderName or folderId  When the project file is downloaded, it is downloaded as a zip file.</description>
    </item>
    
    <item>
      <title>Benchmark: Reading and Writing Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/10/12/benchmark-reading-and-writing-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 12 Oct 2018 10:42:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/12/benchmark-reading-and-writing-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Reading and Writing Spreadsheet using Google Apps Script October 18, 2018 Updated. In order to compare with Advanced Google Service, a result of Sheets API by UrlFetchApp was added to Appendix.
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes for Consumer and Google Apps free edition, and 30 minutes for G Suite and Early Access.</description>
    </item>
    
    <item>
      <title>GAS Library - ArrangeStackingOrder</title>
      <link>https://tanaikech.github.io/2018/10/10/gas-library-arrangestackingorder/</link>
      <pubDate>Wed, 10 Oct 2018 09:11:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/10/gas-library-arrangestackingorder/</guid>
      <description>Overview ArrangeStackingOrder is a GAS library for arranging the stacking order of page elements on Google Slides using Google Apps Script (GAS).
Demo This is a demonstration of this library when this is used as a Google Slides Addon.
Description Do you have situations that you want to arrange the stacking order of page elements on Google Slides using GAS? I had it before. At that time, I could achieve it by creating a simple script.</description>
    </item>
    
    <item>
      <title>Joined to Skillshare.com</title>
      <link>https://tanaikech.github.io/2018/10/03/joined-to-skillshare.com/</link>
      <pubDate>Wed, 03 Oct 2018 14:28:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/03/joined-to-skillshare.com/</guid>
      <description>Recently, I was invited to Skillshare.com. They said that &amp;ldquo;will you teach about Google Apps Script?&amp;quot;. I thought that if I can be helpful for other users, I&#39;m glad. So I joined to there and created a presentation. I would like to create more classed in the future. If those were helpful for you, I&#39;m glad.</description>
    </item>
    
    <item>
      <title>Asynchronous Processing using Event Triggers</title>
      <link>https://tanaikech.github.io/2018/09/21/asynchronous-processing-using-event-triggers/</link>
      <pubDate>Fri, 21 Sep 2018 17:00:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/21/asynchronous-processing-using-event-triggers/</guid>
      <description>Gists
Kanshi Tanaike
Overview This is a report about the possibility of asynchronous process using event triggers. This is for Google Apps Script (GAS).
Description onEdit() which is a simple trigger is often used as a trigger when the values are modified on Spreadsheet. When users want to use the script including some methods which are required to be authorized as the onEdit event, a installable trigger of onEdit is used.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RangeListApp</title>
      <link>https://tanaikech.github.io/2018/09/13/updated-gas-library-rangelistapp/</link>
      <pubDate>Thu, 13 Sep 2018 13:53:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/13/updated-gas-library-rangelistapp/</guid>
      <description>RangeListApp was updated to v1.0.1.
  v1.0.1 (September 13, 2018)
 New method of &amp;ldquo;expandA1Notations&amp;rdquo; was added. This method can expand the a1Notations. For example, A1:C2 is expanded to &amp;quot;A1&amp;quot;,&amp;quot;B1&amp;quot;,&amp;quot;C1&amp;quot;,&amp;quot;A2&amp;quot;,&amp;quot;B2&amp;quot;,&amp;quot;C2&amp;quot;.    **You can check this at https://github.</description>
    </item>
    
    <item>
      <title>Expanding A1Notations using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/09/08/expanding-a1notations-using-google-apps-script/</link>
      <pubDate>Sat, 08 Sep 2018 10:57:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/08/expanding-a1notations-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for expanding a1Notations using Google Apps Script (GAS). In this script, for example, &amp;ldquo;A1:E3&amp;rdquo; is expanded to &amp;ldquo;A1, B1, C1, D1, E1, A2, B2, C2, D2, E2, A3, B3, C3, D3, E3&amp;rdquo;. When each cell in &amp;ldquo;A1:E3&amp;rdquo; is checked, this script might be able to be used. If this was useful for your situation, I&#39;m glad.
Script: function expandA1Notation(a1Notations) {var columnToLetter = function(column) {var temp, letter = &amp;#39;&amp;#39;;while (column &amp;gt; 0) {temp = (column - 1) % 26;letter = String.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FilesApp</title>
      <link>https://tanaikech.github.io/2018/09/03/updated-gas-library-filesapp/</link>
      <pubDate>Mon, 03 Sep 2018 09:12:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/03/updated-gas-library-filesapp/</guid>
      <description>FilesApp was updated to v1.0.1.
 Removed a bug.  When there are files and folders without the parents, an error occurred. In this version, this issue was removed.    GitHub of FilesApp</description>
    </item>
    
    <item>
      <title>GAS Library - DownloadLargeFilesByUrl</title>
      <link>https://tanaikech.github.io/2018/09/02/gas-library-downloadlargefilesbyurl/</link>
      <pubDate>Sun, 02 Sep 2018 10:54:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/02/gas-library-downloadlargefilesbyurl/</guid>
      <description>Overview DownloadLargeFilesByUrl is a GAS library for downloading large files from URL to Google Drive using Google Apps Script (GAS).
Description I had been thinking of about whether a large file from an URL can be downloaded to Google Drive using GAS. When I have tried to download such large files, I noticed the following limitations. These limitations are due to the specification of GAS.
 When users download a file from URL using GAS, at the most users, it retrieves the blob using UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Enhanced makeCopy() using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/23/enhanced-makecopy-using-google-apps-script/</link>
      <pubDate>Thu, 23 Aug 2018 14:28:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/23/enhanced-makecopy-using-google-apps-script/</guid>
      <description>Gists
Overview This is sample scripts for copying files to a specific folder in Google Drive using Google Apps Script (GAS).
Description When the files in Google Drive are copied to a specific folder using GAS, most users will use makeCopy(destination). When the files are copied using makeCopy(), you might have already noticed that only the standalone projects cannot be copied to the specific folder. They are copied to the root folder (My Drive).</description>
    </item>
    
    <item>
      <title>Replacing Text to Image for Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/20/replacing-text-to-image-for-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 20 Aug 2018 09:55:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/20/replacing-text-to-image-for-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing text to image for Google Document using Google Apps Script (GAS). There is a method for replacing text to text at Class Text of DocumentApp. But there are not methods for replacing text to image. So I created this sample script.
Demo : This sample image was created by k3-studio.
Usage : replaceTextToImage(body, replaceText, image, width); body : body of document. You can set by DocumentApp.</description>
    </item>
    
    <item>
      <title>Benchmark: Decreasing Loop for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/11/benchmark-decreasing-loop-for-array-processing-using-google-apps-script/</link>
      <pubDate>Sat, 11 Aug 2018 16:25:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/11/benchmark-decreasing-loop-for-array-processing-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Decreasing Loop for Array Processing using Google Apps Script Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes. 1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Retrieving Screen Shots of Sites using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/05/retrieving-screen-shots-of-sites-using-google-apps-script/</link>
      <pubDate>Sun, 05 Aug 2018 14:34:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/05/retrieving-screen-shots-of-sites-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving screen shots of sites using Google Apps Script. In order to retrieve the screen shot, here, I used PageSpeed API.
When you use this, please copy and paste the following script, and set an URL you want to retrieve a screen shot.
var siteUrl = &amp;#34;### URL you want to retrieve a screen shot. ###&amp;#34;;var url = &amp;#34;https://www.googleapis.com/pagespeedonline/v4/runPagespeed?screenshot=true&amp;amp;fields=screenshot&amp;amp;url=&amp;#34; + encodeURIComponent(siteUrl);var res = UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2018/07/28/updated-gas-library-onedriveapp/</link>
      <pubDate>Sat, 28 Jul 2018 16:27:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/28/updated-gas-library-onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.1.1.
I have to apologize you and all users.
I had forgot that it added setProp(). I could notice about this by reporting at here.
I would like to report because I could remove this bug.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>GAS Library - RangeListApp</title>
      <link>https://tanaikech.github.io/2018/07/27/gas-library-rangelistapp/</link>
      <pubDate>Fri, 27 Jul 2018 13:52:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/27/gas-library-rangelistapp/</guid>
      <description>Overview RangeListApp is a GAS library for retrieving, putting and replacing values for Spreadsheet by a range list with a1Notation using Google Apps Script (GAS).
Description There is Class RangeList as one of classes for Spreadsheet. There is setValue(value) in Class RangeList as a method. setValue(value) puts value to the cells of range list. Recently, when I used this method, I noticed that the following situations what I want cannot be achieved.</description>
    </item>
    
    <item>
      <title>Updated: Benchmark: Loop for Array Processing using Google Apps Script without V8</title>
      <link>https://tanaikech.github.io/2018/07/26/updated-benchmark-loop-for-array-processing-using-google-apps-script-without-v8/</link>
      <pubDate>Thu, 26 Jul 2018 09:29:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/26/updated-benchmark-loop-for-array-processing-using-google-apps-script-without-v8/</guid>
      <description>I updated the report of &amp;ldquo;Benchmark: Loop for Array Processing using Google Apps Script&amp;rdquo;. In this update, &amp;ldquo;reduce&amp;rdquo; was added. If this report is useful for your situation, I&#39;m glad.
**You can check this at https://gist.</description>
    </item>
    
    <item>
      <title>Notifying with email when Netatmo was down</title>
      <link>https://tanaikech.github.io/2018/07/20/notifying-with-email-when-netatmo-was-down/</link>
      <pubDate>Fri, 20 Jul 2018 16:38:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/20/notifying-with-email-when-netatmo-was-down/</guid>
      <description>Overview This is a Google Apps Script for notifying with email when Netatmo was down.
Description I&#39;m measuring the surrounding environment using Netatmo. There were little that my Netatmo was down so far. But recently, my Netatmo is sometimes down. It is considered that the reason is due to the thermal runaway, because the recent Japan is very hot. When Netatmo was down, users can know it by logging in using the browser and/or running the mobile application.</description>
    </item>
    
    <item>
      <title>Retrieve Last of Specific Row and Column</title>
      <link>https://tanaikech.github.io/2018/07/16/retrieve-last-of-specific-row-and-column/</link>
      <pubDate>Mon, 16 Jul 2018 12:59:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/16/retrieve-last-of-specific-row-and-column/</guid>
      <description>Gists
This is a sample script for retrieving the last coordinate of the specific row and column. When the methods of getLastRow() and getLastColumn() of Class Range for Spreadsheet are used, the last coordinates of the vertical and horizontal data range can be retrieved. When users want to retrieve the last coordinates of each row and column, there are no methods. So I created this script. I think that there are several scripts for this situation.</description>
    </item>
    
    <item>
      <title>Notifying Comments at Stackoverflow by Email using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/13/notifying-comments-at-stackoverflow-by-email-using-google-apps-script/</link>
      <pubDate>Fri, 13 Jul 2018 16:32:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/13/notifying-comments-at-stackoverflow-by-email-using-google-apps-script/</guid>
      <description>This is a script for sending an email when users got comments at Stackoverflow. I had wished I could get an email when I got a comment at Stackoverflow. Although I investigated about this, it seems that I can get the email every 3 hours. For this situation, I wished I could get it much earlier. I thought that this can be achieved using GAS and Stack Exchange API. So I created this script.</description>
    </item>
    
    <item>
      <title>Adding Query Parameters to URL using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/12/adding-query-parameters-to-url-using-google-apps-script/</link>
      <pubDate>Thu, 12 Jul 2018 08:53:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/12/adding-query-parameters-to-url-using-google-apps-script/</guid>
      <description>Gists
This is for adding the query parameters to the URL. This sample script is prepared by ES5. So this can be also used for Javascript. When I created an endpoint with some query parameters, I had used the scripts of various patterns every time. Today, I prepared this sample script to unify them. If this is also useful for you, I&#39;m glad.
Sample script : String.prototype.addQuery = function(obj) {return this + Object.</description>
    </item>
    
    <item>
      <title>Benchmark: Conditional Branch using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/11/benchmark-conditional-branch-using-google-apps-script/</link>
      <pubDate>Wed, 11 Jul 2018 13:36:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/11/benchmark-conditional-branch-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Conditional Branch using Google Apps Script Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2018/07/11/updated-gas-library-manifestsapp/</link>
      <pubDate>Wed, 11 Jul 2018 11:03:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/11/updated-gas-library-manifestsapp/</guid>
      <description>ManifestsApp was updated to v1.0.3.
  v1.0.3 (July 11, 2018)
 By Google&#39;s update, &amp;ldquo;sheets&amp;rdquo; was added to manifests for installing the configuration of Macro. By this, this library was updated.  You can see the added methods (getSheets(), setSheets()) at Usage. If you set &amp;ldquo;sheets&amp;rdquo;, please put the value of &amp;ldquo;sheets&amp;rdquo; as the resource like below sample.  {&amp;quot;macros&amp;quot;: [{&amp;quot;menuName&amp;quot;: &amp;quot;QuickRowSum&amp;quot;, &amp;quot;functionName&amp;quot;: &amp;quot;calculateRowSum&amp;quot;}]} Don&#39;t put {&amp;quot;sheets&amp;quot;: {&amp;quot;macros&amp;quot;: [{&amp;quot;menuName&amp;quot;: &amp;quot;QuickRowSum&amp;quot;, &amp;quot;functionName&amp;quot;: &amp;quot;calculateRowSum&amp;quot;}]}}        **You can check this at https://github.</description>
    </item>
    
    <item>
      <title>Limitation of Images for Inserting to Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/10/limitation-of-images-for-inserting-to-spreadsheet-using-google-apps-script/</link>
      <pubDate>Tue, 10 Jul 2018 08:51:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/10/limitation-of-images-for-inserting-to-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Introduction Here I would like to introduce about the limitation of images for inserting to Spreadsheet using Google Apps Script (GAS). When you want to insert the images to Spreadsheet using GAS, insertImage() of class Sheet is usually used for this situation. At this time, an error sometimes occurs. This indicates that there is the limitation for inserting images to Spreadsheet. So I investigated the limitation.
As a result, it was found that the limitation depends on the image area (pixels^2) rather than the file size of it.</description>
    </item>
    
    <item>
      <title>Taking Advantage of Google Apps Script (Tanaike&#39;s list)</title>
      <link>https://tanaikech.github.io/2018/07/09/taking-advantage-of-google-apps-script-tanaikes-list/</link>
      <pubDate>Mon, 09 Jul 2018 09:30:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/09/taking-advantage-of-google-apps-script-tanaikes-list/</guid>
      <description>Here, CLI tools, libraries, Add-ons, Reports, Benchmarks and Sample Scripts for taking advantage of Google Apps Script which are publishing in my blog, Gists and GitHub are summarized. If these are useful for you, I&#39;m glad.
**You can check this at https://github.</description>
    </item>
    
    <item>
      <title>Retrieving Number of Lines of Google Document</title>
      <link>https://tanaikech.github.io/2018/07/09/retrieving-number-of-lines-of-google-document/</link>
      <pubDate>Mon, 09 Jul 2018 09:02:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/09/retrieving-number-of-lines-of-google-document/</guid>
      <description>Gists
There are no prepared methods for retrieving the number of lines in the Google Document. So I thought this workaround. If the end of each line can be detected, the number of lines can be retrieved. So I tried to add the end markers of each line using OCR.
At Google Documents, when a sentence is over the page width, the sentence automatically has the line break. But the line break has no \r\n or \n.</description>
    </item>
    
    <item>
      <title>Benchmark: Search for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/02/benchmark-search-for-array-processing-using-google-apps-script/</link>
      <pubDate>Mon, 02 Jul 2018 08:55:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/02/benchmark-search-for-array-processing-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Search for Array Processing using Google Apps Script Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Resumable Conversion from CSV File with Large Size (&gt; 50 MB) to Several Spreadsheets by Splitting File</title>
      <link>https://tanaikech.github.io/2018/06/26/resumable-conversion-from-csv-file-with-large-size-50-mb-to-several-spreadsheets-by-splitting-file/</link>
      <pubDate>Tue, 26 Jun 2018 13:00:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/26/resumable-conversion-from-csv-file-with-large-size-50-mb-to-several-spreadsheets-by-splitting-file/</guid>
      <description>Gists
Overview This is a sample script which can achieve the resumable conversion from the large CSV-file to several spreadsheets by splitting the CSV file using Google Apps Script (GAS).
Description Is there a situation that you want to convert a CSV file with the large size (&amp;gt; 50 MB) to Spreadsheet? When such large CSV file is converted to Spreadsheet, you will experience the error. The reason is the size and/or also it may be due to the total cells (&amp;gt; 2,000,000 cells) of CSV file.</description>
    </item>
    
    <item>
      <title>Cryptopia API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/06/25/cryptopia-api-for-google-apps-script/</link>
      <pubDate>Mon, 25 Jun 2018 08:48:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/25/cryptopia-api-for-google-apps-script/</guid>
      <description>Gists
By the Google’s update at June 19, 2018, finally, Utilities.computeDigest(), Utilities.computeHmacSha256Signature() and Utilities.computeHmacSignature() got to be able to use the byte arrays. By this, using only native Google Apps Script, the result can be retrieved without using jsSHA. So Cryptopia API can be created using only Google Apps Script. If this is useful for you, I&#39;m glad.
Sample script : When you use this, at first, please input the requiring values.</description>
    </item>
    
    <item>
      <title>About Updated Utilities.computeHmacSignature()</title>
      <link>https://tanaikech.github.io/2018/06/24/about-updated-utilities.computehmacsignature/</link>
      <pubDate>Sun, 24 Jun 2018 17:11:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/24/about-updated-utilities.computehmacsignature/</guid>
      <description>Gists
By the Google&#39;s update at June 19, 2018, finally, Utilities.computeDigest(), Utilities.computeHmacSha256Signature() and Utilities.computeHmacSignature() got to be able to use the byte arrays. By this, using only native Google Apps Script, the result can be retrieved without using jsSHA. When I used the updated them, the response speed is much faster than that of jsSHA. It is considered that this may be optimized for Google Apps Script. As a sample, it shows 2 samples as follows.</description>
    </item>
    
    <item>
      <title>GAS Library - FilesApp</title>
      <link>https://tanaikech.github.io/2018/06/15/gas-library-filesapp/</link>
      <pubDate>Fri, 15 Jun 2018 10:32:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/15/gas-library-filesapp/</guid>
      <description>Overview FilesApp is a GAS library for retrieving file and folder list in Google Drive using Google Apps Script (GAS). Also this can create a tree from all files and folders in Google Drive.
Description When I create some applications using Google Drive, there are often the case which is required to retrieve the file list and folder list. I had prepared the script each time for each case so far.</description>
    </item>
    
    <item>
      <title>Retrieving a Key with Maximum Value from Object</title>
      <link>https://tanaikech.github.io/2018/06/15/retrieving-a-key-with-maximum-value-from-object/</link>
      <pubDate>Fri, 15 Jun 2018 08:22:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/15/retrieving-a-key-with-maximum-value-from-object/</guid>
      <description>Gists
This sample script is for retrieving a key with the maximum value from an object. This can be also used by Google Apps Script.
var obj = {&amp;#34;a&amp;#34;: 5, &amp;#34;b&amp;#34;: 4, &amp;#34;c&amp;#34;: 3, &amp;#34;d&amp;#34;: 2, &amp;#34;e&amp;#34;: 1};var res = Object.keys(obj).reduce(function(a, c) {return obj[a] &amp;gt; obj[c] ? a : c;});Logger.log(res); // &amp;gt;&amp;gt;&amp;gt; a</description>
    </item>
    
    <item>
      <title>Retrieving Reformatted Scripts without Comments in a Project using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/28/retrieving-reformatted-scripts-without-comments-in-a-project-using-google-apps-script/</link>
      <pubDate>Mon, 28 May 2018 12:55:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/28/retrieving-reformatted-scripts-without-comments-in-a-project-using-google-apps-script/</guid>
      <description>Gists
Overview This is a sample script for easily retrieving the reformatted scripts without comments in a project using Google Apps Script (GAS).
Description When I create GAS script, if the format of script is not correct, the script editor lets me know about it. By this, I can find that the script editor and/or Google Drive checks the format of scripts. I had wished if I could use this function.</description>
    </item>
    
    <item>
      <title>Remove Third-party Apps with Account Access using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</link>
      <pubDate>Wed, 23 May 2018 15:51:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</guid>
      <description>Gists
Overview This is a method for removing Third-party Apps with Account Access using a script.
Demo Description When users create a script in a project and run the script, if the methods which are required to use scopes are included, users have to authorize to use the scopes using the browser. By authorizing it, users can use the script. The authorized projects can be seen at Third-party Apps with Account Access.</description>
    </item>
    
    <item>
      <title>Resumable Upload for Web Apps using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/17/resumable-upload-for-web-apps-using-google-apps-script/</link>
      <pubDate>Thu, 17 May 2018 16:48:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/17/resumable-upload-for-web-apps-using-google-apps-script/</guid>
      <description>News   At October 11, 2019, I published a Javascript library to to run the resumable upload for Google Drive. When this is used, the large file can be uploaded. You can also use this js library.
 Resumable Upload of Multiple Files with Asynchronous Process for Google Drive    Overview This is a sample script for uploading files with large size (&amp;gt; 50 MB) at Web Apps using Google Apps Script (GAS).</description>
    </item>
    
    <item>
      <title>Retrieve Difference Between 2 Dimensional Arrays using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/07/retrieve-difference-between-2-dimensional-arrays-using-google-apps-script/</link>
      <pubDate>Mon, 07 May 2018 09:41:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/07/retrieve-difference-between-2-dimensional-arrays-using-google-apps-script/</guid>
      <description>Gists
This sample script retrieves the difference elements between 2 dimensional arrays using Google Apps Script. In Google Apps Script, 2 dimensional arrays are often used at Google Docs and Google APIs. And from my recent report, it has already found that the process cost of filter() is the lowest in the other loop methods. So I use the script like this.
var ar1 = [[&amp;#34;a1&amp;#34;, &amp;#34;b1&amp;#34;, &amp;#34;c1&amp;#34;], [&amp;#34;a2&amp;#34;, &amp;#34;b2&amp;#34;, &amp;#34;c2&amp;#34;], [&amp;#34;a3&amp;#34;, &amp;#34;b3&amp;#34;, &amp;#34;c3&amp;#34;], [&amp;#34;a4&amp;#34;, &amp;#34;b4&amp;#34;, &amp;#34;c4&amp;#34;], [&amp;#34;a5&amp;#34;, &amp;#34;b5&amp;#34;, &amp;#34;c5&amp;#34;]];var ar2 = [[&amp;#34;a2&amp;#34;, &amp;#34;b2&amp;#34;, &amp;#34;c2&amp;#34;], [&amp;#34;a5&amp;#34;, &amp;#34;b5&amp;#34;, &amp;#34;c5&amp;#34;], [&amp;#34;a1&amp;#34;, &amp;#34;b2&amp;#34;, &amp;#34;c3&amp;#34;]];var res = ar1.</description>
    </item>
    
    <item>
      <title>GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2018/05/02/gas-library-batchrequest/</link>
      <pubDate>Wed, 02 May 2018 15:55:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/02/gas-library-batchrequest/</guid>
      <description>Overview This is a library for running Batch Requests using Google Apps Script (GAS).
Description When users use Google&#39;s APIs, one quota is used for one API call. When the batch request is used, several APIs can be called by one quota, although there are some limitations in the batch request. For example, in GAS, Drive API can be used be DriveApp. In this case, the quota is not used for using Drive API.</description>
    </item>
    
    <item>
      <title>CLEAN method for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/27/clean-method-for-google-apps-script/</link>
      <pubDate>Fri, 27 Apr 2018 09:11:40 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/27/clean-method-for-google-apps-script/</guid>
      <description>Gists
This is a sample script which works the same action with the CLEAN method of VBA. The CLEAN method of VBA removes the characters of 0-31, 127, 129, 141, 143, 144, 157. Although I had looked for such method for Google Apps Script, I couldn&#39;t find it. So I created this. If this is useful for you, I&#39;m glad.
function cleanForGAS(str) {if (typeof str == &amp;#34;string&amp;#34;) {var escaped = escape(str.</description>
    </item>
    
    <item>
      <title>Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Thu, 26 Apr 2018 08:35:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>Overview This is a report to take advantage of Web Apps with Google Apps Script (GAS).
Description There is Web Apps as one of applications using Google Apps Script (GAS). I sometimes use this Web Apps. But I have only a little the information for the specification of Web Apps. So in order to take more advantage of Web Apps, I investigated and summarized about this. The aim of this report is to become one of the basic information for creating various applications using Web Apps with GAS.</description>
    </item>
    
    <item>
      <title>Retrieves All Named Ranges in Spreadsheet as a1Notation</title>
      <link>https://tanaikech.github.io/2018/04/25/retrieves-all-named-ranges-in-spreadsheet-as-a1notation/</link>
      <pubDate>Wed, 25 Apr 2018 11:34:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/25/retrieves-all-named-ranges-in-spreadsheet-as-a1notation/</guid>
      <description>Gists
This is a sample script for Google Apps Script (GAS). This script retrieves all named ranges in Spreadsheet. The names and range of the retrieved named ranges are output as the keys and the values of JSON object, respectively. The sample output is {&amp;quot;name1&amp;quot;: &amp;quot;Sheet1!A1:B2&amp;quot;, &amp;quot;name2&amp;quot;: &amp;quot;Sheet2!B1:C2&amp;quot;,,,}. The name of named range has to be only one in the spreadsheet. This was used.
Sheets.Spreadsheets.get() of Sheets API can retrieve all named ranges.</description>
    </item>
    
    <item>
      <title>GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2018/04/24/gas-library-runall/</link>
      <pubDate>Tue, 24 Apr 2018 08:45:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/24/gas-library-runall/</guid>
      <description>Overview This is a library for running the concurrent processing using only native Google Apps Script (GAS).
Description Have you ever thought about the concurrent processing using only native Google Apps Script (GAS)? So far, I had run the concurrent processing using golang, javascript and python. But the script cannot be used by the trigger event, because these are not native GAS. Recently, it was found that the fetchAll method added by the Google&#39;s update at January 19, 2018 is worked by the asynchronous processing.</description>
    </item>
    
    <item>
      <title>Benchmark: fetchAll method in UrlFetch service for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/19/benchmark-fetchall-method-in-urlfetch-service-for-google-apps-script/</link>
      <pubDate>Thu, 19 Apr 2018 14:24:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/19/benchmark-fetchall-method-in-urlfetch-service-for-google-apps-script/</guid>
      <description>Gists
By Google&#39;s update at January 19, 2018, fetchAll method was added to the UrlFetch service. When I saw the usage, I couldn&#39;t find the detail information about the actual running state. So I investigated about it.
As the result, it was found that the fetchAll method is worked by the asynchronous processing. The returned data is reordered by the order of requests. By this, it was also found that if you want to retrieve the data from the several URL, the process cost of UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Benchmark: Loop for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/16/benchmark-loop-for-array-processing-using-google-apps-script/</link>
      <pubDate>Mon, 16 Apr 2018 08:27:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/16/benchmark-loop-for-array-processing-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Loop for Array Processing using Google Apps Script July 26, 2018 Updated. Result of reduce was added.
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Benchmark: Event Objects for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/14/benchmark-event-objects-for-google-apps-script/</link>
      <pubDate>Sat, 14 Apr 2018 14:45:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/14/benchmark-event-objects-for-google-apps-script/</guid>
      <description>Gists
Introduction There are event objects at Google Apps Script. Typically, users which use Spreadsheet often use onEdit(event). Here, I would like to introduce the process costs for the event objects using this onEdit(event).
When onEdit(event) is used for the spreadsheet, event of onEdit(event) has the following structure.
{&amp;#34;authMode&amp;#34;: {},&amp;#34;range&amp;#34;: {&amp;#34;columnStart&amp;#34;: 1,&amp;#34;rowStart&amp;#34;: 1,&amp;#34;rowEnd&amp;#34;: 1,&amp;#34;columnEnd&amp;#34;: 1},&amp;#34;source&amp;#34;: {},&amp;#34;oldValue&amp;#34;: &amp;#34;old sample text&amp;#34;,&amp;#34;user&amp;#34;: {&amp;#34;nickname&amp;#34;: &amp;#34;sampleName&amp;#34;,&amp;#34;email&amp;#34;: &amp;#34;sample email&amp;#34;},&amp;#34;value&amp;#34;: &amp;#34;sample text&amp;#34;}In this structure, for example, the range of active cell is &amp;quot;range&amp;quot;: {&amp;quot;columnStart&amp;quot;: 1, &amp;quot;rowStart&amp;quot;: 1, &amp;quot;rowEnd&amp;quot;: 1, &amp;quot;columnEnd&amp;quot;: 1 }.</description>
    </item>
    
    <item>
      <title>Unicode normalization using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/03/16/unicode-normalization-using-google-apps-script/</link>
      <pubDate>Fri, 16 Mar 2018 12:41:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/03/16/unicode-normalization-using-google-apps-script/</guid>
      <description>Overview This is a script for converting strings from NFD (Normalization Form Decomposition) to NFC (Normalization Form Composition) using Google Apps Script. Description Here, I would like to introduce a script for the unicode normalization using Google Apps Script. There are the characters with ゙ which is the voiced dot and the characters with ゚ which is the semi-voiced dot in Japanese language. When these are used for some applications,</description>
    </item>
    
    <item>
      <title>Updated Add-on - RearrangeScripts to v211</title>
      <link>https://tanaikech.github.io/2018/03/02/updated-add-on-rearrangescripts-to-v211/</link>
      <pubDate>Fri, 02 Mar 2018 14:13:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/03/02/updated-add-on-rearrangescripts-to-v211/</guid>
      <description>RearrangeScripts was updated to v2.1.1   v2.1.1 (Match 2, 2018)
 Added a notification to turn on the switch for using Google Apps Script API.  This was reported to issuetracker. https://issuetracker.google.com/issues/74048155 Acknowledgements: Alan Wells       Add-on GitHub  </description>
    </item>
    
    <item>
      <title>Transposing JSON Object using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/02/25/transposing-json-object-using-google-apps-script/</link>
      <pubDate>Sun, 25 Feb 2018 16:22:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/25/transposing-json-object-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for transposing JSON object using Google Apps Script.
Input data : [{&amp;#34;key1&amp;#34;:&amp;#34;a1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;a2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;a3&amp;#34;,&amp;#34;key4&amp;#34;:&amp;#34;a4&amp;#34;,&amp;#34;key5&amp;#34;:&amp;#34;a5&amp;#34;},{&amp;#34;key1&amp;#34;:&amp;#34;b1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;b2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;b3&amp;#34;,&amp;#34;key4&amp;#34;:&amp;#34;b4&amp;#34;,&amp;#34;key5&amp;#34;:&amp;#34;b5&amp;#34;},{&amp;#34;key1&amp;#34;:&amp;#34;c1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;c2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;c3&amp;#34;,&amp;#34;key4&amp;#34;:&amp;#34;c4&amp;#34;,&amp;#34;key5&amp;#34;:&amp;#34;c5&amp;#34;},{&amp;#34;key1&amp;#34;:&amp;#34;d1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;d2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;d3&amp;#34;,&amp;#34;key4&amp;#34;:&amp;#34;d4&amp;#34;,&amp;#34;key5&amp;#34;:&amp;#34;d5&amp;#34;},{&amp;#34;key1&amp;#34;:&amp;#34;e1&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;e2&amp;#34;,&amp;#34;key3&amp;#34;:&amp;#34;e3&amp;#34;,&amp;#34;key4&amp;#34;:&amp;#34;e4&amp;#34;,&amp;#34;key5&amp;#34;:&amp;#34;e5&amp;#34;}]Output data : {&amp;#34;key1&amp;#34;: [&amp;#34;a1&amp;#34;, &amp;#34;b1&amp;#34;, &amp;#34;c1&amp;#34;, &amp;#34;d1&amp;#34;, &amp;#34;e1&amp;#34;],&amp;#34;key2&amp;#34;: [&amp;#34;a2&amp;#34;, &amp;#34;b2&amp;#34;, &amp;#34;c2&amp;#34;, &amp;#34;d2&amp;#34;, &amp;#34;e2&amp;#34;],&amp;#34;key3&amp;#34;: [&amp;#34;a3&amp;#34;, &amp;#34;b3&amp;#34;, &amp;#34;c3&amp;#34;, &amp;#34;d3&amp;#34;, &amp;#34;e3&amp;#34;],&amp;#34;key4&amp;#34;: [&amp;#34;a4&amp;#34;, &amp;#34;b4&amp;#34;, &amp;#34;c4&amp;#34;, &amp;#34;d4&amp;#34;, &amp;#34;e4&amp;#34;],&amp;#34;key5&amp;#34;: [&amp;#34;a5&amp;#34;, &amp;#34;b5&amp;#34;, &amp;#34;c5&amp;#34;, &amp;#34;d5&amp;#34;, &amp;#34;e5&amp;#34;]}Script : At first, keys have to be defined by yourself, because the order of json is not decided.</description>
    </item>
    
    <item>
      <title>Open Site with New Window using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/02/20/open-site-with-new-window-using-google-apps-script/</link>
      <pubDate>Tue, 20 Feb 2018 10:04:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/20/open-site-with-new-window-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for opening a site with new window using Google Apps Script. It is possible to open the site inside the opened dialog box using iframe. But in my situation, I had to open the site as new window. So I created this. As a sample application, it can think of like this. When the special keyword was inputted, open sites and files in Google Drive as a help window.</description>
    </item>
    
    <item>
      <title>Add-on - ShapeApp was featured</title>
      <link>https://tanaikech.github.io/2018/02/15/add-on-shapeapp-was-featured/</link>
      <pubDate>Thu, 15 Feb 2018 12:59:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/15/add-on-shapeapp-was-featured/</guid>
      <description>At February 15th, 2018, ShapeApp was featured as one of &amp;ldquo;4 useful add-ons launched last month&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v141</title>
      <link>https://tanaikech.github.io/2018/02/09/updated-ggsrun-to-v141/</link>
      <pubDate>Fri, 09 Feb 2018 12:37:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/09/updated-ggsrun-to-v141/</guid>
      <description>ggsrun was updated to v.1.4.1  v1.4.1 (February 9, 2018)  For uploading, the resumable-upload method was added.  The resumable-upload method is automatically used by the size of file.  &amp;ldquo;multipart/form-data&amp;rdquo; can upload files with the size less than 5 MB. &amp;ldquo;resumable-upload&amp;rdquo; can upload files with the size more than 5 MB.   The chunk for resumable-upload is 100 MB as the default.  Users can also give this chunk size using an option.</description>
    </item>
    
    <item>
      <title>Updated Add-on - RearrangeScripts to v210</title>
      <link>https://tanaikech.github.io/2018/02/03/updated-add-on-rearrangescripts-to-v210/</link>
      <pubDate>Sat, 03 Feb 2018 16:58:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/03/updated-add-on-rearrangescripts-to-v210/</guid>
      <description>  v2.1.0 (February 3, 2018)
 From this version, it got to be able to use the projects of both standalone script type and container-bound script type.     Add-on GitHub  </description>
    </item>
    
    <item>
      <title>Adding a Label to a Message using Message ID for Gmail</title>
      <link>https://tanaikech.github.io/2018/02/03/adding-a-label-to-a-message-using-message-id-for-gmail/</link>
      <pubDate>Sat, 03 Feb 2018 10:03:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/03/adding-a-label-to-a-message-using-message-id-for-gmail/</guid>
      <description>Gists
These are sample scripts for adding a label to a message using message ID for Gmail.
Sample 1 This sample adds a label to a thread using message ID. In this case, all messages in the thread have the label. Even if it adds a label to a message in the thread using addLabel(), all messages in the thread have the label, becauce addLabel can only be used for the thread.</description>
    </item>
    
    <item>
      <title>How to Retrieve Replied Emails for Gmail</title>
      <link>https://tanaikech.github.io/2018/02/01/how-to-retrieve-replied-emails-for-gmail/</link>
      <pubDate>Thu, 01 Feb 2018 10:46:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/01/how-to-retrieve-replied-emails-for-gmail/</guid>
      <description>Gists
Description : This sample script is for retrieving emails which replied for received mails. Because there are no samples which confirm whether the owner (me) replied to the received mails, I created this. The point is as follows.
 When there are more than 2 messages in a thread, there might be a possibility to have replied. For more than 2 messages in a thread  The email address of &amp;ldquo;from&amp;rdquo; for the 1st message is the sender&#39;s address.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2018/01/29/updated-gas-library-manifestsapp/</link>
      <pubDate>Mon, 29 Jan 2018 13:05:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/29/updated-gas-library-manifestsapp/</guid>
      <description>ManifestsApp was updated to v1.0.2.
  v1.0.2 (January 29, 2018)
 ProjectApp2 is published, and got to be able to use both standalone script type and container-bound script type.  By this, this library also got to be able to be used for the both projects.   For this update, please enable Apps Script API.  Please check &amp;ldquo;How to install&amp;rdquo;.      **You can check this at https://github.</description>
    </item>
    
    <item>
      <title>GAS Library - ProjectApp2</title>
      <link>https://tanaikech.github.io/2018/01/29/gas-library-projectapp2/</link>
      <pubDate>Mon, 29 Jan 2018 13:01:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/29/gas-library-projectapp2/</guid>
      <description>Overview This is a GAS project library for Google Apps Script (GAS). This library can be used for the projects of both standalone script type and container-bound script type.
Description There are Class SpreadsheetApp and Class DocumentApp for operating spreadsheet and document, respectively. But there is no Class for operating GAS project. If there is such Class ProjectApp, GAS project can be directly operated by GAS script. I thought that this will lead to new applications, and created ProjectApp.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v140</title>
      <link>https://tanaikech.github.io/2018/01/25/updated-ggsrun-to-v140/</link>
      <pubDate>Thu, 25 Jan 2018 08:16:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/25/updated-ggsrun-to-v140/</guid>
      <description>ggsrun was updated to v.1.4.0   v1.4.0 (January 25, 2018)
Google Apps Script API was finally released. From this version, ggsrun uses this API. So ggsrun got to be able to use not only projects of standalone script type, but also projects of container-bound script type. I hope this updated ggsrun will be useful for you.
 To users which are using ggsrun with v1.3.4 and/or less. For retrieving, downloading, creating and updating projects, Apps Script API is used.</description>
    </item>
    
    <item>
      <title>Copying and Overwriting GAS Project</title>
      <link>https://tanaikech.github.io/2018/01/20/copying-and-overwriting-gas-project/</link>
      <pubDate>Sat, 20 Jan 2018 11:18:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/20/copying-and-overwriting-gas-project/</guid>
      <description>Gists
Pattern 1 This is a sample script for copying GAS project to a container-bound script of Google Docs (Spreadsheet, Document and Form (and Slides)). The project is created as a new project.
In order to use this sample, please do the following installation flow.
If you use this sample script, at first, please test using a new project and new Google Docs. By this, please understand the work of this script.</description>
    </item>
    
    <item>
      <title>Batching Requests for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/19/batching-requests-for-google-apps-script/</link>
      <pubDate>Fri, 19 Jan 2018 09:38:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/19/batching-requests-for-google-apps-script/</guid>
      <description>Gists
There is the bathing requests in the Google APIs. The bathing requests can use the several API calls as a single HTTP request. By using this, for example, users can modify filenames of a lot of files on Google Drive. But there are limitations for the number of API calls which can process in one batch request. For example, Drive API can be used the maximum of 100 calls in one batch request.</description>
    </item>
    
    <item>
      <title>Zaif API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/15/zaif-api-for-google-apps-script/</link>
      <pubDate>Mon, 15 Jan 2018 09:47:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/15/zaif-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is for using Zaif API by Google Apps Script.
The following go script is a sample at Zaif API.
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;time&amp;quot;&amp;quot;strconv&amp;quot;&amp;quot;crypto/hmac&amp;quot;&amp;quot;crypto/sha512&amp;quot;&amp;quot;io/ioutil&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;encoding/hex&amp;quot;&amp;quot;net/url&amp;quot;&amp;quot;strings&amp;quot;)var key = &amp;quot;&amp;lt;your_key&amp;gt;&amp;quot;var secret = &amp;quot;&amp;lt;your_secret&amp;gt;&amp;quot;func main() {uri := &amp;quot;https://api.zaif.jp/tapi&amp;quot;values := url.Values{}values.Add(&amp;quot;method&amp;quot;, &amp;quot;get_info&amp;quot;)values.Add(&amp;quot;nonce&amp;quot;, strconv.FormatInt(time.Now().Unix(), 10))encodedParams := values.Encode()req, _ := http.NewRequest(&amp;quot;POST&amp;quot;, uri, strings.NewReader(encodedParams))hash := hmac.</description>
    </item>
    
    <item>
      <title>Bittrex API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/12/bittrex-api-for-google-apps-script/</link>
      <pubDate>Fri, 12 Jan 2018 10:23:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/12/bittrex-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is for using Bittrex API by Google Apps Script.
The following PHP script is a sample at bittrex.com.
$apikey=&amp;#39;xxx&amp;#39;;$apisecret=&amp;#39;xxx&amp;#39;;$nonce=time();$uri=&amp;#39;https://bittrex.com/api/v1.1/market/getopenorders?apikey=&amp;#39;.$apikey.&amp;#39;&amp;amp;nonce=&amp;#39;.$nonce;$sign=hash_hmac(&amp;#39;sha512&amp;#39;,$uri,$apisecret);$ch = curl_init($uri);curl_setopt($ch, CURLOPT_HTTPHEADER, array(&amp;#39;apisign:&amp;#39;.$sign));$execResult = curl_exec($ch);$obj = json_decode($execResult);When this is converted to GAS, the script is as follows.
function main() {var apikey = &amp;#39;#####&amp;#39;; // Please input your key. var apisecret = &amp;#39;#####&amp;#39;; // Please input your secret.</description>
    </item>
    
    <item>
      <title>Binance API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/01/12/binance-api-for-google-apps-script/</link>
      <pubDate>Fri, 12 Jan 2018 07:18:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/12/binance-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is for using Binance API by Google Apps Script. This script encryptes &amp;ldquo;signature&amp;rdquo; like samples. In this script, &amp;ldquo;Example 1: As a query string&amp;rdquo; is used, and it retrieves &amp;ldquo;All orders (SIGNED)&amp;rdquo; by &amp;ldquo;GET&amp;rdquo;.
function main() {var key = &amp;#39;#####&amp;#39;; // Please input your key. var secret = &amp;#39;#####&amp;#39;; // Please input your secret. var api = &amp;#34;/api/v3/allOrders&amp;#34;; // Please input API Endpoint you want.</description>
    </item>
    
    <item>
      <title>Add-on - ShapeApp</title>
      <link>https://tanaikech.github.io/2018/01/06/add-on-shapeapp/</link>
      <pubDate>Sat, 06 Jan 2018 16:24:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/06/add-on-shapeapp/</guid>
      <description>ShapeApp for Google Slides was published as an add-on application When you use Google Slides, have you ever thought about creating and updating shapes on Slides by inputting parameters, and arranging selected shapes? I have thought about them. Recently, since Class SlidesApp was added to GAS, it came to be able to easily to create various applications for Slides. So I created this. This application is add-on application which was made of GAS.</description>
    </item>
    
    <item>
      <title>Which of Drive API v2 or v3 is used for DriveApp.searchFiles()</title>
      <link>https://tanaikech.github.io/2018/01/05/which-of-drive-api-v2-or-v3-is-used-for-driveapp.searchfiles/</link>
      <pubDate>Fri, 05 Jan 2018 16:48:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/05/which-of-drive-api-v2-or-v3-is-used-for-driveapp.searchfiles/</guid>
      <description>Gists
Experiment It has investigated the differences between the documents of &amp;ldquo;Search for Files&amp;rdquo; for v2 and v3. The following table shows the comparison of v2 and v3 for &amp;ldquo;Valid fields for files.list&amp;rdquo;. The column of DriveApp.searchFiles() means whether the query can be used for DriveApp.searchFiles().
   v2 v3 Difference DriveApp.searchFiles()     title name different v2: succeed, v3: fail   fullText fullText same    mimeType mimeType same    modifiedDate modifiedTime same    lastViewedByMeDate viewedByMeTime different v2: succeed, v3: fail   trashed trashed same    starred starred same    parents parents same    owners owners same    writers writers same    readers readers same    sharedWithMe sharedWithMe same    properties properties same    properties with visibility=&#39;PRIVATE&amp;rsquo; appProperties different v2: succeed, v3: fail   visibility visibility same     Result As the result, it is considered that DriveApp.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v134</title>
      <link>https://tanaikech.github.io/2018/01/02/updated-ggsrun-to-v134/</link>
      <pubDate>Tue, 02 Jan 2018 14:32:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/02/updated-ggsrun-to-v134/</guid>
      <description>ggsrun was updated to v.1.3.4   v1.3.4 (January 2, 2018)
 Added new option for downloading &amp;lsquo;bound-scripts&amp;rsquo; of Google Sheets, Docs, or Forms file.  When the bound-scripts are downloaded, the project name cannot be retrieved because Drive API cannot be used for the bound-scripts. So when the bound-scripts are downloaded, the project ID had been used previously. Such filename is not easily to be seen. By this additional option, users can give the filename when it downloads the bound-scripts.</description>
    </item>
    
    <item>
      <title>IssueTracker: Bug for scopes of Slides</title>
      <link>https://tanaikech.github.io/2017/12/31/issuetracker-bug-for-scopes-of-slides/</link>
      <pubDate>Sun, 31 Dec 2017 17:11:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/31/issuetracker-bug-for-scopes-of-slides/</guid>
      <description>I have reported because I found a bug for scopes of Slides. The detail is the following URL.
https://issuetracker.google.com/issues/71448583</description>
    </item>
    
    <item>
      <title>Bitfinex API for Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/12/31/bitfinex-api-for-google-apps-script/</link>
      <pubDate>Sun, 31 Dec 2017 10:47:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/31/bitfinex-api-for-google-apps-script/</guid>
      <description>Gists
This sample script is converted this sample script (javascript) to Google Apps Script. The point for converting is signature as shown in the following sample script.
 At Bitfinex API, after &amp;quot;/api/&amp;quot; + apiPath + nonce + rawBody is encrypted using HMAC SHA-384, the data of byte array is converted to HEX.  In Google Apps Script, there is no the method for this. The data which was encrypted by Utilities.</description>
    </item>
    
    <item>
      <title>Updated Add-on - RearrangeScripts to v201</title>
      <link>https://tanaikech.github.io/2017/12/28/updated-add-on-rearrangescripts-to-v201/</link>
      <pubDate>Thu, 28 Dec 2017 08:14:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/28/updated-add-on-rearrangescripts-to-v201/</guid>
      <description>RearrangeScripts was updated. Added &amp;ldquo;About&amp;rdquo; to the menu of add-on. By this, users can see the help document easily.
 Add-on GitHub  </description>
    </item>
    
    <item>
      <title>Automatic Recalculation of Custom Function on Spreadsheet Part 1</title>
      <link>https://tanaikech.github.io/2017/12/23/automatic-recalculation-of-custom-function-on-spreadsheet-part-1/</link>
      <pubDate>Sat, 23 Dec 2017 09:59:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/23/automatic-recalculation-of-custom-function-on-spreadsheet-part-1/</guid>
      <description>Gists
In this report, I would like to introduce a workaround for automatically recalculating custom functions on Spreadsheet.
1. Situation The sample situation is below. This is a sample situation for this document.
 There are 3 sheets with &amp;ldquo;sheet1&amp;rdquo;, &amp;ldquo;sheet2&amp;rdquo; and &amp;ldquo;sheet3&amp;rdquo; of sheet name in a Spreadsheet. Calculate the summation of values of &amp;ldquo;A1&amp;rdquo; of each sheet using a custom function. Sample script of the custom function is as follows.</description>
    </item>
    
    <item>
      <title>Add-on - RearrangeScripts</title>
      <link>https://tanaikech.github.io/2017/12/20/add-on-rearrangescripts/</link>
      <pubDate>Wed, 20 Dec 2017 10:28:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/20/add-on-rearrangescripts/</guid>
      <description>RearrangeScripts was published as an add-on application Recently, I have reported RearrangeScripts for rearranging scripts in a GAS project. At that time, I got messages and mails from many developers. They said that you should publish this as an add-on. So, this was released. Now you can search &amp;ldquo;RearrangeScripts&amp;rdquo; as an add-on for Spreadsheet. If this is helpful for you, I&#39;m happy.
 Add-on GitHub  Demo </description>
    </item>
    
    <item>
      <title>Difference Between Given Values and Retrieved Values for Shapes on Google Slides</title>
      <link>https://tanaikech.github.io/2017/12/15/difference-between-given-values-and-retrieved-values-for-shapes-on-google-slides/</link>
      <pubDate>Fri, 15 Dec 2017 16:56:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/15/difference-between-given-values-and-retrieved-values-for-shapes-on-google-slides/</guid>
      <description>Gists
This is a document for explaining the difference between given values and retrieved values for shapes on Google Slides. When a shape is created to a slide using Slides API, most users give the size of height and width as pt. When the size is retrieved from the created shape as pt, the size is often difference from the given size.
For example, when a square shape is created by giving the height and width of 100 pt, the size which is retrieved from the created square becomes 99.</description>
    </item>
    
    <item>
      <title>Retrieving ClientId using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/12/08/retrieving-clientid-using-google-apps-script/</link>
      <pubDate>Fri, 08 Dec 2017 09:10:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/08/retrieving-clientid-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving clientId using Google Apps Script.
var accessToken = ScriptApp.getOAuthToken();var url = &amp;#34;https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=&amp;#34; + accessToken;var params = {method: &amp;#34;post&amp;#34;,headers: {&amp;#34;Authorization&amp;#34;: &amp;#34;Bearer &amp;#34; + accessToken}};var res = UrlFetchApp.fetch(url, params).getContentText();var clientId = JSON.parse(res).azp;Logger.log(clientId)</description>
    </item>
    
    <item>
      <title>Downloading File Using Button of Dialog Box on Google Docs</title>
      <link>https://tanaikech.github.io/2017/12/07/downloading-file-using-button-of-dialog-box-on-google-docs/</link>
      <pubDate>Thu, 07 Dec 2017 08:43:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/07/downloading-file-using-button-of-dialog-box-on-google-docs/</guid>
      <description>Gists
This is a sample script for downloading a file using a button of dialog box on Google Docs (Spreadsheet, Document and Slides).
Please use this sample script at script editor on Google Docs (Spreadsheet, Document and Slides). And please set file ID in the script.
FLow : The flow of this sample script is as follows.
 Run dialog().  Open a dialog.   When users click a download button, retrieve file ID at GAS side.</description>
    </item>
    
    <item>
      <title>Rearranging Files in GAS Project (Restricted)</title>
      <link>https://tanaikech.github.io/2017/12/05/rearranging-files-in-gas-project-restricted/</link>
      <pubDate>Tue, 05 Dec 2017 15:13:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/05/rearranging-files-in-gas-project-restricted/</guid>
      <description>Gists
Introduction Recently, I have introduced a GAS library and a CLI tool for rearranging files in GAS project. Those are RearrangeScripts and ggsrun. Because today, I found a new way for rearranging files, I would like to introduce it although there is a restriction.
By the recent Google-update, users become able to create folders in GAS project. The new way uses this. At first, please see the demonstration GIF animation.</description>
    </item>
    
    <item>
      <title>Retrieving Instance of User-Interface Environment</title>
      <link>https://tanaikech.github.io/2017/12/04/retrieving-instance-of-user-interface-environment/</link>
      <pubDate>Mon, 04 Dec 2017 14:11:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/04/retrieving-instance-of-user-interface-environment/</guid>
      <description>Gists
This sample script is for retrieving an instance of user-interface environment for Spreadsheet, Document and Slides. When I create applications which use user interface (for example, sidebar, dialog and so on), the user interface can be used for Spreadsheet, Document and Slides. If the application doesn&#39;t use the methods depend on Spreadsheet, Document and Slides, this script can give 3 choices to users.
function getUi() {var ui;try {ui = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Mixing 2 Array Objects Included Dictionary Object by Javascript</title>
      <link>https://tanaikech.github.io/2017/12/03/mixing-2-array-objects-included-dictionary-object-by-javascript/</link>
      <pubDate>Sun, 03 Dec 2017 15:45:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/03/mixing-2-array-objects-included-dictionary-object-by-javascript/</guid>
      <description>Gists
This is a sample script for combining and mixing 2 objects. Each object is an array which included a dictionary type. When the key of the dictionary object is the same, the values are mixed.
This can be also used for Google Apps Script.
Input var obj1 = [{&amp;quot;key1&amp;quot;: [&amp;quot;value1a1&amp;quot;, &amp;quot;value1a2&amp;quot;]},{&amp;quot;key1&amp;quot;: [&amp;quot;value1aa1&amp;quot;, &amp;quot;value1aa2&amp;quot;]},{&amp;quot;key2&amp;quot;: [&amp;quot;value2a1&amp;quot;, &amp;quot;value2a2&amp;quot;]},{&amp;quot;key3&amp;quot;: [&amp;quot;value3a1&amp;quot;, &amp;quot;value3a2&amp;quot;]},];var obj2 = [{&amp;quot;key1&amp;quot;: [&amp;quot;value1b1&amp;quot;, &amp;quot;value1b2&amp;quot;]},{&amp;quot;key3&amp;quot;: [&amp;quot;value3b1&amp;quot;, &amp;quot;value3b2&amp;quot;]},{&amp;quot;key3&amp;quot;: [&amp;quot;value3bb1&amp;quot;, &amp;quot;value3bb2&amp;quot;]},{&amp;quot;key4&amp;quot;: [&amp;quot;value4b1&amp;quot;, &amp;quot;value4b2&amp;quot;]},];Output [{&amp;quot;key1&amp;quot;: [&amp;quot;value1a1&amp;quot;, &amp;quot;value1a2&amp;quot;, &amp;quot;value1b1&amp;quot;, &amp;quot;value1b2&amp;quot;, &amp;quot;value1aa1&amp;quot;, &amp;quot;value1aa2&amp;quot;]},{&amp;quot;key2&amp;quot;: [&amp;quot;value2a1&amp;quot;, &amp;quot;value2a2&amp;quot;]},{&amp;quot;key3&amp;quot;: [&amp;quot;value3a1&amp;quot;, &amp;quot;value3a2&amp;quot;, &amp;quot;value3b1&amp;quot;, &amp;quot;value3b2&amp;quot;, &amp;quot;value3bb1&amp;quot;, &amp;quot;value3bb2&amp;quot;]},{&amp;quot;key4&amp;quot;: [&amp;quot;value4b1&amp;quot;, &amp;quot;value4b2&amp;quot;]}]Sample script : Javascript : function mixture(obj1, obj2) {Array.</description>
    </item>
    
    <item>
      <title>Taking Advantage of Manifests by GAS Library</title>
      <link>https://tanaikech.github.io/2017/11/23/taking-advantage-of-manifests-by-gas-library/</link>
      <pubDate>Thu, 23 Nov 2017 20:21:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/23/taking-advantage-of-manifests-by-gas-library/</guid>
      <description>Gists
Introduction By recent Google update (Google update at October 24, 2017), various new winds to GAS developers were blown. There is &amp;ldquo;Manifests&amp;rdquo; as one of the new winds. &amp;ldquo;Manifests&amp;rdquo; makes us manage the project using JSON. Especially, the special scopes which have to use OAuth2 process can be used by only setting them to the Manifests. I think that this is the largest modification. However, when scopes are added to a project using Manifests, users who use the project can use only added scopes.</description>
    </item>
    
    <item>
      <title>Retrieving Size of Tables in Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/11/21/retrieving-size-of-tables-in-google-slides-using-google-apps-script/</link>
      <pubDate>Tue, 21 Nov 2017 11:24:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/21/retrieving-size-of-tables-in-google-slides-using-google-apps-script/</guid>
      <description>Gists
This sample script is for retrieving the size (width and height) of a table in Google Slides using Google Apps Script.
There are no methods for directly retrieving the table size using SlidesApp yet. So I thought of a workaround using Slides API.
 When the slide information is retrieved using Slides.Presentations.Pages.get() of Slides API, the information of tables is also included. In the information, the height and width of table are also included.</description>
    </item>
    
    <item>
      <title>SlideApp for Google Slides</title>
      <link>https://tanaikech.github.io/2017/11/13/slideapp-for-google-slides/</link>
      <pubDate>Mon, 13 Nov 2017 14:17:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/13/slideapp-for-google-slides/</guid>
      <description>Gists
By recent Google updated, Class SlideApp is added to Google Slides. SlideApp will be bring a lot of applications. Here, I would like to introduce 2 samples.
1. Sidebar function showSidebar() {var html = HtmlService.createHtmlOutput(&amp;#39;Hello, world! &amp;lt;input type=&amp;#34;button&amp;#34; value=&amp;#34;Close&amp;#34; onclick=&amp;#34;google.script.host.close()&amp;#34; /&amp;gt;&amp;#39;).setTitle(&amp;#39;My custom sidebar&amp;#39;).setWidth(300);SlidesApp.getUi().showSidebar(html);}2. Copy slides in existing Slide to a new Slide This sample script create a new Slide with slides you want to copy.</description>
    </item>
    
    <item>
      <title>GAS Library - RearrangeScripts</title>
      <link>https://tanaikech.github.io/2017/11/13/gas-library-rearrangescripts/</link>
      <pubDate>Mon, 13 Nov 2017 09:30:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/13/gas-library-rearrangescripts/</guid>
      <description>Overview This is a GAS application for rearranging Google Apps Scripts (GAS) in a project which can be seen at the script editor.
Description Have you ever thought about rearranging Google Apps Scripts in a project which can be seen at the script editor? I also have thought about it. Finally, I could find the workaround to do it. And recently, I have given this function to ggsrun which is a CLI tool.</description>
    </item>
    
    <item>
      <title>GAS Library - ZipFolder</title>
      <link>https://tanaikech.github.io/2017/11/12/gas-library-zipfolder/</link>
      <pubDate>Sun, 12 Nov 2017 15:52:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/12/gas-library-zipfolder/</guid>
      <description>Overview This is a library for zipping a folder using Google Apps Scripts.
Description When users manually download a folder on Google Drive, users can download all files in the folder as a zip file using the web interface. There are zip tools in Class Utilities of Google Apps Script. However, the zip tools cannot create a zip file from a folder. And it cannot retrieve all files included any folders in a folder.</description>
    </item>
    
    <item>
      <title>GAS Library - ManifestsApp</title>
      <link>https://tanaikech.github.io/2017/11/09/gas-library-manifestsapp/</link>
      <pubDate>Thu, 09 Nov 2017 10:47:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/09/gas-library-manifestsapp/</guid>
      <description>Overview This is a Manifests library for Google Apps Scripts.
Description By recent update of Google, Manifests was added to Google Apps Script Project. At the moment I saw the detail, I thought that this Manifests will blow a new wind for a lot of GAS developers. So I created this.
This library makes users easily access Manifests using Google Apps Script. If this was useful for you, I&#39;m glad.</description>
    </item>
    
    <item>
      <title>GAS Library - ProjectApp</title>
      <link>https://tanaikech.github.io/2017/11/08/gas-library-projectapp/</link>
      <pubDate>Wed, 08 Nov 2017 11:20:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/08/gas-library-projectapp/</guid>
      <description>Overview This is a GAS project library for Google Apps Script (GAS).
Description There are Class SpreadsheetApp and Class DocumentApp for operating spreadsheet and document, respectively. But there is no Class for operating GAS project. If there is the Class ProjectApp, GAS project can be directly operated by GAS script. I thought that this will lead to new applications, and created ProjectApp.
On the other hand, as a CLI tool for operating GAS project, there has already been ggsrun.</description>
    </item>
    
    <item>
      <title>Uploading Local Files to Google Drive without Authorization using HTML Form</title>
      <link>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</link>
      <pubDate>Mon, 06 Nov 2017 08:54:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</guid>
      <description>Gists
This is a sample script for uploading local file to Google Drive without the authorization using HTML form. A selected file in your local PC using HTML form is uploaded to Google Drive and saved to Google Drive.
When you use this, at first, please deploy Web Apps. The script is doPost() of following scripts.
Script : Google Apps Script function doPost(e) {var data = Utilities.base64Decode(e.parameters.data);var blob = Utilities.</description>
    </item>
    
    <item>
      <title>Create New Project with Original Manifests</title>
      <link>https://tanaikech.github.io/2017/10/31/create-new-project-with-original-manifests/</link>
      <pubDate>Tue, 31 Oct 2017 16:56:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/31/create-new-project-with-original-manifests/</guid>
      <description>It was found that you can also create new project with your original Manifests using ggsrun. By using this, for example, when you created new project, the project can have libraries, Advanced Google Services and so on at the initial stage. I think that this can be used as a template for Project.
$ ggsrun u -pn [Project name] -f appsscript.jsonhttps://github.com/tanaikech/ggsrun/blob/master/help/README.md#ModifyManifests
**You can check this and download ggsrun at https://github.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v133</title>
      <link>https://tanaikech.github.io/2017/10/30/updated-ggsrun-to-v133/</link>
      <pubDate>Mon, 30 Oct 2017 14:00:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/30/updated-ggsrun-to-v133/</guid>
      <description>ggsrun was updated to v.1.3.3   v1.3.3 (October 30, 2017)
 At October 24, 2017, &amp;ldquo;Manifests&amp;rdquo; which is new function for controlling the properties of Google Apps Script was added (GAS). You can see the detail of &amp;ldquo;Manifests&amp;rdquo; here. In order to modify the manifests from local PC, I added this new function to ggsrun. By using this, you can edit the manifests and update it from your local PC.</description>
    </item>
    
    <item>
      <title>Measuring Execution Time of Built-In Functions for Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/10/27/measuring-execution-time-of-built-in-functions-for-google-spreadsheet/</link>
      <pubDate>Fri, 27 Oct 2017 10:06:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/27/measuring-execution-time-of-built-in-functions-for-google-spreadsheet/</guid>
      <description>Gists
This sample script is for measuring the execution time of built-in functions for Google Spreadsheet. Unfortunately, there are not measurement tools for retrieving the execution time of built-in functions. So I thought of about a workaround.
Flow :  Import a value to a cell. The value is anything good, because this is used as a trigger. Please do this by yourself.  Custom functions cannot use setValue(). So I used onEdit().</description>
    </item>
    
    <item>
      <title>Straightening Elements in 2 Dimensional Array using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/10/26/straightening-elements-in-2-dimensional-array-using-google-apps-script/</link>
      <pubDate>Thu, 26 Oct 2017 16:51:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/26/straightening-elements-in-2-dimensional-array-using-google-apps-script/</guid>
      <description>Gists
This sample script is for straightening elements in 2 dimensional array using Google Apps Script (GAS). When applications using Spreadsheet are developed by GAS, it usually uses 2 dimensional array by setValues(). And the lengths of each element are required to be the same. On the other hand, data used for the applications might not be the same length for each element in 2 dimensional array. This sample script can be used under such situation.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v132</title>
      <link>https://tanaikech.github.io/2017/10/20/updated-ggsrun-to-v132/</link>
      <pubDate>Fri, 20 Oct 2017 16:43:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/20/updated-ggsrun-to-v132/</guid>
      <description>ggsrun was updated to v.1.3.2   v1.3.2 (October 20, 2017)
 Updated ggsrun&#39;s Install manual (README.md). Since I thought that the manual became too complicated, I separated it to the simple version and the detail version. And also , recently, since Google&#39;s specification was updated, about how to deploy API executable and enable APIs for ggsrun&#39;s Install manual were updated. From this version, scripts in a project can be rearranged.</description>
    </item>
    
    <item>
      <title>Enhanced onEdit(e) using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/10/11/enhanced-onedite-using-google-apps-script/</link>
      <pubDate>Wed, 11 Oct 2017 09:43:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/11/enhanced-onedite-using-google-apps-script/</guid>
      <description>Gists
onEdit(e) which is used for the Edit event on Spreadsheet has the old value as e.oldValue. The specifications for this are as follows.
 When an user edited a single &amp;ldquo;A1&amp;rdquo; cell, e of onEdit(e) shows hoge for e.oldValue and fuga for e.value. When an user edited the &amp;ldquo;A1:A2&amp;rdquo; multiple cells, e.oldValue and e.value of onEdit(e) are not shown anything. When an user copied and pasted from other cell, e.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/09/24/updated-gas-library-onedriveapp/</link>
      <pubDate>Sun, 24 Sep 2017 15:36:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/24/updated-gas-library-onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.1.0.
From this version, retrieving access token and refresh token became more easy.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>Selecting Files in Google Drive using Select Box for Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/17/selecting-files-in-google-drive-using-select-box-for-google-apps-script/</link>
      <pubDate>Sun, 17 Sep 2017 13:26:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/17/selecting-files-in-google-drive-using-select-box-for-google-apps-script/</guid>
      <description>Gists
This is a sample script for selecting files in Google Drive using HTML select box for Google Apps Script.
Feature Feature of this sample.
 It is a simple and space saving. When the folder is selected, the files in the folder are shown. When the file is selected, the ID of file is retrieved. Users can use this ID at GAS. When a folder is opened, all files in the folder are cached.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v131</title>
      <link>https://tanaikech.github.io/2017/09/15/updated-ggsrun-to-v131/</link>
      <pubDate>Fri, 15 Sep 2017 10:12:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/15/updated-ggsrun-to-v131/</guid>
      <description>ggsrun was updated to v.1.3.1  Recently, when scripts on local PC is uploaded to Google Drive as a new project, the time to create on Google became a bit long. (I think that this is due to Google Update.) Under this situation, when the script is uploaded, the timeout error occurs while the new project is created using the script. So the time until timeout of fetch was modified from 10 seconds to 30 seconds.</description>
    </item>
    
    <item>
      <title>Uploading Image Files to Slack Using Incoming Webhooks by Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</link>
      <pubDate>Thu, 07 Sep 2017 12:37:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</guid>
      <description>Gist
This sample script is for uploading image files to Slack using Incoming Webhooks by Google Apps Script.
When users try to upload image files to Slack using Incoming Webhooks, it has been known that although the access token is required to directly upload them, Incoming Webhooks can upload them by using the tag of image_url. In this sample script, it uploads image files (BMP, GIF, JPEG and PNG) on Google Drive to Slack using Incoming Webhooks.</description>
    </item>
    
    <item>
      <title>Retrieving Files with Filename Included Special Characters using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/07/retrieving-files-with-filename-included-special-characters-using-google-apps-script/</link>
      <pubDate>Thu, 07 Sep 2017 10:40:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/07/retrieving-files-with-filename-included-special-characters-using-google-apps-script/</guid>
      <description>Gists
This sample script is for retrieving files with filename included special characters using Google Apps Script. The files are used on Google Drive.
The files with filename of special characters cannot be retrieved using DriveApp.getFilesByName(). This workaround solved this.
As a query parameter, name contains &#39;filename with special characters&#39; is used. This contains is very important. name=&#39;filename with special characters&#39; cannot retrieve such files. Today, it was found that name contains &#39;filename with special characters&#39; is the workaround.</description>
    </item>
    
    <item>
      <title>Enhanced copyTo() using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/03/enhanced-copyto-using-google-apps-script/</link>
      <pubDate>Sun, 03 Sep 2017 10:35:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/03/enhanced-copyto-using-google-apps-script/</guid>
      <description>Here, it introduces an application of Retrieving Spreadsheet ID from Range using Google Apps Script.
Please check this. https://github.com/tanaikech/getSpreadsheetByRange</description>
    </item>
    
    <item>
      <title>Retrieving Spreadsheet ID from Range using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/08/31/retrieving-spreadsheet-id-from-range-using-google-apps-script/</link>
      <pubDate>Thu, 31 Aug 2017 13:50:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/31/retrieving-spreadsheet-id-from-range-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving spreadsheet ID from a range using Google Apps Script. I sometimes want to retrieve spreadsheet ID from ranges. In such case, I always use this.
 Range -&amp;gt; Retrieve Sheet using getSheet() -&amp;gt; Retrieve Spreadsheet using getParent() -&amp;gt; Retrieve spreadsheet ID  var id = &amp;#34;123456789abcdefg&amp;#34;;var sheet = &amp;#34;Sheet&amp;#34;;var cells = &amp;#34;a1:b10&amp;#34;;var range = SpreadsheetApp.openById(id).getSheetByName(sheet).getRange(cells);var id = range.getSheet().getParent().getId();&amp;gt;&amp;gt;&amp;gt; id ---&amp;gt; 123456789abcdefg</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v130</title>
      <link>https://tanaikech.github.io/2017/08/30/updated-ggsrun-to-v130/</link>
      <pubDate>Wed, 30 Aug 2017 15:08:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/30/updated-ggsrun-to-v130/</guid>
      <description>ggsrun was updated to v.1.3.0  From this version, container-bound scripts can be downloaded. The container-bound script is the script created at the script editor on Google Sheets, Docs, or Forms file.  In order to download container-bound scripts, the project ID of container-bound scripts is required. The project ID can be retrieved as follows.  Open the project. And please operate follows using click.  -&amp;gt; File -&amp;gt; Project properties -&amp;gt; Get Script ID (This is the project ID.</description>
    </item>
    
    <item>
      <title>Retrieving Values By Header Title for Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/08/27/retrieving-values-by-header-title-for-spreadsheet/</link>
      <pubDate>Sun, 27 Aug 2017 14:05:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/27/retrieving-values-by-header-title-for-spreadsheet/</guid>
      <description>Gists
This is a sample script for retrieving values by header title for Spreadsheet. This is created by Google Apps Script. The main script is as follows.
Main script : When the instance is retrieved, all data of the sheet is analyzed. So when the each value is retrieved, the speed is fast.
function GetValueByKey(sheetname) {return new getValueByKey(sheetname);};(function(r) {var getValueByKey;getValueByKey = (function() {getValueByKey.name = &amp;#34;getValueByKey&amp;#34;;function getValueByKey(sheetname) {var alldata, e, header, ss;try {ss = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/08/21/updated-gas-library-onedriveapp/</link>
      <pubDate>Mon, 21 Aug 2017 15:02:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/updated-gas-library-onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.0.2.
Moved the instance of PropertiesService.getScriptProperties() to outside of this library. When there is the PropertiesService.getScriptProperties() inside the library, it was found that the parameters that users set was saved to the library. So this was modified. I&#39;m sorry that I couldn&#39;t notice this situation.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/08/21/updated-gas-library-onedriveapp/</link>
      <pubDate>Mon, 21 Aug 2017 11:22:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/updated-gas-library-onedriveapp/</guid>
      <description>OnedriveApp was updated to v1.0.1.
Added a method for retrieving access token and refresh token using this library.
By added this method, OneDrive APIs can be used by only this library.
GitHub of OnedriveApp</description>
    </item>
    
    <item>
      <title>Changing Values by Checking Duplicated Values of JSON for Javascript</title>
      <link>https://tanaikech.github.io/2017/08/21/changing-values-by-checking-duplicated-values-of-json-for-javascript/</link>
      <pubDate>Mon, 21 Aug 2017 08:30:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/changing-values-by-checking-duplicated-values-of-json-for-javascript/</guid>
      <description>Gists
This sample script is for changing values by checking duplicated values of JSON for Javascript.
Please see the following script. There is an array with a JSON data with 3 keys and 3 values. It is found that the values for each element duplicate. These duplicated values are changing by adding numbers.
I use this for managing filenames. This script also can be used for Google Apps Script. If this was useful for you, I&#39;m glad.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/08/20/updated-gas-library-imgapp/</link>
      <pubDate>Sun, 20 Aug 2017 15:11:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/20/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.2.0. New method was added.
3. updateThumbnail() Overview This method is for updating thumbnail of files on Google Drive using images you selected.
Description For example, zip files don&#39;t have the thumbnail on Google Drive. An icon is shown as the thumbnail. For the most files, Google Drive can create automatically each thumbnail. But there are sometimes files which cannot be created the thumbnail. Zip file is also one of them.</description>
    </item>
    
    <item>
      <title>GAS Library - OnedriveApp</title>
      <link>https://tanaikech.github.io/2017/08/16/gas-library-onedriveapp/</link>
      <pubDate>Wed, 16 Aug 2017 10:31:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/16/gas-library-onedriveapp/</guid>
      <description>This is a library of Google Apps Script for using Microsoft OneDrive.
Feature This library can carry out following functions using OneDrive APIs.
 Retrieve file list on OneDrive. Delete files and folders on OneDrive. Create folder on OneDrive. Download files from OneDrive to Google Drive. Upload files from Google Drive to OneDrive.  Demo You can see the detail information here https://github.com/tanaikech/OnedriveApp</description>
    </item>
    
    <item>
      <title>Interconversion Between Google Docs and Microsoft Docs</title>
      <link>https://tanaikech.github.io/2017/08/11/interconversion-between-google-docs-and-microsoft-docs/</link>
      <pubDate>Fri, 11 Aug 2017 15:02:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/11/interconversion-between-google-docs-and-microsoft-docs/</guid>
      <description>Gists
This sample script is for the interconversion between Google Docs (document, spreadsheet and presentation) and Microsoft Docs (word, excel and powerpoint). The feature is to convert them without Advanced Google Services.
Since Advanced Google Services is not used for this, if you publish your script with this script, you are not necessary to explain how to install Advanced Google Services. This script converts between Google Docs and Microsoft Docs using UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token From OneDrive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/08/04/retrieving-access-token-from-onedrive-using-google-apps-script/</link>
      <pubDate>Fri, 04 Aug 2017 14:21:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/04/retrieving-access-token-from-onedrive-using-google-apps-script/</guid>
      <description>Gist
Overview This GAS sample is for retrieving access token to use OneDrive APIs using Google Apps Script.
In this script, the authorization code is automatically retrieved.
Demo Usage In order to use this, both accounts of Google and OneDrive (MSN) are required.
Google side  Copy and paste the sample script to your script editor. You can use the standalone script for this. Deploy Web Apps.  On the Script Editor  File -&amp;gt; Manage Versions -&amp;gt; Save New Version Publish -&amp;gt; Deploy as Web App -&amp;gt; At Execute the app as, select &amp;ldquo;your account&amp;rdquo; -&amp;gt; At Who has access to the app, select &amp;ldquo;Only myself&amp;rdquo; -&amp;gt; Click &amp;ldquo;Deploy&amp;rdquo; -&amp;gt; Copy URL of &amp;ldquo;latest code&amp;rdquo; (This is important!</description>
    </item>
    
    <item>
      <title>Converting a1Notation to GridRange for Google Sheets API</title>
      <link>https://tanaikech.github.io/2017/07/31/converting-a1notation-to-gridrange-for-google-sheets-api/</link>
      <pubDate>Mon, 31 Jul 2017 14:38:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/31/converting-a1notation-to-gridrange-for-google-sheets-api/</guid>
      <description>Gists
When it uses Google Sheets API v4, GridRange is used for it as the range property. These sample scripts are for converting from a1Notation to GridRange. You can chose from following 2 scripts. Both scripts can retrieve the same result.
Script 1 : This is from me.
function a1notation2gridrange1(sheetid, a1notation) {var data = a1notation.match(/(^.+)!(.+):(.+$)/);var ss = SpreadsheetApp.openById(sheetid).getSheetByName(data[1]);var range = ss.getRange(data[2] + &amp;#34;:&amp;#34; + data[3]);var gridRange = {sheetId: ss.</description>
    </item>
    
    <item>
      <title>Multipart-POST Request Using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/07/21/multipart-post-request-using-google-apps-script/</link>
      <pubDate>Fri, 21 Jul 2017 10:34:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/21/multipart-post-request-using-google-apps-script/</guid>
      <description>Gist
These sample scripts are for requesting multipart post using Google Apps Script.
In most cases, the multipart request is used for uploading files. So I prepared 2 sample situations as follows. For each situation, the request parameters are different.
 Upload a file from Google Drive to Slack. Convert an excel file to Spreadsheet on Google Drive using Drive API v3.  Multipart post is required for these situations.</description>
    </item>
    
    <item>
      <title>Retrieving Images on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/07/21/retrieving-images-on-spreadsheet/</link>
      <pubDate>Fri, 21 Jul 2017 08:27:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/21/retrieving-images-on-spreadsheet/</guid>
      <description>Gist
This is a sample script for retrieving images on Spreadsheet.
Unfortunately, there are no methods for retrieving directly images on spreadsheet using GAS. So I use the method which retrieves URL from =image(URL) and retrieves the image from the URL.
In this case, =image(URL) has to be in the cell. Images embedded by insertImage() cannot be retrieved.
At first, please confirm them.
Sample script : var cell = &amp;#34;A1&amp;#34;; // Cell address with the function of &amp;#34;=image()&amp;#34;var filename = &amp;#34;samplename&amp;#34;; // Output filenamevar image = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Retrieving Array Coordinates of Duplicated Elements</title>
      <link>https://tanaikech.github.io/2017/07/19/retrieving-array-coordinates-of-duplicated-elements/</link>
      <pubDate>Wed, 19 Jul 2017 10:38:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/19/retrieving-array-coordinates-of-duplicated-elements/</guid>
      <description>This sample is for retrieving array coordinates of duplicated elements.
Script : var inputdata = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;f&amp;#34;, &amp;#34;g&amp;#34;];var dic = {};var result = [];inputdata.forEach(function(e, i){if (dic[e]) {result[i] = &amp;#39;Duplicated&amp;#39;;} else {result[i] = null;}dic[e] = &amp;#34;temp&amp;#34;;});Logger.log(JSON.stringify(result))Logger.log([i for (i in result) if(result[i]==&amp;#39;Duplicated&amp;#39;)])Result : [null,null,&amp;#34;Duplicated&amp;#34;,null,null,&amp;#34;Duplicated&amp;#34;,null,&amp;#34;Duplicated&amp;#34;,null,null][2, 5, 7]</description>
    </item>
    
    <item>
      <title>Get File List Under a Folder on Google Drive</title>
      <link>https://tanaikech.github.io/2017/07/19/get-file-list-under-a-folder-on-google-drive/</link>
      <pubDate>Wed, 19 Jul 2017 08:51:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/19/get-file-list-under-a-folder-on-google-drive/</guid>
      <description>Gists
This is a sample of Google Apps Script. This script is for retrieving all files and folders under a folder on Google Drive. All files and folders in the specific folder can be retrieved.
If you want to retrieve file list with all files and folders on Google Drive, please use DriveApp.getRootFolder().getId() as folderId.
When there are a lot of files in the folder, it may be over the limitation time to execute script.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v122</title>
      <link>https://tanaikech.github.io/2017/07/12/updated-ggsrun-to-v122/</link>
      <pubDate>Wed, 12 Jul 2017 14:31:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/12/updated-ggsrun-to-v122/</guid>
      <description>ggsrun was updated to v.1.2.2  For Google Docs (spreadsheet, document, slide and drawing), since I noticed that the revision files would not be able to be retrieved using Drive API v3, I modified this using new workaround.  The new workaround is to use Drive API v2. drive.revisions.get of Drive API v2 can retrieve not only the revision list, but also the export links. I thought of the use of the export links.</description>
    </item>
    
    <item>
      <title>Pseudo Browser with Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/07/05/pseudo-browser-with-google-spreadsheet/</link>
      <pubDate>Wed, 05 Jul 2017 16:45:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/05/pseudo-browser-with-google-spreadsheet/</guid>
      <description>Gist
Overview This is a sample script for creating the pseudo browser using Google Spreadsheet.
Description I unexpectedly noticed this. I think that this is for off-line browsing using HTML data. So there are many limitations. At first, please confirm them.
 Limitations  It cannot move from opened site to other outside site. If the outer site is opened as a new wind, your own browser is opened and move there.</description>
    </item>
    
    <item>
      <title>Downloading Files From Google Drive Under No Authorization Using Browser</title>
      <link>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser/</link>
      <pubDate>Tue, 04 Jul 2017 15:57:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser/</guid>
      <description>Gist
This is a sample script for downloading files from Google Drive under no authorization using browser. By using this sample, you can make other users download files from your Google Drive. Even if the other users are not Google users, they can download the files.
Demo This is a demonstration for downloading files from Google Drive under no authorization using browser. From the top document, You can see that an user who is not owner of Google Drive is downloading files.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/06/29/updated-gas-library-imgapp/</link>
      <pubDate>Thu, 29 Jun 2017 16:09:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/29/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.1.0. New method was added.
2. doResize() Overview This method is for resizing images.
Description Unfortunately, there are no methods to resize images at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and resizes the image using setWidth() and setHeight(). But in this method, the resized blob cannot be retrieved. So although I had thought of other workaround, I had not been able to find it.</description>
    </item>
    
    <item>
      <title>GAS Library - ImgApp - getSize()</title>
      <link>https://tanaikech.github.io/2017/06/27/gas-library-imgapp-getsize/</link>
      <pubDate>Tue, 27 Jun 2017 16:21:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/27/gas-library-imgapp-getsize/</guid>
      <description>1. getSize() Overview This method is for retrieving the width and height of image as the unit of pixel.
Description Unfortunately, there are no methods to directly retrieve the image size at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and retrieves the size using getWidth() and getHeight(). But in this method, it uses much time and resources on Google. So I thought of retrieving the information of image at the binary level, and created this.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Google APIs</title>
      <link>https://tanaikech.github.io/2017/06/21/retrieving-access-token-for-google-apis/</link>
      <pubDate>Wed, 21 Jun 2017 10:24:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/21/retrieving-access-token-for-google-apis/</guid>
      <description>Gists
This sample is for retrieving access token for Google APIs. I created this for studying newStateToken().
Preparation In order to use this sample, please do as follows.
 Deploy and launch Web Apps for retrieving redirect uri  On the Script Editor  File -&amp;gt; Manage Versions -&amp;gt; Save New Version Publish -&amp;gt; Deploy as Web App -&amp;gt; At Execute the app as, select &amp;ldquo;your account&amp;rdquo; -&amp;gt; At Who has access to the app, select &amp;ldquo;Only myself&amp;rdquo; -&amp;gt; Click &amp;ldquo;Deploy&amp;rdquo; -&amp;gt; Click &amp;ldquo;latest code&amp;rdquo; (By this click, it launches the authorization process.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - SOUWA</title>
      <link>https://tanaikech.github.io/2017/06/19/updated-gas-library-souwa/</link>
      <pubDate>Mon, 19 Jun 2017 07:06:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/19/updated-gas-library-souwa/</guid>
      <description>SOUWA means summing in Japanese. SOUWA can sum string elements in an array at the high speed. The speed of SOUWA with the pyramid algorithm is about 380 times faster than that of the standard method. New algorithm for summing array elements was developed for SOUWA. You can see the detailed report of this library at here. If you are interested in this, I&#39;m glad.
It was updated to v1.0.2. Please check it out.</description>
    </item>
    
    <item>
      <title>Search Route and Embedding Map using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/14/search-route-and-embedding-map-using-custom-function-on-spreadsheet/</link>
      <pubDate>Wed, 14 Jun 2017 17:35:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/14/search-route-and-embedding-map-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script is for searching route between place A and B and embedding a map by custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem When the map is embedded to a cell on spreadsheet as an image, the function =IMAGE() is suitable for this situation. However, Class Maps, setFormula() for importing =IMAGE() and DriveApp.createFile() for creating images from maps also cannot be used for custom functions.</description>
    </item>
    
    <item>
      <title>Giving and Retrieving Parameters for Chart at GAS</title>
      <link>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas/</link>
      <pubDate>Mon, 12 Jun 2017 11:11:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/12/giving-and-retrieving-parameters-for-chart-at-gas/</guid>
      <description>This sample script is for retrieving parameters from a chart. The chart created by both Google Apps Script and manually operation can be used.
Creates Chart When a chart is created, it supposes following parameters.
var parameters = { &amp;#34;title&amp;#34;: &amp;#34;x axis&amp;#34;, &amp;#34;fontName&amp;#34;: &amp;#34;Arial&amp;#34;, &amp;#34;minValue&amp;#34;: 0, &amp;#34;maxValue&amp;#34;: 100, &amp;#34;titleTextStyle&amp;#34;: { &amp;#34;color&amp;#34;: &amp;#34;#c0c0c0&amp;#34;, &amp;#34;fontSize&amp;#34;: 10, &amp;#34;fontName&amp;#34;: &amp;#34;Roboto&amp;#34;, &amp;#34;italic&amp;#34;: true, &amp;#34;bold&amp;#34;: false } }; .setOption(&amp;#39;hAxis&amp;#39;, parameters) Retrieve Parameters From Chart For the chart created by above parameters, in order to retrieve the parameters, it uses following script.</description>
    </item>
    
    <item>
      <title>Benchmark: Effect of Comprehension for GAS</title>
      <link>https://tanaikech.github.io/2017/06/07/benchmark-effect-of-comprehension-for-gas/</link>
      <pubDate>Wed, 07 Jun 2017 09:21:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/07/benchmark-effect-of-comprehension-for-gas/</guid>
      <description>Description There are a limit executing time for Google Apps Script (GAS). It&#39;s 6 minutes. So users have to pay attention to the process cost of the script. GAS can use JavaScript 1.7. This means to be able to be used comprehension for GAS.
In this report, the process cost for the comprehension has been investigated. The normal for loop was used as the competitor. As a result, it was found that the comprehension can be used one of methods for reducing the process cost.</description>
    </item>
    
    <item>
      <title>Embedding Animation GIF in A Cell on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet/</link>
      <pubDate>Tue, 06 Jun 2017 16:47:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/06/embedding-animation-gif-in-a-cell-on-spreadsheet/</guid>
      <description>This sample script is for embedding animation GIF in a cell using custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem There are some limitations.
 Images of jpeg and png can be embedded in a cell using =IMAGE(). But when animation GIF is embedded using it, GIF is not played. insertImage() can insert the animation GIF to sheet. But it is not imported to one cell.</description>
    </item>
    
    <item>
      <title>OCR using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/</link>
      <pubDate>Tue, 06 Jun 2017 07:53:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/06/ocr-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script performs OCR and imports resultant text to a cell using custom function on Spreadsheet.
Drive API has a function to do OCR. It was used for this sample.
I think that this method is one of various ideas.
Problem When OCR is performed and imported the result to a cell on spreadsheet, there are some limitations. DriveApp, UrlFetchApp, setFormula() cannot be used for custom functions.
Solution In order to avoid these limitations, I used Web Apps.</description>
    </item>
    
    <item>
      <title>Retirving All files in Folder with Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/retirving-all-files-in-folder-with-spreadsheet/</link>
      <pubDate>Sun, 04 Jun 2017 18:15:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/retirving-all-files-in-folder-with-spreadsheet/</guid>
      <description>This sample retrieves all files in a folder with spreadsheet. When there are some folders in the folder with spreadsheet, this script can retrieve all files in all folders. This script has to be a container-bound script for spreadsheet.
Script : function getFileList(){ var folderlist = (function(folder, folderSt, results){ var ar = []; var folders = folder.getFolders(); while(folders.hasNext()) ar.push(folders.next()); folderSt += folder.getId() + &amp;#34;#_aabbccddee_#&amp;#34;; var array_folderSt = folderSt.split(&amp;#34;#_aabbccddee_#&amp;#34;); array_folderSt.pop() results.push(array_folderSt); ar.</description>
    </item>
    
    <item>
      <title>Embedding a Map to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/</link>
      <pubDate>Sun, 04 Jun 2017 12:02:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/04/embedding-a-map-to-a-cell-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script embeds a map to a cell using custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem When the map is embeded to a cell on spreadsheet as an image, the function =IMAGE() is suitable for this situation. However, setFormula() for importing =IMAGE() and DriveApp.createFile() for creating images from maps also cannot be used for custom functions.
Solution In order to avoid these limitations, I used Web Apps.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v121</title>
      <link>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121/</link>
      <pubDate>Sun, 28 May 2017 14:20:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/28/updated-ggsrun-to-v121/</guid>
      <description>ggsrun was updated to v.1.2.1  Configuration file (ggsrun.cfg) became to be able to be read using the environment variable.  You can check this at here.</description>
    </item>
    
    <item>
      <title>Embedding a Chart to a Cell using Custom Function on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/</link>
      <pubDate>Fri, 26 May 2017 11:59:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/26/embedding-a-chart-to-a-cell-using-custom-function-on-spreadsheet/</guid>
      <description>This sample script embeds a chart to a cell using custom function on Spreadsheet.
I think that this method is one of various ideas.
Problem When you want to create a chart and embed it to a cell using custom functions, you notice that insertChart() cannot be used. There are some limitations for using custom functions. But insertChart() creates floating charts. So in order to embed a chart to a cell, the function =IMAGE() is suitable for this situation.</description>
    </item>
    
    <item>
      <title>Retrieving HTML File ID from Microsoft Docx File on Google Drive</title>
      <link>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive/</link>
      <pubDate>Wed, 24 May 2017 09:08:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive/</guid>
      <description>This sample script converts from Microsoft Docx File on Google Drive to Google Spreadsheet, and converts to HTML file.
Drive APIs v2 and v3 are used for this. Please set as follows.
 Drive API v2 Drive API v3  &amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.
How to use it is as follows.</description>
    </item>
    
    <item>
      <title>Updated ggsrun to v120</title>
      <link>https://tanaikech.github.io/2017/05/19/updated-ggsrun-to-v120/</link>
      <pubDate>Fri, 19 May 2017 08:49:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/19/updated-ggsrun-to-v120/</guid>
      <description>ggsrun was updated to v.1.2.0  Added a command for retrieving revision files on Google Drive. Some modifications.  You can check this at here.</description>
    </item>
    
    <item>
      <title>Changing Line to Bars for Combo Chart using GAS</title>
      <link>https://tanaikech.github.io/2017/05/16/changing-line-to-bars-for-combo-chart-using-gas/</link>
      <pubDate>Tue, 16 May 2017 11:42:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/16/changing-line-to-bars-for-combo-chart-using-gas/</guid>
      <description>Sample data This is a sample data for this sample script. The column B was created by the normal distribution formula, and the column C was created by multiplying random number for column B.
A, B, C 1.0, 0.0001, 0.0000 1.5, 0.0009, 0.0006 2.0, 0.0044, 0.0037 2.5, 0.0175, 0.0133 3.0, 0.0540, 0.0236 3.5, 0.1296, 0.0533 4.0, 0.2420, 0.0073 4.5, 0.3522, 0.2468 5.0, 0.3990, 0.0843 5.5, 0.3522, 0.3352 6.0, 0.2420, 0.2201 6.</description>
    </item>
    
    <item>
      <title>Sending E-mail When Spreadsheet was Edited from Outside by Sheet API</title>
      <link>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api/</link>
      <pubDate>Sun, 14 May 2017 17:43:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api/</guid>
      <description>This sample script sends an e-mail, when spreadsheet was edited from outside by Sheet API v4. When you use this sample, please create a container bound script with spreadsheet which is edited by Sheet API. And please input your e-mail and run firstly a method of createTrigger(). By this, a trigger is installed as onChange(). After this, edit spreadsheet from outside by Sheet API v4.
When when spreadsheet was edited from outside by Sheet API v4, I used sendEmail() as a sample, because script editor is closed.</description>
    </item>
    
    <item>
      <title>File Transfer for Google Drive Without Authorization</title>
      <link>https://tanaikech.github.io/2017/05/10/file-transfer-for-google-drive-without-authorization/</link>
      <pubDate>Wed, 10 May 2017 13:28:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/10/file-transfer-for-google-drive-without-authorization/</guid>
      <description>Overview In this article, I would like to introduce how to transfer files for Google Drive under no authorization.
This has also been published here. https://github.com/tanaikech/FileTransfer
Description When we download and upload files for Google Drive, it usually has to use Drive API. In order to use Drive API, access token is required. If you want to make your friends download and upload files for your Google Drive, the authorization process is to take time.</description>
    </item>
    
    <item>
      <title>Changing Slack Status using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/05/09/changing-slack-status-using-google-apps-script/</link>
      <pubDate>Tue, 09 May 2017 10:58:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/09/changing-slack-status-using-google-apps-script/</guid>
      <description>This script changes slack status using GAS. If you want to change it on time you decided, it can be achieved by installing this method as a trigger.
In order to use this, the required scope is users.profile:write.
function setSlackStatus(token, user, status_text, status_emoji) { return UrlFetchApp.fetch( &amp;#39;https://slack.com/api/users.profile.set&amp;#39;, { method: &amp;#39;post&amp;#39;, payload: { token: token, user: user, profile: JSON.stringify({status_text: status_text, status_emoji: status_emoji}) }, muteHttpExceptions: true } ).getContentText(); } function main() { var res = setSlackStatus( &amp;#39;### Your access token ###&amp;#39;, &amp;#39;### User ID ###&amp;#39;, &amp;#39;sample&amp;#39;, &amp;#39;:coffee:&amp;#39; ); Logger.</description>
    </item>
    
    <item>
      <title>Retrieving User Information with Shared Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/04/27/retrieving-user-information-with-shared-spreadsheet/</link>
      <pubDate>Thu, 27 Apr 2017 14:34:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/27/retrieving-user-information-with-shared-spreadsheet/</guid>
      <description>This sample script retrieves the user information which is editing the shared spreadsheet.
It was found as follows.
 User information retrieving by Class Session is the owner and users which installed triggers by themselves. When each user installs a trigger, user information retrieving by Class Session losts the accuracy. So user information has to be retrieved using a temporally installed trigger. Using onOpen(), it cannot directly install triggers and authorize.</description>
    </item>
    
    <item>
      <title>CLI Tool - ggsrun</title>
      <link>https://tanaikech.github.io/2017/04/24/cli-tool-ggsrun/</link>
      <pubDate>Mon, 24 Apr 2017 15:07:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/24/cli-tool-ggsrun/</guid>
      <description>Overview This is a CLI tool to execute Google Apps Script (GAS) on a terminal.
Motivation Will you want to develop GAS using CoffeeScript on your local PC? Generally, when we develop GAS, we have to login to Google using own browser and develop it using Javascript on the Script Editor. Recently, I have wanted to have more convenient local-environment for developing GAS. So I created this &amp;ldquo;ggsrun&amp;rdquo;.
**The detail information and how to get this are https://github.</description>
    </item>
    
    <item>
      <title>Overwriting Spreadsheet to Existing Excel File</title>
      <link>https://tanaikech.github.io/2017/04/21/overwriting-spreadsheet-to-existing-excel-file/</link>
      <pubDate>Fri, 21 Apr 2017 13:13:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/21/overwriting-spreadsheet-to-existing-excel-file/</guid>
      <description>This sample script converts a spreadsheet to excel file, and overwrites the excel file to the existing excel file. When you use this script, at first, please confirm whether Drive API is enabled at Google API console.Because the existing excel file is overwritten, the file name and file ID are not changed.
function overWrite(src_spreadsheetId, dst_excelfileId) { var accesstoken = ScriptApp.getOAuthToken(); return UrlFetchApp.fetch( &amp;#34;https://www.googleapis.com/upload/drive/v3/files/&amp;#34; + dst_excelfileId + &amp;#34;?uploadType=multipart&amp;#34;, { method: &amp;#34;PATCH&amp;#34;, headers: {Authorization: &amp;#34;Bearer &amp;#34; + accesstoken}, contentType: &amp;#34;application/vnd.</description>
    </item>
    
    <item>
      <title>Converting Spreadsheet to PDF</title>
      <link>https://tanaikech.github.io/2017/04/20/converting-spreadsheet-to-pdf/</link>
      <pubDate>Thu, 20 Apr 2017 07:56:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/20/converting-spreadsheet-to-pdf/</guid>
      <description>Converting Spreadsheet to PDF
This sample script converts from a spreadsheet to a PDF file which has all sheets in the spreadsheet. When you use this, please enable Drive API at Google API console.
var spreadsheetId = &amp;quot;#####&amp;quot;; var folderId = &amp;quot;#####&amp;quot;; var outputFilename = &amp;quot;#####&amp;quot;; DriveApp.getFolderById(folderId) .createFile(UrlFetchApp.fetch( &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + spreadsheetId + &amp;quot;/export?mimeType=application/pdf&amp;quot;, { method: &amp;quot;GET&amp;quot;, headers: {Authorization: &amp;quot;Bearer &amp;quot; + ScriptApp.getOAuthToken()}, muteHttpExceptions: true }) .getBlob()) .setName(outputFilename); </description>
    </item>
    
    <item>
      <title>GAS Library - CreateImg</title>
      <link>https://tanaikech.github.io/2017/04/17/gas-library-createimg/</link>
      <pubDate>Mon, 17 Apr 2017 15:29:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/17/gas-library-createimg/</guid>
      <description>Recently, I had been looking for creating an image from coordinate data. Unfortunately I have never found them. So I made this. This Google Apps Script (GAS) library creates an image file from coordinate data.
You can see the detail information at https://github.com/tanaikech/CreateImg.
There is a part where I would like to improve in this library. That&#39;s convByteSlice(). I think that there is the method to be faster about the part.</description>
    </item>
    
    <item>
      <title>Comprehension of GAS</title>
      <link>https://tanaikech.github.io/2017/04/17/comprehension-of-gas/</link>
      <pubDate>Mon, 17 Apr 2017 08:16:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/17/comprehension-of-gas/</guid>
      <description>Here, I would like to introduce a comprehension of GAS.
Input :
var data = [[[0], [1], [2], [3]], [[4], [5], [6], [7]]]; Output :
[[0.0, 2.0], [0.0, 2.0]] Pattern 1 var a = []; for (var i=0; i&amp;lt;data.length; i++) { var temp = []; for (var j=0; j&amp;lt;data[i].length; j++) { if (data[i][j][0] % 2 == 0) temp.push(j); } a.push(temp); } Logger.log(a) Pattern 2 var b = []; data.forEach(function(e1){ var temp = []; e1.</description>
    </item>
    
    <item>
      <title>Creating Spreadsheet from Excel file</title>
      <link>https://tanaikech.github.io/2017/04/15/creating-spreadsheet-from-excel-file/</link>
      <pubDate>Sat, 15 Apr 2017 10:39:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/15/creating-spreadsheet-from-excel-file/</guid>
      <description>These scripts can be executed on Script Editor. But, in order to use these, you have to enable Drive API of Advanced Google services and of Google API Console. &amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.
How to use it is as follows.
  In the script editor, select Resources &amp;gt; Advanced Google services</description>
    </item>
    
    <item>
      <title>Creating Downloaded Excel file as Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/04/14/creating-downloaded-excel-file-as-spreadsheet/</link>
      <pubDate>Fri, 14 Apr 2017 18:03:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/14/creating-downloaded-excel-file-as-spreadsheet/</guid>
      <description>This is a sample GAS script to create an Excel file, which was downloaded from web, as Spreadsheet. By using Drive API, it can be achieved without access token.
Script :
function downloadFile(fileURL, folder) { var filename = fileURL.match(&amp;#34;.+/(.+?)([\?#;].*)?$&amp;#34;)[1]; var response = UrlFetchApp.fetch(fileURL); var rc = response.getResponseCode(); var blob = response.getBlob(); var resource = { &amp;#34;mimeType&amp;#34;: &amp;#34;application/vnd.google-apps.spreadsheet&amp;#34;, &amp;#34;parents&amp;#34;: [{id: folder}], &amp;#34;title&amp;#34;: filename }; var res = Drive.Files.insert(resource, blob); var fileInfo = [rc, res.</description>
    </item>
    
    <item>
      <title>How to use &#34;fields&#34; of Drive APIs</title>
      <link>https://tanaikech.github.io/2017/03/30/how-to-use-fields-of-drive-apis/</link>
      <pubDate>Thu, 30 Mar 2017 08:53:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/30/how-to-use-fields-of-drive-apis/</guid>
      <description>There are a lot of APIs on Google. When we use Google Drive APIs, they usually have &amp;ldquo;fields&amp;rdquo; as a resource. The parameter &amp;ldquo;fields&amp;rdquo; gives various information which is selected to us. This is one of important parameters. And this can be used at Google Apps Script (GAS) although that version is v2. About how to use it, there are some documents. But it is difficult to find how to use it at GAS.</description>
    </item>
    
    <item>
      <title>Retrieving File ID from File Name using GAS</title>
      <link>https://tanaikech.github.io/2017/03/23/retrieving-file-id-from-file-name-using-gas/</link>
      <pubDate>Thu, 23 Mar 2017 14:24:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/23/retrieving-file-id-from-file-name-using-gas/</guid>
      <description>This is a sample script of GAS for converting file name to file id on Google Drive. Drive API is used for this. So please enable Drive API at Advanced Drive Services and Google API Console.
function nameToId(filename){ return [i.id for each (i in Drive.Files.list({q: &amp;#34;title=&amp;#39;&amp;#34; + filename + &amp;#34;&amp;#39; and trashed=false&amp;#34;}).items)]; } </description>
    </item>
    
    <item>
      <title>Download Files Without Authorization From Google Drive</title>
      <link>https://tanaikech.github.io/2017/03/20/download-files-without-authorization-from-google-drive/</link>
      <pubDate>Mon, 20 Mar 2017 14:30:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/20/download-files-without-authorization-from-google-drive/</guid>
      <description>Overview In this article, files can be downloaded without authorization.
Description When we download files from Google Drive, it usually has to use Drive API. In order to use Drive API, access token is required. If you want to make your friends download files from your Google Drive, the authorization process is to take time. Also Web Link for each files can be used. But it has to set for each files.</description>
    </item>
    
    <item>
      <title>Create Folder Tree on Google Drive</title>
      <link>https://tanaikech.github.io/2017/03/13/create-folder-tree-on-google-drive/</link>
      <pubDate>Mon, 13 Mar 2017 13:27:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/13/create-folder-tree-on-google-drive/</guid>
      <description>This is a sample script for creating a folder tree including all folders in Google Drive. For each element, parent folder and sub folder are retrieved.
Script :
var results = (function(folder, folderSt, results){ var ar = []; var folders = folder.getFolders(); while(folders.hasNext()) ar.push(folders.next()); folderSt += folder.getName() + &amp;#34;(&amp;#34; + folder.getId() + &amp;#34;)#_aabbccddee_#&amp;#34;; var array_folderSt = folderSt.split(&amp;#34;#_aabbccddee_#&amp;#34;); array_folderSt.pop() results.push(array_folderSt); ar.length == 0 &amp;amp;&amp;amp; (folderSt = &amp;#34;&amp;#34;); for (var i in ar) arguments.</description>
    </item>
    
    <item>
      <title>Export CSV File from Spreadsheet and Make Download Button</title>
      <link>https://tanaikech.github.io/2017/02/20/export-csv-file-from-spreadsheet-and-make-download-button/</link>
      <pubDate>Mon, 20 Feb 2017 10:00:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/20/export-csv-file-from-spreadsheet-and-make-download-button/</guid>
      <description>This is a script to export a CSV file from spreadsheet and make an user download it. When the users download it, they can download by push a button made by this script.
In order to use this script, put both HTML and script in a GAS project.
html :
This file name is &amp;ldquo;download.html&amp;rdquo;.
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; Download CSV? &amp;lt;form&amp;gt; &amp;lt;input type=&amp;quot;button&amp;quot; value=&amp;quot;ok&amp;quot; onclick=&amp;quot;google.script.run .withSuccessHandler(executeDownload) .saveAsCSV();&amp;quot; /&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;script&amp;gt; function executeDownload(url) { window.</description>
    </item>
    
    <item>
      <title>Send E-mail with xlsx File Converted from Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/20/send-e-mail-with-xlsx-file-converted-from-spreadsheet/</link>
      <pubDate>Mon, 20 Feb 2017 09:56:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/20/send-e-mail-with-xlsx-file-converted-from-spreadsheet/</guid>
      <description>This is a script to send e-mail with a xlsx file converted from spreadsheet as an attachment file. Access token is necessary to use this script.
function excelSender() { var accesstoken = &amp;quot;[your accesstoken]&amp;quot;; var sheetID = &amp;quot;[sheet id]&amp;quot;; var xlsxName = &amp;quot;[output xlsx file name]&amp;quot; var params = { &amp;quot;headers&amp;quot; : {Authorization: &amp;quot;Bearer &amp;quot; + accesstoken}, &amp;quot;muteHttpExceptions&amp;quot; : true }; var dUrl = &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + sheetID + &amp;quot;/export?mimeType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot; var xlsxlFile = UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Google Drive API using GAS</title>
      <link>https://tanaikech.github.io/2017/02/17/retrieving-access-token-for-google-drive-api-using-gas/</link>
      <pubDate>Fri, 17 Feb 2017 17:25:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/17/retrieving-access-token-for-google-drive-api-using-gas/</guid>
      <description>These GASs retrieve an access token for using Google Drive API. There are 3 parts. Before you use this, please retrieve client ID, client secret and redirect uri from Google , and choose scopes.
1. Retrieving code from web This is a script to output URL for retrieving &amp;ldquo;code&amp;rdquo; from web. Please retrieve &amp;ldquo;code&amp;rdquo; by import this URL to your browser. After you run this script, using &amp;ldquo;url&amp;rdquo; got from this script, it retrieves &amp;ldquo;code&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Send E-mail with Excel file converted from Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/16/send-e-mail-with-excel-file-converted-from-spreadsheet/</link>
      <pubDate>Thu, 16 Feb 2017 11:53:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/16/send-e-mail-with-excel-file-converted-from-spreadsheet/</guid>
      <description>This sample script sends an e-mail with an Excel file exported from Spreadsheet as an attachment file.
function excelSender() { var sheetID = [Sheet ID]; var xlsxName = [Excel file name]; var params = { &amp;quot;headers&amp;quot; : {Authorization: &amp;quot;Bearer [Retrieved AccessToken]&amp;quot;}, &amp;quot;muteHttpExceptions&amp;quot; : true }; var dUrl = &amp;quot;https://www.googleapis.com/drive/v3/files/&amp;quot; + sheetID + &amp;quot;/export?mimeType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot; var xlsxlFile = UrlFetchApp.fetch(dUrl, params).getBlob().setName(xlsxName); MailApp.sendEmail({ to: [Mail address], subject: &amp;quot;sample subject&amp;quot;, body: &amp;quot;sample body&amp;quot;, attachments: [xlsxlFile] }); } Is ScriptApp.</description>
    </item>
    
    <item>
      <title>Download a CSV File from Spreadsheet Using Google HTML Service</title>
      <link>https://tanaikech.github.io/2017/02/16/download-a-csv-file-from-spreadsheet-using-google-html-service/</link>
      <pubDate>Thu, 16 Feb 2017 10:31:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/16/download-a-csv-file-from-spreadsheet-using-google-html-service/</guid>
      <description>Here, I introduce how to download a CSV file from spreadsheet using Google HTML Service.
 Using &amp;ldquo;onOpen()&amp;quot;, it addes menu for launching a dialog.   After launching the dialog, &amp;ldquo;getFileUrl()&amp;rdquo; is launched by pushing a button. &amp;ldquo;getFileUrl()&amp;rdquo; exports a CSV file and outputs download URL.
  The CSV file is downloaded by &amp;ldquo;executeDownload()&amp;quot;.
  Please put both HTML and GAS to a GAS project.HTML : download.html &amp;lt;!</description>
    </item>
    
    <item>
      <title>Making charts at spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/13/making-charts-at-spreadsheet/</link>
      <pubDate>Mon, 13 Feb 2017 08:57:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/13/making-charts-at-spreadsheet/</guid>
      <description>var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet(); var chart = sheet.newChart() .setChartType(Charts.ChartType.LINE) .asLineChart() .addRange(sheet.getRange(&#39;a1:a21&#39;)) .addRange(sheet.getRange(&#39;b1:b21&#39;)) .addRange(sheet.getRange(&#39;c1:c21&#39;)) .setColors([&amp;quot;green&amp;quot;, &amp;quot;red&amp;quot;]) .setBackgroundColor(&amp;quot;black&amp;quot;) .setPosition(5, 5, 0, 0) .setPointStyle(Charts.PointStyle.MEDIUM) .setOption(&#39;useFirstColumnAsDomain&#39;, true) .setOption(&#39;height&#39;, 280) .setOption(&#39;width&#39;, 480) .setOption(&#39;title&#39;, &#39;Sample chart&#39;) .setOption(&#39;hAxis&#39;, { title: &#39;x axis&#39;, minValue: 0, maxValue: 20, titleTextStyle: { color: &#39;#c0c0c0&#39;, fontSize: 20, italic: false, bold: false }, textStyle: { color: &#39;#c0c0c0&#39;, fontSize: 12, bold: false, italic: false }, baselineColor: &#39;#c0c0c0&#39;, gridlines: { color: &#39;#c0c0c0&#39;, count: 4 } }) .</description>
    </item>
    
    <item>
      <title>Event of onEdit() for Google spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/07/event-of-onedit-for-google-spreadsheet/</link>
      <pubDate>Tue, 07 Feb 2017 11:03:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/07/event-of-onedit-for-google-spreadsheet/</guid>
      <description>About Event Objects For example, it thinks the situation of input text of &amp;lsquo;test&amp;rsquo; to &amp;lsquo;A1&amp;rsquo; on a sheet.
When you use only &amp;lsquo;onEdit(e)&amp;rsquo; without an installing trigger, &amp;lsquo;e&amp;rsquo; has following parameters.
{authMode=LIMITED, range=Range, source=Spreadsheet, user=, value=test}  In this case, the event cannot send an e-mail because of &amp;lsquo;authMode=LIMITED&amp;rsquo;.
When you use &amp;ldquo;onEdit(e)&amp;rdquo; with an installing trigger of &amp;ldquo;Edit&amp;rdquo;, &amp;lsquo;e&amp;rsquo; has following parameters.
{authMode=FULL, range=Range, source=Spreadsheet, value=test, triggerUid=#####}  In this case, the event can send an e-mail because of &amp;lsquo;authMode=FULL&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>File upload using doPost on Google Web Apps</title>
      <link>https://tanaikech.github.io/2017/02/05/file-upload-using-dopost-on-google-web-apps/</link>
      <pubDate>Sun, 05 Feb 2017 11:40:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/05/file-upload-using-dopost-on-google-web-apps/</guid>
      <description>File upload using HTML form in GAS project Rule
  Following scripts have to be made into a project of Google Apps Script.
  Deploy the GAS project as a web application. Ref
  After updated the script, it has to be updated as a new version.
  Form.html :
&amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form&amp;gt; &amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;imageFile&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;button&amp;quot; value=&amp;quot;ok&amp;quot; onclick=&amp;quot;google.script.run.upload(this.parentNode)&amp;quot;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; GAS :
function doGet() { return HtmlService.</description>
    </item>
    
    <item>
      <title>Retrieving cells without blank using GAS</title>
      <link>https://tanaikech.github.io/2017/02/03/retrieving-cells-without-blank-using-gas/</link>
      <pubDate>Fri, 03 Feb 2017 10:14:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/03/retrieving-cells-without-blank-using-gas/</guid>
      <description>This is a sample script for retrieving cells without blank cells. Figure 1 shows the sample spreadsheet. In this sheet, the row 14 has one space.           Fig. 1: Sample spreadsheet.    Data is retrieved as follows.
 var data = SpreadsheetApp .getActiveSpreadsheet() .getActiveSheet() .getRange(&#39;a1:a30&#39;) .getValues(); 1. Retrieving cells with spaces and no blank cells.  var Result = [i for each (i in data)if (i)].</description>
    </item>
    
  </channel>
</rss>