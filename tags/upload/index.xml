<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>upload on tanaike</title>
    <link>https://tanaikech.github.io/tags/upload/</link>
    <description>Recent content in upload on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 23 May 2024 15:47:28 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/upload/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Updated: Javascript library - ResumableUploadForGoogleDrive_js</title>
      <link>https://tanaikech.github.io/2024/05/23/updated-javascript-library-resumableuploadforgoogledrive_js/</link>
      <pubDate>Thu, 23 May 2024 15:47:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/23/updated-javascript-library-resumableuploadforgoogledrive_js/</guid>
      <description>ResumableUploadForGoogleDrive_js was updated to v2.0.2.
  v2.0.2 (May 23, 2024)
 From this version, the files could be also uploaded to the shared drive.    CDN Class ResumableUploadToGoogleDrive This Class can achieve the resumable upload of a file by reading the file to the memory.
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/tanaikech/ResumableUploadForGoogleDrive_js@2.0.2/resumableupload_js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Class ResumableUploadToGoogleDrive2 This Class can achieve the resumable upload of a file by directly reading partially the file from the local Disk.</description>
    </item>
    
    <item>
      <title>Uploading Files without Authorizing Scopes by Shared Users with Dialog on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/11/08/uploading-files-without-authorizing-scopes-by-shared-users-with-dialog-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 08 Nov 2023 15:25:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/11/08/uploading-files-without-authorizing-scopes-by-shared-users-with-dialog-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Abstract One day, you might have a situation where you are required to make the shared users upload a file and text using a dialog or sidebar on Google Spreadsheet to your Google Drive and Spreadsheet without authorization by the users. This report introduces a solution for achieving this situation.
Introduction Google Spreadsheet can run Javascript on a dialog and a sidebar. Ref These can be used as a strong tool for working on Spreadsheet.</description>
    </item>
    
    <item>
      <title>Uploading Video File on Google Drive to YouTube with Resumable Upload using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/11/13/uploading-video-file-on-google-drive-to-youtube-with-resumable-upload-using-google-apps-script/</link>
      <pubDate>Sun, 13 Nov 2022 14:30:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/11/13/uploading-video-file-on-google-drive-to-youtube-with-resumable-upload-using-google-apps-script/</guid>
      <description>Gists
This is a simple sample script for uploading a video file on Google Drive to YouTube with the resumable upload using Google Apps Script.
When you want to upload a video file to YouTube using Google Apps Script, when YouTube API of Advanced Google services is used, the maximum file size is 5 MB, because, in this case, the video file is uploaded with multipart/form-data. When you want to use a video file with more file size using Google Apps Script, a resumable upload is required to be used.</description>
    </item>
    
    <item>
      <title>Curl Command Uploading Video File to YouTube with Resumable Upload using YouTube API</title>
      <link>https://tanaikech.github.io/2022/11/11/curl-command-uploading-video-file-to-youtube-with-resumable-upload-using-youtube-api/</link>
      <pubDate>Fri, 11 Nov 2022 21:34:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/11/11/curl-command-uploading-video-file-to-youtube-with-resumable-upload-using-youtube-api/</guid>
      <description>Gists
This is a sample curl command for uploading a video file to YouTube with the resumable upload using YouTube API.
In order to upload a video file to YouTube with the resumable upload using YouTube API, the following 2 processes are required to be done. The basic process of the resumable upload for YouTube is the same with Drive API. Ref So, I think that this document of Drive API might be useful for understanding the resumable upload process.</description>
    </item>
    
    <item>
      <title>Sample Script for Resumable Upload to Google Drive using Axios with Node.js</title>
      <link>https://tanaikech.github.io/2022/08/07/sample-script-for-resumable-upload-to-google-drive-using-axios-with-node.js/</link>
      <pubDate>Sun, 07 Aug 2022 09:26:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/08/07/sample-script-for-resumable-upload-to-google-drive-using-axios-with-node.js/</guid>
      <description>Gists
This is a sample script for the resumable upload using Axios with Node.js.
Sample script In this sample script, as a sample situation in order to explain the resumable upload, the file data is loaded from the local PC, and the data is uploaded to Google Drive with the resumable upload.
const axios = require(&amp;#34;axios&amp;#34;); const fs = require(&amp;#34;fs&amp;#34;).promises;  async function sample() {  const filepath = &amp;#34;./###&amp;#34;; // Please set the filename and file path of the upload file.</description>
    </item>
    
    <item>
      <title>Updated: Javascript library - ResumableUploadForGoogleDrive_js</title>
      <link>https://tanaikech.github.io/2021/11/15/updated-javascript-library-resumableuploadforgoogledrive_js/</link>
      <pubDate>Mon, 15 Nov 2021 15:38:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/11/15/updated-javascript-library-resumableuploadforgoogledrive_js/</guid>
      <description>ResumableUploadForGoogleDrive_js was updated to v2.0.0.
  v2.0.0 (November 15, 2021)
 New Class ResumableUploadToGoogleDrive2 was added. By this, the large file which is over the memory in the local PC can be uploaded by the resumable upload.    Overview This is a Javascript library to achieve the resumable upload for Google Drive.
Description When a file more than 5 MB is uploaded to Google Drive with Drive API, the resumable upload is required to be used.</description>
    </item>
    
    <item>
      <title>Uploading Movie File on Google Drive to YouTube using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/11/02/uploading-movie-file-on-google-drive-to-youtube-using-google-apps-script/</link>
      <pubDate>Tue, 02 Nov 2021 14:15:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/11/02/uploading-movie-file-on-google-drive-to-youtube-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for uploading a movie file on Google Drive to YouTube using Google Apps Script.
Before you use these scripts, please enable YouTube API at Advanced Google services. Ref
Sample script 1 This sample script uses YouTube API at Advanced Google services.
function myFunction() {  const fileId = &amp;#34;###&amp;#34;; // Please set the file ID of movie file on the Google Drive.   const res = YouTube.</description>
    </item>
    
    <item>
      <title>Simple Script of Resumable Upload with Google Drive API for Axios</title>
      <link>https://tanaikech.github.io/2021/01/05/simple-script-of-resumable-upload-with-google-drive-api-for-axios/</link>
      <pubDate>Tue, 05 Jan 2021 21:18:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/05/simple-script-of-resumable-upload-with-google-drive-api-for-axios/</guid>
      <description>Gists
This is a simple sample script for achieving the resumable upload to Google Drive using Axios. In order to achieve the resumable upload, at first, it is required to retrieve the location, which is the endpoint of upload. The location is included in the response headers. After the location was retrieved, the file can be uploaded to the location URL.
In this sample, a text data is uploaded with the resumable upload using a single chunk.</description>
    </item>
    
    <item>
      <title>Downloading and Uploading File to Google Drive without Saving File with Stream and Resumable Upload using Node.js</title>
      <link>https://tanaikech.github.io/2021/01/05/downloading-and-uploading-file-to-google-drive-without-saving-file-with-stream-and-resumable-upload-using-node.js/</link>
      <pubDate>Tue, 05 Jan 2021 15:38:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/05/downloading-and-uploading-file-to-google-drive-without-saving-file-with-stream-and-resumable-upload-using-node.js/</guid>
      <description>Gists
This is a sample script of Node.js for downloading the data and uploading the data to Google Drive with the resumable upload without saving it as a file. The downloaded data is uploaded to Google Drive with the stream.
Sample script Before you use this, please set the variables of accessToken, url, fileSize, mimeType and filename. In this case, fileSize is required to set because the data is uploaded with the resumable upload.</description>
    </item>
    
    <item>
      <title>Safe-Uploading for Google Drive by HTML in External Server using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</link>
      <pubDate>Tue, 29 Dec 2020 11:13:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</guid>
      <description>Overview This is a report for safe-uploading files to Google Drive by HTML put in the external server using Google Apps Script.
Description When you want to make the user upload a file to your own Google Drive using the HTML put in the external server of Google side, when the file size is smaller than 50 MB, this can be achieved without using the access token. Ref (When the HTML is put in the internal server of Google side, you can also use google.</description>
    </item>
    
    <item>
      <title>Using Values Submitted from HTML Form using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/09/04/using-values-submitted-from-html-form-using-google-apps-script/</link>
      <pubDate>Fri, 04 Sep 2020 14:58:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/04/using-values-submitted-from-html-form-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for using the values submitted from the HTML form using Google Apps Script and Javascript. In this case, the values include the files.
Issue &amp;lt;form&amp;gt;  Text: &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;sampleText1&amp;#34; /&amp;gt;&amp;lt;br /&amp;gt;  Single file: &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;sampleFile1&amp;#34; /&amp;gt;&amp;lt;br /&amp;gt;  &amp;lt;input  type=&amp;#34;submit&amp;#34;  name=&amp;#34;button&amp;#34;  value=&amp;#34;submit&amp;#34;  onclick=&amp;#34;main(this.parentNode)&amp;#34;  /&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;script&amp;gt;  function main(e) {  google.script.run.sample(e);  } &amp;lt;/script&amp;gt; This is a simple sample script for sending the values of form to Google Apps Script.</description>
    </item>
    
    <item>
      <title>Uploading File to Google Drive from External HTML without Authorization</title>
      <link>https://tanaikech.github.io/2020/08/13/uploading-file-to-google-drive-from-external-html-without-authorization/</link>
      <pubDate>Thu, 13 Aug 2020 15:27:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/13/uploading-file-to-google-drive-from-external-html-without-authorization/</guid>
      <description>Gists
This is a sample script for uploading a file to Google Drive from the external HTML without the authorization. In this case, the client side can be used at the outside of Google. And as the server side, the Web Apps created by Google Apps Script is used.
Usage Please do the following flow.
1. Create new project of Google Apps Script. Sample script of Web Apps is a Google Apps Script.</description>
    </item>
    
    <item>
      <title>Uploading Files of multipart/form-data to Google Drive using Drive API with Node.js</title>
      <link>https://tanaikech.github.io/2020/07/30/uploading-files-of-multipart/form-data-to-google-drive-using-drive-api-with-node.js/</link>
      <pubDate>Thu, 30 Jul 2020 11:13:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/30/uploading-files-of-multipart/form-data-to-google-drive-using-drive-api-with-node.js/</guid>
      <description>Gists
These are the sample scripts for uploading files of multipart/form-data to Google Drive using Drive API with Node.js. In this case, googleapis for Node.js is not used.
In these sample script, the maximum file size is 5 MB. Please be careful this. When you want to upload the files more than 5 MB, please check this report.
Sample script 1 This sample script uploads a file using the modules of fs and request.</description>
    </item>
    
    <item>
      <title>Updating a File with Resumable Upload using Drive API</title>
      <link>https://tanaikech.github.io/2020/04/20/updating-a-file-with-resumable-upload-using-drive-api/</link>
      <pubDate>Mon, 20 Apr 2020 14:41:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/20/updating-a-file-with-resumable-upload-using-drive-api/</guid>
      <description>Gists
This is a sample flow for updating a file with the resumable upload using Drive API.
Sample situation: In this answer, as a sample situation, it supposes that a text file in Google Drive is updated by the resumable upload with the multiple chunks. And as the method for requesting, I use the curl command.
I prepared 2 files for 2 chunks. As the test situation, the 2 chunks of 262,144 bytes and 37,856 bytes are uploaded.</description>
    </item>
    
    <item>
      <title>Simple Script of Resumable Upload with Google Drive API for Python</title>
      <link>https://tanaikech.github.io/2020/03/05/simple-script-of-resumable-upload-with-google-drive-api-for-python/</link>
      <pubDate>Thu, 05 Mar 2020 14:10:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/05/simple-script-of-resumable-upload-with-google-drive-api-for-python/</guid>
      <description>Gists
This is a simple sample script for achieving the resumable upload to Google Drive using Python. In order to achieve the resumable upload, at first, it is required to retrieve the location, which is the endpoint of upload. The location is included in the response headers. After the location was retrieved, the file can be uploaded to the location URL.
In this sample, a PNG file is uploaded with the resumable upload using a single chunk.</description>
    </item>
    
    <item>
      <title>Simple Script of Resumable Upload with Google Drive API for Node.js</title>
      <link>https://tanaikech.github.io/2020/03/05/simple-script-of-resumable-upload-with-google-drive-api-for-node.js/</link>
      <pubDate>Thu, 05 Mar 2020 13:48:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/05/simple-script-of-resumable-upload-with-google-drive-api-for-node.js/</guid>
      <description>Gists
This is a simple sample script for achieving the resumable upload to Google Drive using Node.js. In order to achieve the resumable upload, at first, it is required to retrieve the location, which is the endpoint of upload. The location is included in the response headers. After the location was retrieved, the file can be uploaded to the location URL.
In this sample, a PNG file is uploaded with the resumable upload using a single chunk.</description>
    </item>
    
    <item>
      <title>Uploading File to Google Drive using HTML and Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/02/18/uploading-file-to-google-drive-using-html-and-google-apps-script/</link>
      <pubDate>Tue, 18 Feb 2020 08:36:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/18/uploading-file-to-google-drive-using-html-and-google-apps-script/</guid>
      <description>Gists
This is a simple sample script for uploading a file using the file input tag of HTML. As the important point, the file is sent as the byte array for using Google Apps Script. By this, at Google Apps Script side, the byte array can be converted to a blob using a simple script.
HTML &amp;amp; Javascript &amp;lt;input id=&amp;#34;file&amp;#34; type=&amp;#34;file&amp;#34; onchange=&amp;#34;saveFile(this)&amp;#34; /&amp;gt; &amp;lt;script&amp;gt;  function saveFile(f) {  const file = f.</description>
    </item>
    
    <item>
      <title>Resumable Upload of Multiple Files with Asynchronous Process for Google Drive</title>
      <link>https://tanaikech.github.io/2019/10/14/resumable-upload-of-multiple-files-with-asynchronous-process-for-google-drive/</link>
      <pubDate>Mon, 14 Oct 2019 11:06:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/14/resumable-upload-of-multiple-files-with-asynchronous-process-for-google-drive/</guid>
      <description>Overview This is a sample script for uploading multiple files with large size (&amp;gt; 50 MB) at the sidebar, dialog of Google Docs and Web Apps using the resumable upload of the asynchronous process with Javascript and Google Apps Script (GAS).
Demo This is a demonstration of this script. As a demonstration, it uploads 5 files with the size of 100 MB to own Google Drive. When the files were selected and the upload button is clicked, those are uploaded by the resumable upload with the asynchronous process.</description>
    </item>
    
    <item>
      <title>Javascript library - ResumableUploadForGoogleDrive_js</title>
      <link>https://tanaikech.github.io/2019/10/11/javascript-library-resumableuploadforgoogledrive_js/</link>
      <pubDate>Fri, 11 Oct 2019 13:07:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/11/javascript-library-resumableuploadforgoogledrive_js/</guid>
      <description>Overview This is a Javascript library to achieve the resumable upload for Google Drive.
Description When a file more than 5 MB is uploaded to Google Drive with Drive API, the resumable upload is required to be used. I have already published the sample script for &amp;ldquo;Resumable Upload for Web Apps using Google Apps Script&amp;rdquo;. Ref In this case, Web Apps is used. Here, I would like to introduce the script for the resumable upload created by only Javascript.</description>
    </item>
    
    <item>
      <title>Resumable Uploading Files to Google Drive using Golang</title>
      <link>https://tanaikech.github.io/2019/07/23/resumable-uploading-files-to-google-drive-using-golang/</link>
      <pubDate>Tue, 23 Jul 2019 15:11:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/23/resumable-uploading-files-to-google-drive-using-golang/</guid>
      <description>Gists
This is a sample script for the resumable upload of Files to Google Drive using Golang. This script uses the library of google-api-go-client. About the installation of google-api-go-client, please check the Quickstart for golang at the official site.
Sample script: package mainimport (&amp;#34;context&amp;#34;&amp;#34;encoding/json&amp;#34;&amp;#34;fmt&amp;#34;&amp;#34;io/ioutil&amp;#34;&amp;#34;log&amp;#34;&amp;#34;net/http&amp;#34;&amp;#34;os&amp;#34;drive &amp;#34;google.golang.org/api/drive/v3&amp;#34;&amp;#34;golang.org/x/oauth2&amp;#34;&amp;#34;golang.org/x/oauth2/google&amp;#34;&amp;#34;golang.org/x/oauth2/jwt&amp;#34;)// ServiceAccount : Use Service accountfunc ServiceAccount(credentialFile string) *http.Client {b, err := ioutil.</description>
    </item>
    
    <item>
      <title>Creating New Google Docs and Overwriting Existing Google Docs by Text with Node.js without using googleapis</title>
      <link>https://tanaikech.github.io/2019/04/02/creating-new-google-docs-and-overwriting-existing-google-docs-by-text-with-node.js-without-using-googleapis/</link>
      <pubDate>Tue, 02 Apr 2019 16:33:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/02/creating-new-google-docs-and-overwriting-existing-google-docs-by-text-with-node.js-without-using-googleapis/</guid>
      <description>Gists
There are 2 sample scripts.
 Create new Spreadsheet using a text value as CSV data. Overwrite the existing Google Document using a text value.  When you use these script, please enable Drive API and retrieve your access token.
Create New Spreadsheet using Text Value const request = require(&amp;#39;request&amp;#39;);  const textData = &amp;#34;a1, b1, c1, d1, e1&amp;#34;; // This is used as CSV data. const orgMimeType = &amp;#34;text/csv&amp;#34;; const orgFileName = &amp;#34;sample.</description>
    </item>
    
    <item>
      <title>Uploading File to Shared Folder using ggsrun</title>
      <link>https://tanaikech.github.io/2019/03/30/uploading-file-to-shared-folder-using-ggsrun/</link>
      <pubDate>Sat, 30 Mar 2019 16:42:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/30/uploading-file-to-shared-folder-using-ggsrun/</guid>
      <description>Gists
ggsrun is also a CLI application for using Google Drive.
Here, I would like to introduce a sample command. This is a sample command for uploading a file to a shared folder using ggsrun.
This situation supposes that the shared folder is https://drive.google.com/drive/folders/abcdefg?usp=sharing and the folder has the edit permission.
Sample command: $ ggsrun u -f &amp;#34;sample.txt&amp;#34; -p &amp;#34;abcdefg&amp;#34; --serviceaccount &amp;#34;###JSON file of Service Account###&amp;#34;  If you have already used OAuth2, you can upload the file by ggsrun u -f &amp;quot;sample.</description>
    </item>
    
    <item>
      <title>Uploading Multiple Files From Local To Google Drive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/12/22/uploading-multiple-files-from-local-to-google-drive-using-google-apps-script/</link>
      <pubDate>Sat, 22 Dec 2018 16:44:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/22/uploading-multiple-files-from-local-to-google-drive-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for uploading multiple files from local PC to Google Drive using Google Apps Script. The dialog, sidebar and Web Apps can be used as the GUI interface.
Sample 1 In this sample, the following flow is run.
 Select files at browser. Upload the files every file. Save each file in Google Drive.  When you use this, please copy and paste the Google Apps Script and HTML to the script editor, and run the HTML using the dialog, sidebar and Web Apps.</description>
    </item>
    
    <item>
      <title>Upload Files to Google Drive using Javascript</title>
      <link>https://tanaikech.github.io/2018/08/13/upload-files-to-google-drive-using-javascript/</link>
      <pubDate>Mon, 13 Aug 2018 10:16:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/13/upload-files-to-google-drive-using-javascript/</guid>
      <description>Gists
News At October 11, 2019, I published a Javascript library to to run the resumable upload for Google Drive. When this is used, the large file can be uploaded. You can also use this js library.
Description This is a sample script for uploading files to Google Drive using Javascript. The files are uploaded by Drive API v3. gapi.client.drive.files.create() can create an empty file on Google Drive. But it cannot directly upload files including contents.</description>
    </item>
    
    <item>
      <title>Uploading Files From Local To Google Drive by Python without Quickstart</title>
      <link>https://tanaikech.github.io/2018/02/12/uploading-files-from-local-to-google-drive-by-python-without-quickstart/</link>
      <pubDate>Mon, 12 Feb 2018 11:39:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/12/uploading-files-from-local-to-google-drive-by-python-without-quickstart/</guid>
      <description>Gists
This is a sample script for uploading files from local PC to Google Drive using Python. In this sample, Quickstart is not used. So when you use this script, please retrieve access token.
Curl sample : curl -X POST \  -H &amp;#34;Authorization: Bearer ### access token ###&amp;#34; \  -F &amp;#34;metadata={name : &amp;#39;sample.png&amp;#39;, parents: [&amp;#39;### folder ID ###&amp;#39;]};type=application/json;charset=UTF-8&amp;#34; \  -F &amp;#34;file=@sample.png;type=image/png&amp;#34; \  &amp;#34;https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&amp;#34; ]
Python sample : When above curl sample is converted to Python, it becomes as follows.</description>
    </item>
    
    <item>
      <title>Uploading Local Files to Google Drive without Authorization using HTML Form</title>
      <link>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</link>
      <pubDate>Mon, 06 Nov 2017 08:54:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</guid>
      <description>Gists
This is a sample script for uploading local file to Google Drive without the authorization using HTML form. A selected file in your local PC using HTML form is uploaded to Google Drive and saved to Google Drive.
When you use this, at first, please deploy Web Apps. The script is doPost() of following scripts.
Script : Google Apps Script function doPost(e) {  var data = Utilities.base64Decode(e.parameters.data);  var blob = Utilities.</description>
    </item>
    
    <item>
      <title>Uploading CSV File as Spreadsheet and Modifying Permissions using Golang</title>
      <link>https://tanaikech.github.io/2017/09/21/uploading-csv-file-as-spreadsheet-and-modifying-permissions-using-golang/</link>
      <pubDate>Thu, 21 Sep 2017 15:43:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/21/uploading-csv-file-as-spreadsheet-and-modifying-permissions-using-golang/</guid>
      <description>Gists
This sample script is for uploading CSV file as Spreadsheet and modifying permissions using Golang.
I think that the detail information of google-api-go-client is a bit little. The sample scripts are so little. It retrieves most information from only godoc and GitHub. So I publish such sample scripts here. If this is useful for you, I&amp;rsquo;m glad.
Important points :  Give mimeType of file that it wants to upload to options of Media(r io.</description>
    </item>
    
    <item>
      <title>Uploading Image Files to Slack Using Incoming Webhooks by Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</link>
      <pubDate>Thu, 07 Sep 2017 12:37:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</guid>
      <description>Gist
This sample script is for uploading image files to Slack using Incoming Webhooks by Google Apps Script.
When users try to upload image files to Slack using Incoming Webhooks, it has been known that although the access token is required to directly upload them, Incoming Webhooks can upload them by using the tag of image_url. In this sample script, it uploads image files (BMP, GIF, JPEG and PNG) on Google Drive to Slack using Incoming Webhooks.</description>
    </item>
    
    <item>
      <title>Uploading Files to OneDrive Using Node.js</title>
      <link>https://tanaikech.github.io/2017/08/15/uploading-files-to-onedrive-using-node.js/</link>
      <pubDate>Tue, 15 Aug 2017 10:00:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/15/uploading-files-to-onedrive-using-node.js/</guid>
      <description>Gists
Upload contents for an item on OneDrive In order to use this script, please retrieve client id, client secret and refresh token before. About this, you can see the detail information at https://gist.github.com/tanaikech/d9674f0ead7e3320c5e3184f5d1b05cc.
1. Simple item upload This is for the simple item upload is available for items with less than 4 MB of content. The detail information is https://dev.onedrive.com/items/upload_put.htm.
var fs = require(&amp;#39;fs&amp;#39;); var mime = require(&amp;#39;mime&amp;#39;); var request = require(&amp;#39;request&amp;#39;);  var file = &amp;#39;.</description>
    </item>
    
  </channel>
</rss>
