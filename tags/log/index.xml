<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Log on tanaike</title>
    <link>https://tanaikech.github.io/tags/log/</link>
    <description>Recent content in Log on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 29 Jul 2020 09:24:27 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/log/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Workaround: Showing Log in Web Apps to Apps Script Dashboard using Javascript</title>
      <link>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</link>
      <pubDate>Wed, 29 Jul 2020 09:24:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</guid>
      <description>Gists
I have already reported for showing the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps. Ref In order to show the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps, it is required to use the access token. But in the current stage, when the access token is used for XMLHttpRequest and fetch of Javascript in the request headers, the error related to CORS occurs.</description>
    </item>
    
    <item>
      <title>Logs in Web Apps for Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/26/logs-in-web-apps-for-google-apps-script/</link>
      <pubDate>Sun, 26 Jul 2020 08:26:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/26/logs-in-web-apps-for-google-apps-script/</guid>
      <description>Gists
This is a report for retrieving the logs in Web Apps for Google Apps Script, when it requests to the Web Apps.
Experimental condition 1. Sample script for Web Apps const doGet = (e) =&amp;gt; {  Logger.log(`GET method: ${JSON.stringify(e)}`);  console.log(`GET method: ${JSON.stringify(e)}`);  return ContentService.createTextOutput(  JSON.stringify({ method: &amp;#34;GET&amp;#34;, e: e })  ); }; const doPost = (e) =&amp;gt; {  Logger.log(`POST method: ${JSON.stringify(e)}`);  console.log(`POST method: ${JSON.</description>
    </item>
    
  </channel>
</rss>
