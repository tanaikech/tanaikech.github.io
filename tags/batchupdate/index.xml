<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>batchUpdate on tanaike</title>
    <link>https://tanaikech.github.io/tags/batchupdate/</link>
    <description>Recent content in batchUpdate on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 20 Jul 2020 16:34:16 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/batchupdate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Request Body of String JSON for Google APIs with googleapis of golang</title>
      <link>https://tanaikech.github.io/2020/07/20/using-request-body-of-string-json-for-google-apis-with-googleapis-of-golang/</link>
      <pubDate>Mon, 20 Jul 2020 16:34:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/20/using-request-body-of-string-json-for-google-apis-with-googleapis-of-golang/</guid>
      <description>Gists
This is a sample script for directly using the request body of the string JSON for Google APIs with googleapis of golang.
At googleapis for golang, when Google API is used, it is required to create the request body like this sample script. I have several contacts for creating about such request body. I thought that such script might be a bit difficult for users. I thought that when the string JSON object is directly used for this, it might be useful.</description>
    </item>
    
    <item>
      <title>Setting Number Format of Cells on Google Spreadsheet using batchUpdate in Sheets API with golang</title>
      <link>https://tanaikech.github.io/2020/07/19/setting-number-format-of-cells-on-google-spreadsheet-using-batchupdate-in-sheets-api-with-golang/</link>
      <pubDate>Sun, 19 Jul 2020 16:11:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/19/setting-number-format-of-cells-on-google-spreadsheet-using-batchupdate-in-sheets-api-with-golang/</guid>
      <description>Gists
This is a sample script for setting the number format of cells on Google Spreadsheet using batchUpdate in Sheets API with golang. In this case, googleapis for golang is used. The script of the authorization can be seen at the official document.
Sample script In this script, the number format of the column &amp;ldquo;A&amp;rdquo; is changed to yyyy-mm-dd hh:mm:ss. And, please include https://www.googleapis.com/auth/spreadsheets to the scopes.
sheetId := 12345678 // Please set the sheet ID which is not Spreadsheet ID.</description>
    </item>
    
    <item>
      <title>Append Values by Inserting Rows using Google Sheets API</title>
      <link>https://tanaikech.github.io/2018/02/27/append-values-by-inserting-rows-using-google-sheets-api/</link>
      <pubDate>Tue, 27 Feb 2018 09:51:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/27/append-values-by-inserting-rows-using-google-sheets-api/</guid>
      <description>Gists
In the case appending values to cell by inserting rows, when sheets.spreadsheets.values.append is used, the values are appended to the next empty row of the last row. If you want to append values to between cells with values by inserting row, you can achieve it using sheets.spreadsheets.batchUpdate.
When you use this, please use your access token.
Endpoint : POST https://sheets.googleapis.com/v4/spreadsheets/### spreadsheet ID ###:batchUpdateRequest body : In this request body, it appends the data of &amp;ldquo;sample1, sample2, sample3&amp;rdquo; to &amp;ldquo;A1:A3&amp;rdquo; of the sheetId of &amp;ldquo;1234567890&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>spreadsheets.values.batchUpdate using Golang</title>
      <link>https://tanaikech.github.io/2017/09/15/spreadsheets.values.batchupdate-using-golang/</link>
      <pubDate>Fri, 15 Sep 2017 14:14:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/15/spreadsheets.values.batchupdate-using-golang/</guid>
      <description>Gists
Flow : In my sample script, the script was made using the Quickstart. The flow to use this sample script is as follows.
 For Go Quickstart, please do Step 1 and Step 2. Please put client_secret.json to the same directory with my sample script. Copy and paste my sample script, and create it as new script file. Run the script. When Go to the following link in your browser then type the authorization code: is shown on your terminal, please copy the URL and paste to your browser.</description>
    </item>
    
  </channel>
</rss>