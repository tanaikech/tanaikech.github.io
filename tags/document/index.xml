<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Document on tanaike</title>
    <link>https://tanaikech.github.io/tags/document/</link>
    <description>Recent content in Document on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 17 Mar 2025 14:42:15 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/document/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create Visualized Recipe Instructions with Gemini using Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/03/17/create-visualized-recipe-instructions-with-gemini-using-google-apps-script/</link>
      <pubDate>Mon, 17 Mar 2025 14:42:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/17/create-visualized-recipe-instructions-with-gemini-using-google-apps-script/</guid>
      <description>Gists
Abstract This report presents a Google Apps Script for generating visualized cooking recipes with text and images using the Gemini API, leveraging its image generation capabilities.
Introduction Recently, image generation was supported in the Gemini API using Gemini 2.0 Flash Experimental and Imagen 3. I have already reported a simple sample script for generating images using the Gemini API with Google Apps Script. Ref Google Apps Script seamlessly integrates with Google Docs, Sheets, and Slides.</description>
    </item>
    
    <item>
      <title>Workaround: Smart Chips with Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/03/15/workaround-smart-chips-with-google-apps-script/</link>
      <pubDate>Sat, 15 Mar 2025 13:48:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/15/workaround-smart-chips-with-google-apps-script/</guid>
      <description>Gists
Description Now, Google Docs and Google Sheets can insert smart chips. Smart chips are very useful for easily inserting information like users, maps, files, and so on. However, unfortunately, at the current stage, smart chips cannot be directly managed using Google Apps Script. Specifically, the information within smart chips cannot be directly retrieved by Google Apps Script. Although I believe this will be resolved in a future update, there might be cases where you want to retrieve information from smart chips using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Creating Tree Structure from Headings in Google Documents using Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/03/12/creating-tree-structure-from-headings-in-google-documents-using-google-apps-script/</link>
      <pubDate>Wed, 12 Mar 2025 14:13:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/12/creating-tree-structure-from-headings-in-google-documents-using-google-apps-script/</guid>
      <description>Gists
Description This is a Google Apps Script for creating the tree structure from headings in Google Documents.
Usage In order to test this script, please do the following steps.
1. Sample Document Create a sample Document as follows.
2. Sample script Open the script editor and copy and paste the following script.
In this script, Document service (DocumentApp) is used.
function sample1() {  const headTypes = [  &amp;#34;TITLE&amp;#34;,  &amp;#34;HEADING1&amp;#34;,  &amp;#34;HEADING2&amp;#34;,  &amp;#34;HEADING3&amp;#34;,  &amp;#34;HEADING4&amp;#34;,  &amp;#34;HEADING5&amp;#34;,  &amp;#34;HEADING6&amp;#34;,  ];  const body = DocumentApp.</description>
    </item>
    
    <item>
      <title>Technique for Changing Glyph Colors of Bullets in Google Documents Using Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/03/10/technique-for-changing-glyph-colors-of-bullets-in-google-documents-using-google-apps-script/</link>
      <pubDate>Mon, 10 Mar 2025 14:16:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/10/technique-for-changing-glyph-colors-of-bullets-in-google-documents-using-google-apps-script/</guid>
      <description>Gists
Description This report introduces a sample script for changing the glyph colors of bullets in lists on Google Documents using Google Apps Script. Currently, there are no built-in methods for achieving this using either the Document service (DocumentApp) or the Docs API. However, this can be accomplished through a specific process. This report will introduce that process using Google Apps Script.
Principle When the foreground color of the text within a list is changed using the Google Document service (DocumentApp), the bullet glyphs are not affected.</description>
    </item>
    
    <item>
      <title>Workaround: Export web-published Google Docs as PDFs using Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/12/12/workaround-export-web-published-google-docs-as-pdfs-using-google-apps-script/</link>
      <pubDate>Thu, 12 Dec 2024 12:04:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/12/12/workaround-export-web-published-google-docs-as-pdfs-using-google-apps-script/</guid>
      <description>Gists
Abstract This report outlines a Google Apps Script solution for directly exporting web-published Google Docs to PDF. By circumventing limitations in published URLs, the script enables convenient PDF generation without manual intervention.
Introduction Google Sheets and Google Docs offer the convenient feature of web publishing, providing readily accessible URLs for sharing. Ref
 Google Sheets: https://docs.google.com/spreadsheets/d/e/2PACX-###/pubhtml Google Docs: https://docs.google.com/document/d/e/2PACX-###/pub  These URLs utilize a unique ID (###) for each document.</description>
    </item>
    
    <item>
      <title>Unlocking Power: Leverage the Google Docs API Beyond Apps Script&#39;s Document Service</title>
      <link>https://tanaikech.github.io/2024/10/17/unlocking-power-leverage-the-google-docs-api-beyond-apps-scripts-document-service/</link>
      <pubDate>Thu, 17 Oct 2024 09:05:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/10/17/unlocking-power-leverage-the-google-docs-api-beyond-apps-scripts-document-service/</guid>
      <description>Gists
Abstract Google Apps Script offers Document service for basic document tasks and Google Docs API for advanced control, requiring more technical expertise. This report bridges the gap with sample scripts to unlock the API&amp;rsquo;s potential.
Introduction Google Apps Script provides two powerful tools for managing Google Documents: the Document service (DocumentApp) and the Google Docs API. Ref, Ref While the Document service offers a user-friendly interface for common document manipulation tasks within Apps Script, it has limitations.</description>
    </item>
    
    <item>
      <title>Convert Google Document to Markdown and vice versa using Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/07/23/convert-google-document-to-markdown-and-vice-versa-using-google-apps-script/</link>
      <pubDate>Tue, 23 Jul 2024 11:51:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/07/23/convert-google-document-to-markdown-and-vice-versa-using-google-apps-script/</guid>
      <description>Gists
Description Great news for fans of both Google Docs and Markdown! Google Docs recently acquired the ability to export documents directly into the markdown format. Ref
This functionality extends beyond the user interface, with early indications suggesting the Google Drive API might also be capable of converting between Google Docs and Markdown. I confirmed that this could also be achieved by Drive API. This opens exciting possibilities for automated workflows.</description>
    </item>
    
    <item>
      <title>Techniques for Creating Nested Lists on Google Documents using Google Docs API</title>
      <link>https://tanaikech.github.io/2024/05/28/techniques-for-creating-nested-lists-on-google-documents-using-google-docs-api/</link>
      <pubDate>Tue, 28 May 2024 17:09:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/28/techniques-for-creating-nested-lists-on-google-documents-using-google-docs-api/</guid>
      <description>Gists
Abstract Current Google Docs API documentation offers methods for working with existing lists but lacks instructions for creating nested lists in new documents. This report fills this gap, empowering developers and streamlining nested list creation using Google Apps Script (concepts applicable to other languages).
Introduction The official Google Docs API documentation provides instructions for working with existing lists, including converting paragraphs to lists and removing bullets. However, it lacks guidance on creating nested lists within an empty document body.</description>
    </item>
    
    <item>
      <title>Convert Soft Breaks to Hard Breaks on Google Documents using Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/04/02/convert-soft-breaks-to-hard-breaks-on-google-documents-using-google-apps-script/</link>
      <pubDate>Tue, 02 Apr 2024 14:59:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/04/02/convert-soft-breaks-to-hard-breaks-on-google-documents-using-google-apps-script/</guid>
      <description>Gists
Description This script converts soft breaks to hard breaks in a Google Document using Google Apps Script.
Usage Follow these steps:
1. Create a New Google Document Create a new Google Document and open it. Go to &amp;ldquo;View&amp;rdquo; -&amp;gt; &amp;ldquo;Show non-printing characters&amp;rdquo; in the top menu to see line breaks in the document body (as shown in the image below).
2. Sample Script Copy and paste the following script into the script editor of your Google Document.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - DocsServiceApp</title>
      <link>https://tanaikech.github.io/2024/01/30/updated-gas-library-docsserviceapp/</link>
      <pubDate>Tue, 30 Jan 2024 20:41:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/01/30/updated-gas-library-docsserviceapp/</guid>
      <description>DocsServiceApp was updated to v1.2.2   v1.2.2 (January 30, 2024)
 Remove a bug in ExcelApp. When the inserted image had no data, an error occurred. This issue was removed.    You can see the detail information here https://github.com/tanaikech/DocsServiceApp</description>
    </item>
    
    <item>
      <title>Semantic Search using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/01/25/semantic-search-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Thu, 25 Jan 2024 12:17:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/01/25/semantic-search-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Abstract Gemini API unlocks semantic search for Google Apps Script, boosting its power beyond automation. This report explores the result of attempting the semantic search using Gemini Pro API with Google Apps Script.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio opens a world of possibilities. Ref and Ref I believe Gemini API significantly expands the potential of Google Apps Script and paves the way for diverse applications.</description>
    </item>
    
    <item>
      <title>Inserting Generated Text to Google Documents, Google Spreadsheets, and Google Slides using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/12/22/inserting-generated-text-to-google-documents-google-spreadsheets-and-google-slides-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Fri, 22 Dec 2023 15:14:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/12/22/inserting-generated-text-to-google-documents-google-spreadsheets-and-google-slides-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Description When the generated text can be automatically inserted into the cursor position of Google Document, Google Spreadsheet, and Google Slide, it will be useful for users. This report introduces sample scripts for achieving this.
Sample scripts Here, I would like to introduce 3 sample scripts for a Google Document, a Google Spreadsheet, and a Google Slide.
Create an API key These sample scripts request Gemini Pro API using an API key.</description>
    </item>
    
    <item>
      <title>Managing Footnotes on Google Documents using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/12/13/managing-footnotes-on-google-documents-using-google-apps-script/</link>
      <pubDate>Wed, 13 Dec 2023 09:30:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/12/13/managing-footnotes-on-google-documents-using-google-apps-script/</guid>
      <description>Gists
Description Google Documents can be managed by the Document service of Google Apps Script. Ref One day, you might have a situation in which you are required to manage the footnotes on Google Documents using Google Apps Script. There are several official documents related to the footnotes for Google Apps Script. Ref and Ref However, unfortunately, I&amp;rsquo;m worried that it might be difficult a little to understand the management of the footnotes from these documents.</description>
    </item>
    
    <item>
      <title>Retrieve Comments with Emoji Reactions from Google Documents, Google Slides, and Google Spreadsheets using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/10/26/retrieve-comments-with-emoji-reactions-from-google-documents-google-slides-and-google-spreadsheets-using-google-apps-script/</link>
      <pubDate>Thu, 26 Oct 2023 15:44:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/10/26/retrieve-comments-with-emoji-reactions-from-google-documents-google-slides-and-google-spreadsheets-using-google-apps-script/</guid>
      <description>Gists
Abstract This report introduces the method for retrieving the Emoji reactions from the comments in Google Docs files (Google Documents, Google Slides, and Google Spreadsheets) using Google Apps Script.
Introduction Recently, the Emoji reactions have been implemented in the comments on Google Docs files (Google Documents, Google Slides, and Google Spreadsheets). Ref With this implementation, the collaborative work has been higher. Here, it is considered that when the Emoji reactions can be retrieved from the Google Docs files, the statistics of the reactions will be also more useful for increasing collaboration.</description>
    </item>
    
    <item>
      <title>Workaround: Exporting Google Documents as HTML with Image Hyperlinks</title>
      <link>https://tanaikech.github.io/2023/06/21/workaround-exporting-google-documents-as-html-with-image-hyperlinks/</link>
      <pubDate>Wed, 21 Jun 2023 13:23:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/06/21/workaround-exporting-google-documents-as-html-with-image-hyperlinks/</guid>
      <description>Gists
This is a sample script for exporting Google Documents as HTML with the image hyperlinks using Google Apps Script.
Recently, it seems that the specification for exporting Google Documents as HTML data has been changed. When a Google Document are exported as HTML data before, the images in the Google Document were the image hyperlinks, which are publicly shared. But, in the current stage, when a Google Document is exported as HTML data, the images in the Google Document are the data URL (base64 data) of the images.</description>
    </item>
    
    <item>
      <title>Inserting Paragraphs with Checkboxes in Google Documents using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/06/17/inserting-paragraphs-with-checkboxes-in-google-documents-using-google-apps-script/</link>
      <pubDate>Sat, 17 Jun 2023 10:17:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/06/17/inserting-paragraphs-with-checkboxes-in-google-documents-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for inserting the paragraphs with the checkboxes in Google Documents using Google Apps Script.
In the current stage, Google Documents can create paragraphs with checkboxes as the paragraph bullet. But, unfortunately, this cannot be created by the Google Document service (DocumentApp). Fortunately, it seems that this got to be able to be achieved by Google Docs API. In this post, I would like to introduce a sample script for this.</description>
    </item>
    
    <item>
      <title>Set Line Space of Paragraph on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/01/20/set-line-space-of-paragraph-on-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 20 Jan 2023 14:34:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/20/set-line-space-of-paragraph-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for setting the line space of paragraphs on Google Documents using Google Apps Script.
When the line space of a paragraph on Google Documents is manually set, you can do it as follows.
When it is set with Google Apps Script, the following script can be used.
function sample1() {  const doc = DocumentApp.getActiveDocument();  const body = doc.getBody();  const paragraph = body.</description>
    </item>
    
    <item>
      <title>Retrieving Values of Calendar Events of Smart Chips on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/10/27/retrieving-values-of-calendar-events-of-smart-chips-on-google-document-using-google-apps-script/</link>
      <pubDate>Thu, 27 Oct 2022 16:20:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/10/27/retrieving-values-of-calendar-events-of-smart-chips-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a workaround for retrieving the values and URLs from the smart chips inserted in Google Document using Google Apps Script.
Recently, the smart chips for Google Document are updated. Ref1 and Ref2 It is considered that this update will advance the collaboration for editing Document. So, there might a case that the information of the smart chips is required to be retrieved. Unfortunately, in the current stage, there are no methods for directly retrieving the information of the smart chips while the smart chips of DATE and PERSON can be retrieved.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - DocsServiceApp</title>
      <link>https://tanaikech.github.io/2022/09/29/updated-gas-library-docsserviceapp/</link>
      <pubDate>Thu, 29 Sep 2022 10:41:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/09/29/updated-gas-library-docsserviceapp/</guid>
      <description>Overview This is a Google Apps Script library for supporting Document service, Docs API, Spreadsheet service, Sheets API, Slides service and Slides API. The aim of this library is to compensate the processes that they services cannot achieve.
DocsServiceApp was updated to v1.2.0   v1.2.0 (September 29, 2022)
 Added a new method of getNamedFunctions(). This method can retrieve the named functions from Google Spreadsheet.    You can see the detail information here https://github.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - DocsServiceApp</title>
      <link>https://tanaikech.github.io/2022/09/28/updated-gas-library-docsserviceapp/</link>
      <pubDate>Wed, 28 Sep 2022 15:33:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/09/28/updated-gas-library-docsserviceapp/</guid>
      <description>Overview This is a Google Apps Script library for supporting Document service, Docs API, Spreadsheet service, Sheets API, Slides service and Slides API. The aim of this library is to compensate the processes that they services cannot achieve.
DocsServiceApp was updated to v1.1.0   v1.1.0 (September 28, 2022)
 Added a new method of getQuotePrefixCells(). This method can detect the cells with the quote prefix cells.    You can see the detail information here https://github.</description>
    </item>
    
    <item>
      <title>Removing Vertical Borders of Table in Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/09/23/removing-vertical-borders-of-table-in-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 23 Sep 2022 11:23:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/09/23/removing-vertical-borders-of-table-in-google-document-using-google-apps-script/</guid>
      <description>Gists
These are sample scripts for removing the vertical borders of a table in Google Document using Google Apps Script.
Unfortunately, in the current stage, only the vertical borders cannot be removed from the table in Google Document using the Google Document service (DocumentApp). I believe that this might be resolved in the future update. But, in the current stage, when Google Docs API is used, this can be achieved. So, Google Docs API can be used as the current workaround.</description>
    </item>
    
    <item>
      <title>Converting Large images to Google Document by OCR using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/09/06/converting-large-images-to-google-document-by-ocr-using-google-apps-script/</link>
      <pubDate>Tue, 06 Sep 2022 14:58:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/09/06/converting-large-images-to-google-document-by-ocr-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting the large images to Google Document by OCR using Google Apps Script.
When the image size, the image file size, the resolution of the image, and so on are large, an error like Request Too Large occurs. In this sample script, such the image can be converted to Google Document by reducing them.
Sample script Please enable Drive API at Advanced Google services.</description>
    </item>
    
    <item>
      <title>Updating Same Position on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/08/25/updating-same-position-on-google-document-using-google-apps-script/</link>
      <pubDate>Thu, 25 Aug 2022 10:34:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/08/25/updating-same-position-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for updating the same position on Google Document using Google Apps Script.
In this case, the named range is used. About the named range on Google Document, in the current stage, unfortunately, this cannot be used with the UI on Google Document. And, when I saw the official document of named range, I thought that this might be a bit difficult. Ref Ref So, I have created a Google Apps Script for managing the named range on Google Document.</description>
    </item>
    
    <item>
      <title>Replacing Images on Google Document in Order using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/07/27/replacing-images-on-google-document-in-order-using-google-apps-script/</link>
      <pubDate>Wed, 27 Jul 2022 09:19:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/07/27/replacing-images-on-google-document-in-order-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing images on Google Document in order using Google Apps Script.
Sample script This sample script uses Drive API and Docs API. So, please enable Drive API and Docs API at Advanced Google services. Ref
In this sample script, the images on Google Document are replaced with the image files on your Google Drive in order. Each image in Document is replaced in order of file Ids in fileIds.</description>
    </item>
    
    <item>
      <title>Retrieving Values of Dropdown List of Smart Chips on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/07/10/retrieving-values-of-dropdown-list-of-smart-chips-on-google-document-using-google-apps-script/</link>
      <pubDate>Sun, 10 Jul 2022 14:37:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/07/10/retrieving-values-of-dropdown-list-of-smart-chips-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the values of dropdown list of the smart chips on Google Document using Google Apps Script.
At August 23, 2021, 3 Classes for retrieving the smart chips have been added to Google Apps Script. But, in the current stage, unfortunately, all values of the smart chips cannot be retrieved by the Classes. For example, the dropdown list of the smart chips cannot be retrieved using the 3 Classes.</description>
    </item>
    
    <item>
      <title>GAS Library - DocNamedRangeApp</title>
      <link>https://tanaikech.github.io/2022/05/01/gas-library-docnamedrangeapp/</link>
      <pubDate>Sun, 01 May 2022 09:19:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/05/01/gas-library-docnamedrangeapp/</guid>
      <description>Overview This is a Google Apps Script library for managing the named range on Google Documents.
Description Google Document can use the named range. When the named range is used, the users can directly access the contents using the named range. For example, the developer can guide the users to the specific content in Google Documents using the named range. But, unfortunately, in the current stage, it seems that the named range cannot be directly used by the UI on Google Documents.</description>
    </item>
    
    <item>
      <title>Replacing Multiple Paragraphs on Google Document with a Regex using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/04/24/replacing-multiple-paragraphs-on-google-document-with-a-regex-using-google-apps-script/</link>
      <pubDate>Sun, 24 Apr 2022 10:17:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/04/24/replacing-multiple-paragraphs-on-google-document-with-a-regex-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing the multiple paragraphs on Google Document with a regex using Google Apps Script. There is the method of replaceText(searchPattern, replacement) for replacing the text on Google Document. Ref For example, when a text of sample1 is replaced with sample2, this can be achieved by a script like DocumentApp.getActiveDocument().getBody().replaceText(&amp;quot;sample1&amp;quot;, &amp;quot;sample2&amp;quot;). But, when the texts for replacing are the multiple paragraphs, this script cannot be used.</description>
    </item>
    
    <item>
      <title>Retrieving Summary of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/04/01/retrieving-summary-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 01 Apr 2022 10:42:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/04/01/retrieving-summary-of-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the summary of Google Document using Google Apps Script. Recently, a blog of Auto-generated Summaries in Google Docs has been posted. I thought that this is very interesting function. I thought that when this function is released, checking each summary of a lot of Google Document will be much useful for simply confirming the document content. And also, I thought that when all summaries can be retrieved using a script, it will be also useful.</description>
    </item>
    
    <item>
      <title>Report: Inserting Multiple Paragraphs to Google Document in Order using Google Docs API</title>
      <link>https://tanaikech.github.io/2022/02/12/report-inserting-multiple-paragraphs-to-google-document-in-order-using-google-docs-api/</link>
      <pubDate>Sat, 12 Feb 2022 20:56:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/02/12/report-inserting-multiple-paragraphs-to-google-document-in-order-using-google-docs-api/</guid>
      <description>Gists
This is a report for inserting the multiple paragraphs to Google Document in order using Google Docs API.
When the multiple paragraphs are inserted to Google Document using Google Docs API, it is required to pay attention to the index for inserting the texts. In this report, I would like to introduce the points for achieving this with a simple method.
Although this report uses Google Apps Script, the logic of this method can be used for other language.</description>
    </item>
    
    <item>
      <title>Pseudo OnEdit Trigger for Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/12/01/pseudo-onedit-trigger-for-google-document-using-google-apps-script/</link>
      <pubDate>Wed, 01 Dec 2021 09:56:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/12/01/pseudo-onedit-trigger-for-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for achieving the pseudo OnEdit trigger for Google Document using Google Apps Script.
In the current stage, there is not OnEdit trigger for Google Document. Ref But I sometimes have the case that I want to use OnEdit trigger. So, as the current workaround, I created this sample script. I think that this workaround can be also used for Google Slides, Google Form and also Google Spreadsheet.</description>
    </item>
    
    <item>
      <title>Retrieving Glyph Value from List Items of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/10/29/retrieving-glyph-value-from-list-items-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 29 Oct 2021 15:19:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/10/29/retrieving-glyph-value-from-list-items-of-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the glyph value from the list items of Google Document using Google Apps Script.
In the current stage, when the list is put to the Google Document, the count of glyph is automatically calculated. When the glyph values of the list items are tried to be retrieved using the manual operation and the script, unfortunately, the glyph values cannot be retrieved. Only the values of the list are retrieved.</description>
    </item>
    
    <item>
      <title>Replacing Template Texts with Array in Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/09/25/replacing-template-texts-with-array-in-google-document-using-google-apps-script/</link>
      <pubDate>Sat, 25 Sep 2021 14:20:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/09/25/replacing-template-texts-with-array-in-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing the template texts with an array in Google Document using Google Apps Script. This is for Google Apps Script of this report.
The sample input and output situations are as follows.
In the current stage, when replaceAllText of Docs API is used with the sample value of [&amp;quot;updated text 1&amp;quot;, &amp;quot;updated text 2&amp;quot;, &amp;quot;updated text 3&amp;quot;], all values of {{oldText}} are replaced with the 1st value of updated text 1 in one batch request.</description>
    </item>
    
    <item>
      <title>Replacing Template Texts with Array in Google Document using Docs API with Python</title>
      <link>https://tanaikech.github.io/2021/09/25/replacing-template-texts-with-array-in-google-document-using-docs-api-with-python/</link>
      <pubDate>Sat, 25 Sep 2021 10:51:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/09/25/replacing-template-texts-with-array-in-google-document-using-docs-api-with-python/</guid>
      <description>Gists
This is a sample script for replacing the template texts with an array in Google Document using Docs API with Python.
The sample input and output situations are as follows.
In the current stage, when replaceAllText of Docs API is used with the sample value of [&amp;quot;updated text 1&amp;quot;, &amp;quot;updated text 2&amp;quot;, &amp;quot;updated text 3&amp;quot;], all values of {{oldText}} are replaced with the 1st value of updated text 1 in one batch request.</description>
    </item>
    
    <item>
      <title>Changing Font of Selected Text to &#39;Google Sans&#39; on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/28/changing-font-of-selected-text-to-google-sans-on-google-document-using-google-apps-script/</link>
      <pubDate>Wed, 28 Apr 2021 17:46:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/28/changing-font-of-selected-text-to-google-sans-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for changing the font of selected text to Google Sans on Google Document using Google Apps Script.
Sample script Please copy and paste the following script to the script editor of Google Document And, when you use this script, please select a text in Google Document and run the script. By this, the font of selected text is changed to Google Sans.
function myFunction() {  const selection = DocumentApp.</description>
    </item>
    
    <item>
      <title>GAS Library - DocsServiceApp</title>
      <link>https://tanaikech.github.io/2020/09/24/gas-library-docsserviceapp/</link>
      <pubDate>Thu, 24 Sep 2020 14:39:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/24/gas-library-docsserviceapp/</guid>
      <description>Overview This is a Google Apps Script library for supporting Document service, Docs API, Spreadsheet service, Sheets API, Slides service and Slides API. The aim of this library is to compensate the processes that they services cannot achieve.
Description The Google services, which are Document service, Docs API, Spreadsheet service, Sheets API, Slides service and Slides API, are growing now. But, unfortunately, there are still the processes that they cannot done.</description>
    </item>
    
    <item>
      <title>Retrieving All URLs in Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/09/14/retrieving-all-urls-in-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 14 Sep 2020 10:57:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/14/retrieving-all-urls-in-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving All URLs in Google Document using Google Apps Script. In this sample script, the method of &amp;ldquo;documents.get&amp;rdquo; in Google Docs API is used. By this, the URL can be retrieve using JSON.parse().
Sample script Before you use this script, please enable Google Docs API at Advanced Google Services.
const documentId = &amp;#34;###&amp;#34;; // Please set the Google Document ID.  const content = Docs.</description>
    </item>
    
    <item>
      <title>Modifying 1st-Page Header in Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/19/modifying-1st-page-header-in-google-document-using-google-apps-script/</link>
      <pubDate>Wed, 19 Aug 2020 13:42:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/19/modifying-1st-page-header-in-google-document-using-google-apps-script/</guid>
      <description>Gists
These are sample scripts for modifying the 1st-page header in Google Document using Google Apps Script. Unfortunately, in the current stage, the 1st-page header cannot be modified by Document service. In this case, it is required to use Google Docs API. Here, I would like to introduce 2 sample scripts for modifying the 1st page header using Docs API.
When you use this, please enable Google Docs API at Advanced Google services.</description>
    </item>
    
    <item>
      <title>Libraries of gdoctableapp for golang, Node.js and python were updated to v110</title>
      <link>https://tanaikech.github.io/2020/01/22/libraries-of-gdoctableapp-for-golang-node.js-and-python-were-updated-to-v110/</link>
      <pubDate>Wed, 22 Jan 2020 15:22:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/22/libraries-of-gdoctableapp-for-golang-node.js-and-python-were-updated-to-v110/</guid>
      <description>Libraries of gdoctableapp for golang, Node.js and python were updated to v1.1.0   go-gdoctableapp
 v1.1.0 (January 22, 2020)  2 new methods were added. From this version, the texts can be replaced by images. The direct link and local file can be used as the image.      node-gdoctableapp
 v1.1.0 (January 22, 2020)  New method was added. From this version, the texts can be replaced by images.</description>
    </item>
    
    <item>
      <title>Libraries of gdoctableapp for golang, Node.js and python were updated to v105</title>
      <link>https://tanaikech.github.io/2020/01/21/libraries-of-gdoctableapp-for-golang-node.js-and-python-were-updated-to-v105/</link>
      <pubDate>Tue, 21 Jan 2020 15:00:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/21/libraries-of-gdoctableapp-for-golang-node.js-and-python-were-updated-to-v105/</guid>
      <description>Libraries of gdoctableapp for golang, Node.js and python were updated to v1.0.5  go-gdoctableapp node-gdoctableapp gdoctableapppy  Update History   v1.0.5 (January 21, 2020)
 When the inline objects and tables are put in the table. An error occurred. This bug was removed by this update.    I got the pull request at here.
  </description>
    </item>
    
    <item>
      <title>Deleting Last Empty Page of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/01/17/deleting-last-empty-page-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 17 Jan 2020 15:55:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/17/deleting-last-empty-page-of-google-document-using-google-apps-script/</guid>
      <description>Gists
Overview This is a sample script for deleting the last empty page which has only one paragraph including no values which is &amp;quot;&amp;quot; in the Google Document using Google Apps Script.
Description As a sample situation, it supposes that there is the following Google Document.
In this sample, the last page of Google Document has only one paragraph including no values which is &amp;quot;&amp;quot;. When I try to delete only last page without modifying the previous page, I noticed that this cannot be achieved with only Google Document service.</description>
    </item>
    
    <item>
      <title>Creating a Table to Google Document by Retrieving Values from Google Spreadsheet for Python</title>
      <link>https://tanaikech.github.io/2019/07/21/creating-a-table-to-google-document-by-retrieving-values-from-google-spreadsheet-for-python/</link>
      <pubDate>Sun, 21 Jul 2019 14:27:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/21/creating-a-table-to-google-document-by-retrieving-values-from-google-spreadsheet-for-python/</guid>
      <description>Gists
This is a sample script for creating a table to Google Document by retrieving values from Google Spreadsheet for Python.
Before you use this script, please install python library of gdoctableapppy.
$ pip install gdoctableapppy Sample script: This sample script uses Service Account.
In this sample script, the values are retrieved from Sheet1!A1:C5 of Spreadsheet, and new table is created to the Document using the values.
from google.oauth2 import service_account from gdoctableapppy import gdoctableapp from googleapiclient.</description>
    </item>
    
    <item>
      <title>Creating a Table to Google Document by Retrieving Values from Google Spreadsheet for Node.js</title>
      <link>https://tanaikech.github.io/2019/07/21/creating-a-table-to-google-document-by-retrieving-values-from-google-spreadsheet-for-node.js/</link>
      <pubDate>Sun, 21 Jul 2019 11:25:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/21/creating-a-table-to-google-document-by-retrieving-values-from-google-spreadsheet-for-node.js/</guid>
      <description>Gists
This is a sample script for creating a table to Google Document by retrieving values from Google Spreadsheet for Node.js.
Before you use this script, please install Node.js module of node-gdoctableapp.
$ npm install --save-dev gdoctableapp or
$ npm install --global gdoctableapp Sample script: This sample script uses Service Account.
In this sample script, the values are retrieved from Sheet1!A1:C5 of Spreadsheet, and new table is created to the Document using the values.</description>
    </item>
    
    <item>
      <title>Creating a Table to Google Document by Retrieving Values from Google Spreadsheet for Golang</title>
      <link>https://tanaikech.github.io/2019/07/18/creating-a-table-to-google-document-by-retrieving-values-from-google-spreadsheet-for-golang/</link>
      <pubDate>Thu, 18 Jul 2019 13:49:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/18/creating-a-table-to-google-document-by-retrieving-values-from-google-spreadsheet-for-golang/</guid>
      <description>Gists
This is a sample script for creating a table to Google Document by retrieving values from Google Spreadsheet for Golang.
Before you use this script, please install go library of go-gdoctableapp.
$ go get -v -u github.com/tanaikech/go-gdoctableapp Sample script: This sample script uses Service Account.
In this sample script, the values are retrieved from Sheet1!A1:C5 of Spreadsheet, and new table is created to the Document using the values.
package mainimport (&amp;#34;encoding/json&amp;#34;&amp;#34;fmt&amp;#34;&amp;#34;io/ioutil&amp;#34;&amp;#34;log&amp;#34;&amp;#34;net/http&amp;#34;&amp;#34;os&amp;#34;gdoctableapp &amp;#34;github.</description>
    </item>
    
    <item>
      <title>python library - gdoctableapppy</title>
      <link>https://tanaikech.github.io/2019/07/18/python-library-gdoctableapppy/</link>
      <pubDate>Thu, 18 Jul 2019 11:46:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/18/python-library-gdoctableapppy/</guid>
      <description>Overview This is a python library to manage the tables on Google Document using Google Docs API.
Description Google Docs API has been released. When I used this API, I found that it is very difficult for me to manage the tables on Google Document using Google Docs API. Although I checked the official document, unfortunately, I thought that it&amp;rsquo;s very difficult for me. So in order to easily manage the tables on Google Document, I created this library.</description>
    </item>
    
    <item>
      <title>node module - node-gdoctableapp</title>
      <link>https://tanaikech.github.io/2019/07/18/node-module-node-gdoctableapp/</link>
      <pubDate>Thu, 18 Jul 2019 11:44:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/18/node-module-node-gdoctableapp/</guid>
      <description>Overview This is a Node.js module to manage the tables on Google Document using Google Docs API.
Description Google Docs API has been released. When I used this API, I found that it is very difficult for me to manage the tables on Google Document using Google Docs API. Although I checked the official document, unfortunately, I thought that it&amp;rsquo;s very difficult for me. So in order to easily manage the tables on Google Document, I created this library.</description>
    </item>
    
    <item>
      <title>Go Library - go-gdoctableapp</title>
      <link>https://tanaikech.github.io/2019/07/18/go-library-go-gdoctableapp/</link>
      <pubDate>Thu, 18 Jul 2019 11:40:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/18/go-library-go-gdoctableapp/</guid>
      <description>Overview This is a Golang library for managing tables on Google Document using Google Docs API.
Description Google Docs API has been released. When I used this API, I found that it is very difficult for me to manage the tables on Google Document using Google Docs API. Although I checked the official document, unfortunately, I thought that it&amp;rsquo;s very difficult for me. So in order to easily manage the tables on Google Document, I created this library.</description>
    </item>
    
    <item>
      <title>Creating New Table and Putting Values to Cells using Google Docs API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/22/creating-new-table-and-putting-values-to-cells-using-google-docs-api-with-google-apps-script/</link>
      <pubDate>Wed, 22 May 2019 11:06:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/22/creating-new-table-and-putting-values-to-cells-using-google-docs-api-with-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating new table and putting values to cells using Google Docs API with Google Apps Script. Unfortunately, in the current stage, although I had been looking for the method for creating a table and putting the values in each cell at the official document, I couldn&amp;rsquo;t find. Google Docs API is growing now. So such documents might be not prepared yet. By this situation, I investigated about the method for achieving this method.</description>
    </item>
    
    <item>
      <title>Deleting Pages of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/17/deleting-pages-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 17 May 2019 15:12:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/17/deleting-pages-of-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for deleting pages of Google Document from the last page using Google Apps Script. There are no methods for directly deleting pages of Google Document. This is one of several workarounds. In this workaround, the following flow is used.
Flow  Retrieve paragraphs in the body of Document. Retrieve elements in each paragraph. The page break is included in the paragraph. Delete elements from last page in order.</description>
    </item>
    
    <item>
      <title>Retrieving Total Page of Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/17/retrieving-total-page-of-google-document-using-google-apps-script/</link>
      <pubDate>Fri, 17 May 2019 15:05:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/17/retrieving-total-page-of-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving total page of Google Document using Google Apps Script. There are no methods for directly retrieving the total page of Google Document. This is one of several workarounds. In this workaround, the total page is retrieved by converting to PDF format.
var n =  DriveApp.getFileById(id)  .getBlob()  .getDataAsString()  .split(&amp;#34;/Contents&amp;#34;).length - 1; Logger.log(&amp;#34;totalPages: %s&amp;#34;, n);  When you use this, please set the Google Document ID as id.</description>
    </item>
    
    <item>
      <title>Limitations for Inserting Images to Google Docs</title>
      <link>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</link>
      <pubDate>Fri, 05 Apr 2019 11:49:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</guid>
      <description>Gists
When an image is inserted to Google Docs (Spreadsheet, Document and Slides) using the method of insertImage using Google Apps Script, there is the case that the error occurs. The error messages are &amp;ldquo;server error&amp;rdquo; and &amp;ldquo;invalid image data&amp;rdquo;. Here, I would like to introduce the limitations for inserting images to Google Docs. As the result, it was found that the limitation is due to both the mimeTypes and the area of image rather than the file size.</description>
    </item>
    
    <item>
      <title>Deleting Positioned Images on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/01/deleting-positioned-images-on-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 01 Apr 2019 10:49:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/01/deleting-positioned-images-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for deleting the positioned images on Google Document using Google Apps Script. In the current stage, unfortunately, there are no methods for deleting the positioned images in Class PositionedImage, yet. But when Google Docs API is used, the positioned images can be deleted.
When you use this script, please enable Google Docs API at Advanced Google Services and API console. You can see how to enable them at here</description>
    </item>
    
    <item>
      <title>Modify Searched Text to Small Capital Letters using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/04/01/modify-searched-text-to-small-capital-letters-using-google-apps-script/</link>
      <pubDate>Mon, 01 Apr 2019 10:43:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/01/modify-searched-text-to-small-capital-letters-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for modifying the searched text to the small capital letters using Google Apps Script. Unfortunately, in the current stage, there are no methods for modifying the part of texts to the small capital letters in Document Service, yet. But when Google Docs API is used, this can be achieved.
When you use this script, please enable Google Docs API at Advanced Google Services and API console.</description>
    </item>
    
    <item>
      <title>Modify Shading Color of Paragraph on Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/03/16/modify-shading-color-of-paragraph-on-google-document-using-google-apps-script/</link>
      <pubDate>Sat, 16 Mar 2019 16:25:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/16/modify-shading-color-of-paragraph-on-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a script for modifying the shading color of paragraph on Google Document using Google Apps Script.
Recently, by releasing Google Docs API, the shading color got to be able to be modified using the script. Here, I would like to introduce a sample script for modifying the shading color of the paragraph on Google Document. At the current Document Service, the shading color cannot be modified yet. I think that this will be achieved in the future update.</description>
    </item>
    
    <item>
      <title>Replacing Text to Image for Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/20/replacing-text-to-image-for-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 20 Aug 2018 09:55:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/20/replacing-text-to-image-for-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing text to image for Google Document using Google Apps Script (GAS). There is a method for replacing text to text at Class Text of DocumentApp. But there are not methods for replacing text to image. So I created this sample script.
Demo : This sample image was created by k3-studio.
Usage : replaceTextToImage(body, replaceText, image, width);  body : body of document. You can set by DocumentApp.</description>
    </item>
    
    <item>
      <title>Retrieving Number of Lines of Google Document</title>
      <link>https://tanaikech.github.io/2018/07/09/retrieving-number-of-lines-of-google-document/</link>
      <pubDate>Mon, 09 Jul 2018 09:02:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/09/retrieving-number-of-lines-of-google-document/</guid>
      <description>Gists
There are no prepared methods for retrieving the number of lines in the Google Document. So I thought this workaround. If the end of each line can be detected, the number of lines can be retrieved. So I tried to add the end markers of each line using OCR.
At Google Documents, when a sentence is over the page width, the sentence automatically has the line break. But the line break has no \r\n or \n.</description>
    </item>
    
  </channel>
</rss>
