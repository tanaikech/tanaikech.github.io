<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MCP on tanaike</title>
    <link>https://tanaikech.github.io/tags/mcp/</link>
    <description>Recent content in MCP on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sat, 10 May 2025 14:06:39 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/mcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Image Transfer: MCP Server (Web Apps/Google Apps Script) to MCP Client (Gemini/Python)</title>
      <link>https://tanaikech.github.io/2025/05/10/image-transfer-mcp-server-web-apps/google-apps-script-to-mcp-client-gemini/python/</link>
      <pubDate>Sat, 10 May 2025 14:06:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/10/image-transfer-mcp-server-web-apps/google-apps-script-to-mcp-client-gemini/python/</guid>
      <description>Gists
Abstract This report details transferring image data via Model Context Protocol (MCP) from Google Apps Script server to a Python/Gemini client, extending capabilities for multimodal applications beyond text.
Introduction Following up on my previous report, &amp;ldquo;Building Model Context Protocol (MCP) Server with Google Apps Script&amp;rdquo; (Ref), which detailed the transfer of text data between the MCP server and client, this new report focuses on extending the protocol to handle image data.</description>
    </item>
    
    <item>
      <title>Building Model Context Protocol (MCP) Server with Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/05/08/building-model-context-protocol-mcp-server-with-google-apps-script/</link>
      <pubDate>Thu, 08 May 2025 15:29:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/08/building-model-context-protocol-mcp-server-with-google-apps-script/</guid>
      <description>Gists
Abstract This text introduces the Model Context Protocol (MCP) for standardizing AI interaction with external systems. It explores the potential of using Google Apps Script (GAS) to host an MCP server, leveraging GAS&amp;rsquo;s integration with Google Workspace for data access. A sample script demonstrates feasibility, highlighting the current absence of an official GAS SDK. The work aims to foster understanding and encourage SDK development.
Introduction Recently, the Model Context Protocol (MCP) has emerged as a standard protocol for connecting AI applications with third-party systems and data sources.</description>
    </item>
    
  </channel>
</rss>
