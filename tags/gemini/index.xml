<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gemini on tanaike</title>
    <link>https://tanaikech.github.io/tags/gemini/</link>
    <description>Recent content in Gemini on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 30 Sep 2025 16:15:11 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/gemini/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Secure and Conversational Google Workspace Automation: Integrating Gemini CLI with a gas-fakes MCP Server</title>
      <link>https://tanaikech.github.io/2025/09/30/secure-and-conversational-google-workspace-automation-integrating-gemini-cli-with-a-gas-fakes-mcp-server/</link>
      <pubDate>Tue, 30 Sep 2025 16:15:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/09/30/secure-and-conversational-google-workspace-automation-integrating-gemini-cli-with-a-gas-fakes-mcp-server/</guid>
      <description>Gists
Abstract This article introduces a method for securely executing AI-generated Google Apps Script. By implementing a &amp;ldquo;fake-sandbox&amp;rdquo; using the gas-fakes library as an MCP server, users can empower the Gemini CLI to safely automate Google Workspace tasks with granular, file-specific permissions, avoiding significant security risks.
Introduction Recently, I published an article, &amp;ldquo;A Fake-Sandbox for Google Apps Script: A Feasibility-Study on Securely Executing Code Generated by Gemini CLI&amp;rdquo;. This article introduced the possibility of a &amp;ldquo;fake-sandbox&amp;rdquo; for Google Apps Script using the gas-fakes library.</description>
    </item>
    
    <item>
      <title>Streamlining Content Creation: A Guide to Using Gemini CLI, MCP Server, and VSCode</title>
      <link>https://tanaikech.github.io/2025/09/24/streamlining-content-creation-a-guide-to-using-gemini-cli-mcp-server-and-vscode/</link>
      <pubDate>Wed, 24 Sep 2025 15:14:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/09/24/streamlining-content-creation-a-guide-to-using-gemini-cli-mcp-server-and-vscode/</guid>
      <description>Gists
Abstract This guide explores a powerful workflow for generating articles and other content by integrating Gemini CLI, a Model Context Protocol (MCP) server, and Visual Studio Code (VSCode). Discover how to leverage this combination for efficient, context-aware content creation, modification, and distribution, complete with practical examples and prompts.
Introduction The integration of Gemini CLI with Visual Studio Code (VSCode) creates a highly efficient and context-aware environment for developers and writers alike.</description>
    </item>
    
    <item>
      <title>Accelerating Gemini CLI: A Node.js Wrapper for Google Apps Script MCP Servers</title>
      <link>https://tanaikech.github.io/2025/09/17/accelerating-gemini-cli-a-node.js-wrapper-for-google-apps-script-mcp-servers/</link>
      <pubDate>Wed, 17 Sep 2025 16:09:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/09/17/accelerating-gemini-cli-a-node.js-wrapper-for-google-apps-script-mcp-servers/</guid>
      <description>Gists
Abstract This article introduces a Node.js wrapper that dramatically reduces the startup time for the Gemini CLI when used with MCP servers built on Google Apps Script. This optimization enhances user experience by accelerating the initialization process, achieving a speed boost of approximately 15 times.
1. Introduction The Model Context Protocol (MCP) is a vital open standard enabling AI agents to connect with external tools and data sources for complex, real-world tasks.</description>
    </item>
    
    <item>
      <title>Google Maps with Natural Language: Integrated Collaboration through Gemini CLI and MCP</title>
      <link>https://tanaikech.github.io/2025/09/11/google-maps-with-natural-language-integrated-collaboration-through-gemini-cli-and-mcp/</link>
      <pubDate>Thu, 11 Sep 2025 10:16:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/09/11/google-maps-with-natural-language-integrated-collaboration-through-gemini-cli-and-mcp/</guid>
      <description>Gists Abstract This article demonstrates integrating Google Maps with natural language using the Gemini CLI and an MCP server. This powerful combination allows users to automate complex location-based tasks, such as route planning and information retrieval, through simple, intuitive text-based prompts. Introduction The Gemini CLI, when paired with Model Context Protocol (MCP) servers, is a powerful tool for integrating various applications with natural language. When the MCP servers are built</description>
    </item>
    
    <item>
      <title>A Fake-Sandbox for Google Apps Script: A Feasibility Study on Securely Executing Code Generated by Gemini CLI</title>
      <link>https://tanaikech.github.io/2025/08/30/a-fake-sandbox-for-google-apps-script-a-feasibility-study-on-securely-executing-code-generated-by-gemini-cli/</link>
      <pubDate>Sat, 30 Aug 2025 16:31:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/08/30/a-fake-sandbox-for-google-apps-script-a-feasibility-study-on-securely-executing-code-generated-by-gemini-cli/</guid>
      <description>Gists
Abstract Generating Google Apps Script (GAS) with Gemini CLI from natural language introduces security risks due to broad permissions. This report investigates a &amp;ldquo;Fake-Sandbox&amp;rdquo; using the gas-fakes library, translating GAS calls into granularly-scoped API requests to securely execute scripts created from user prompts.
Introduction 1. Background: Generative AI and the Challenge of Secure Script Execution The emergence of Generative AI now makes it possible to generate executable scripts directly from natural language instructions, particularly through interfaces like the Gemini CLI.</description>
    </item>
    
    <item>
      <title>Streamlining Web Page Insights with Natural Language using Gemini CLI, Google Analytics, and MCP</title>
      <link>https://tanaikech.github.io/2025/08/22/streamlining-web-page-insights-with-natural-language-using-gemini-cli-google-analytics-and-mcp/</link>
      <pubDate>Fri, 22 Aug 2025 16:24:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/08/22/streamlining-web-page-insights-with-natural-language-using-gemini-cli-google-analytics-and-mcp/</guid>
      <description>Gists
Abstract This report introduces a powerful method for automating Google Analytics tasks using the Gemini CLI and a custom MCP (Model Context Protocol) server built with Google Apps Script. This integration enables streamlined web page analysis through simple natural language commands, simplifying authorization and complex data retrieval workflows.
Introduction Accessing and interpreting web analytics data often involves navigating complex interfaces and manual report generation. However, the emergence of natural language interfaces is changing this paradigm.</description>
    </item>
    
    <item>
      <title>Unifying Google Workspace with Natural Language: Integrated Collaboration through Gemini CLI and MCP</title>
      <link>https://tanaikech.github.io/2025/08/18/unifying-google-workspace-with-natural-language-integrated-collaboration-through-gemini-cli-and-mcp/</link>
      <pubDate>Mon, 18 Aug 2025 16:12:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/08/18/unifying-google-workspace-with-natural-language-integrated-collaboration-through-gemini-cli-and-mcp/</guid>
      <description>Gists
Abstract This document demonstrates a transformative method for unifying Google Workspace applications by using natural language. Through the integration of the Gemini CLI with MCP, this approach empowers users to intuitively manage Google Drive, Gmail, Google Calendar, Drive Activity, and Google People. Complex tasks and collaborative workflows are streamlined into simple, conversational text commands.
Introduction In today&amp;rsquo;s dynamic, collaborative environments, managing document workflows, tracking changes, and coordinating team efforts can be fragmented and inefficient.</description>
    </item>
    
    <item>
      <title>Next-Level Classroom Automation: Gemini CLI, Google Classroom, and MCP</title>
      <link>https://tanaikech.github.io/2025/08/10/next-level-classroom-automation-gemini-cli-google-classroom-and-mcp/</link>
      <pubDate>Sun, 10 Aug 2025 14:20:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/08/10/next-level-classroom-automation-gemini-cli-google-classroom-and-mcp/</guid>
      <description>Gists
Abstract Automate Google Classroom management with natural language. This guide details using the Gemini CLI and an MCP server to streamline creating classes, managing assignments, and interacting with students.
Introduction Unlock the power of natural language to command your Google Workspace. I&amp;rsquo;ve recently demonstrated how you can automate Google Workspace applications using simple, conversational commands through the Gemini CLI and the MCP (Model Context Protocol) server.
My previous reports detailed how to harness natural language for automating tasks in Google Sheets and Google Calendar:</description>
    </item>
    
    <item>
      <title>Enhanced Guide to Using Prompts in Gemini CLI</title>
      <link>https://tanaikech.github.io/2025/08/01/enhanced-guide-to-using-prompts-in-gemini-cli/</link>
      <pubDate>Fri, 01 Aug 2025 16:08:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/08/01/enhanced-guide-to-using-prompts-in-gemini-cli/</guid>
      <description>Gists
Abstract This report provides a comprehensive overview of how to utilize prompts within the Gemini Command-Line Interface (CLI). Leveraging a Google Apps Script MCP server, we will explore practical examples, including roadmap generation, real-time weather inquiries, and Google Drive file searches. This enhanced document offers more in-depth explanations and a broader context to empower users in their understanding and application of these powerful features.
Introduction The Model Context Protocol (MCP) establishes a standardized framework for servers to offer clients predefined, structured prompt templates.</description>
    </item>
    
    <item>
      <title>Next-Level Data Automation: Gemini CLI, Google Calendar, and MCP</title>
      <link>https://tanaikech.github.io/2025/07/29/next-level-data-automation-gemini-cli-google-calendar-and-mcp/</link>
      <pubDate>Tue, 29 Jul 2025 13:33:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/29/next-level-data-automation-gemini-cli-google-calendar-and-mcp/</guid>
      <description>Gists
Abstract This report demonstrates managing Google Calendar from the command line using Gemini CLI and an MCP server, enabling powerful, scriptable automation for your schedule.
Introduction Following up on my previous report, &amp;ldquo;Next-Level Data Automation: Gemini CLI, Google Sheets, and MCP,&amp;rdquo; I&amp;rsquo;m excited to present the next installment in this series. My earlier report, published on Medium, detailed an innovative approach to managing Google Sheets through the powerful combination of Gemini CLI and an MCP server.</description>
    </item>
    
    <item>
      <title>Generating Request Body for APIs using Gemini</title>
      <link>https://tanaikech.github.io/2025/07/23/generating-request-body-for-apis-using-gemini/</link>
      <pubDate>Wed, 23 Jul 2025 09:12:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/23/generating-request-body-for-apis-using-gemini/</guid>
      <description>Gists
Abstract Effortlessly generate API request bodies from natural language commands. This guide demonstrates using Gemini and Google Apps Script to streamline automation and accelerate development for Google Workspace APIs and beyond.
Introduction In a recent article, &amp;ldquo;Managing Google Docs, Sheets, and Slides by Natural Language with Gemini CLI and MCP,&amp;rdquo; I showcased a powerful method for dynamically creating API request bodies using natural language. This approach, utilizing the Gemini CLI and a My Custom Proxy (MCP) server, allows users to manage Google Workspace applications with simple, human-readable commands.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2025/07/22/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Tue, 22 Jul 2025 10:58:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/22/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.13   v2.0.13 (July 22, 2025)
 responseJsonSchema was added. The default model was changed from models/gemini-2.5-flash-preview-04-17 to models/gemini-2.5-flash.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Managing Google Docs, Sheets, and Slides by Natural Language with Gemini CLI and MCP</title>
      <link>https://tanaikech.github.io/2025/07/17/managing-google-docs-sheets-and-slides-by-natural-language-with-gemini-cli-and-mcp/</link>
      <pubDate>Thu, 17 Jul 2025 15:48:40 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/17/managing-google-docs-sheets-and-slides-by-natural-language-with-gemini-cli-and-mcp/</guid>
      <description>Gists
Abstract This report explores an optimized approach to integrating the Gemini CLI with Google Workspace via an MCP server. Traditionally, this process requires numerous custom tools, which increases development costs. We propose leveraging the inherent JSON schema requirements of the MCP server tools to directly construct request bodies for the batchUpdate methods of the Google Docs, Sheets, and Slides APIs. This approach aims to consolidate document management into just three core tools, significantly streamlining development and offering a scalable, cost-effective solution for Google Workspace automation and broader API integrations.</description>
    </item>
    
    <item>
      <title>Next-Level Data Automation: Gemini CLI, Google Sheets, and MCP</title>
      <link>https://tanaikech.github.io/2025/07/12/next-level-data-automation-gemini-cli-google-sheets-and-mcp/</link>
      <pubDate>Sat, 12 Jul 2025 11:24:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/12/next-level-data-automation-gemini-cli-google-sheets-and-mcp/</guid>
      <description>Gists
Abstract This article explores the integration of the Gemini Command-Line Interface (CLI) with Google Sheets using the Model Context Protocol (MCP). It demonstrates how to leverage the open-source projects MCPApp and ToolsForMCPServer to create a bridge between the Gemini CLI and Google Workspace. This enables users to perform powerful data automation tasks, such as creating, reading, and modifying tables in Google Sheets directly from the command line, using natural language prompts.</description>
    </item>
    
    <item>
      <title>Gemini CLI: Featuring an Enhanced ToolsForMCPServer</title>
      <link>https://tanaikech.github.io/2025/07/09/gemini-cli-featuring-an-enhanced-toolsformcpserver/</link>
      <pubDate>Wed, 09 Jul 2025 15:22:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/09/gemini-cli-featuring-an-enhanced-toolsformcpserver/</guid>
      <description>Gists
Abstract This report introduces ToolsForMCPServer, an enhanced Google Apps Script library that expands the capabilities of Gemini CLI. It showcases new tools that streamline complex workflows, with a special emphasis on facilitating seamless file content transfer and management between a user&amp;rsquo;s local environment and Google Drive.
Introduction This report details significant enhancements to ToolsForMCPServer, a powerful Google Apps Script library designed to work in tandem with Gemini CLI. By integrating this library with a Model Context Protocol (MCP) server, the capabilities of Gemini CLI are dramatically expanded, especially in its interaction with Google Workspace services.</description>
    </item>
    
    <item>
      <title>Processing File Content Using Gemini CLI with an MCP Server Built by Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/07/08/processing-file-content-using-gemini-cli-with-an-mcp-server-built-by-google-apps-script/</link>
      <pubDate>Tue, 08 Jul 2025 15:17:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/08/processing-file-content-using-gemini-cli-with-an-mcp-server-built-by-google-apps-script/</guid>
      <description>Gists
Abstract This report details two methods for processing files using the Gemini CLI and a Google Apps Script MCP server: direct Base64 encoding and indirect transfer via the Google Drive API using ggsrun. The direct method proved ineffective due to token limits. The recommended approach, leveraging ggsrun, allows for efficient, scalable file transfers by using file IDs instead of embedding content within the prompt, enabling advanced automation capabilities.
Introduction This report demonstrates how to efficiently process file content using the Gemini CLI integrated with an MCP (Magical Control Panel) server built on Google Apps Script Web Apps.</description>
    </item>
    
    <item>
      <title>Gemini CLI with MCP Server: Expanding Possibilities with Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/07/03/gemini-cli-with-mcp-server-expanding-possibilities-with-google-apps-script/</link>
      <pubDate>Thu, 03 Jul 2025 15:45:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/07/03/gemini-cli-with-mcp-server-expanding-possibilities-with-google-apps-script/</guid>
      <description>Gists
Abstract The Gemini CLI provides a powerful command-line interface for interacting with Google&amp;rsquo;s Gemini models. By leveraging the Model Context Protocol (MCP), the CLI can be extended with custom tools. This report explores the integration of the Gemini CLI with an MCP server built using Google Apps Script Web Apps. We demonstrate how this combination simplifies authorization for Google Workspace APIs (Gmail, Drive, Calendar, etc.), allowing Gemini to execute complex, multi-step tasks directly within the Google ecosystem.</description>
    </item>
    
    <item>
      <title>Gemini CLI with MCP Server Built by Web Apps of Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/06/27/gemini-cli-with-mcp-server-built-by-web-apps-of-google-apps-script/</link>
      <pubDate>Fri, 27 Jun 2025 16:12:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/27/gemini-cli-with-mcp-server-built-by-web-apps-of-google-apps-script/</guid>
      <description>Gists
Abstract The Gemini CLI can be integrated with Google Workspace via Google Apps Script to securely access personal data, enabling powerful automations like email summaries and calendar management.
Introduction The recently released Gemini CLI is a powerful command-line interface for interacting with Google&amp;rsquo;s Gemini models and cloud resources. Ref While powerful on its own, its utility can be significantly enhanced by connecting it to a user&amp;rsquo;s personal Google resources, such as Google Sheets, Docs, Slides, Gmail, and Calendar.</description>
    </item>
    
    <item>
      <title>A Practical Analysis of the Gemini API&#39;s URL Context Tool</title>
      <link>https://tanaikech.github.io/2025/06/26/a-practical-analysis-of-the-gemini-apis-url-context-tool/</link>
      <pubDate>Thu, 26 Jun 2025 11:49:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/26/a-practical-analysis-of-the-gemini-apis-url-context-tool/</guid>
      <description>Gists
Introduction The Gemini API recently introduced the URL context tool, a feature designed to allow the model to directly fetch and utilize content from specified URLs to ground its responses. Ref
This report provides a practical demonstration of this tool&amp;rsquo;s capabilities. We will investigate its impact on two critical aspects of AI model interaction: the accuracy of the generated response and the total token consumption, which directly affects API costs.</description>
    </item>
    
    <item>
      <title>Consolidating Generative AI Protocols: A Single Server Solution for MCP and A2A</title>
      <link>https://tanaikech.github.io/2025/06/19/consolidating-generative-ai-protocols-a-single-server-solution-for-mcp-and-a2a/</link>
      <pubDate>Thu, 19 Jun 2025 11:18:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/19/consolidating-generative-ai-protocols-a-single-server-solution-for-mcp-and-a2a/</guid>
      <description>Gists
Abstract A new unified Google Apps Script now deploys both Model Context Protocol (MCP) and Agent2Agent (A2A) networks as a single server, streamlining AI model integration for Google Workspace users.
Introduction The rapid growth of generative AI has led to increasing integration between AI models, exemplified by protocols like the Model Context Protocol (MCP) and Agent2Agent (A2A) Protocol. Recently, I released MCPApp and A2AApp, which establish the MCP and A2A networks using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Growing Image Generation with Gemini API: Python and Node.js Now Supported</title>
      <link>https://tanaikech.github.io/2025/06/16/growing-image-generation-with-gemini-api-python-and-node.js-now-supported/</link>
      <pubDate>Mon, 16 Jun 2025 10:33:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/16/growing-image-generation-with-gemini-api-python-and-node.js-now-supported/</guid>
      <description>Gists
Abstract This article announces that the Gemini API&amp;rsquo;s Python client library now supports &amp;ldquo;growing image&amp;rdquo; generation, a feature previously unavailable. Sample scripts for Python and Node.js are provided to demonstrate this new capability.
Introduction I recently published an article, &amp;ldquo;Generate Growing Images using Gemini API,&amp;rdquo; which detailed a method for progressively generating images. At the time of publication, the official Python client library for the Gemini API lacked the necessary functionality to fully implement this feature, preventing Python users from easily replicating the &amp;ldquo;growing image&amp;rdquo; effect.</description>
    </item>
    
    <item>
      <title>Gmail Processing using MCP Network Powered by Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/06/12/gmail-processing-using-mcp-network-powered-by-google-apps-script/</link>
      <pubDate>Thu, 12 Jun 2025 15:06:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/12/gmail-processing-using-mcp-network-powered-by-google-apps-script/</guid>
      <description>Gists
Abstract This report details an MCP network using Google Apps Script for both server and client, enabling automated, secure Gmail processing to boost efficiency.
Introduction Recently, I published a report titled &amp;ldquo;Building Model Context Protocol (MCP) Server with Google Apps Script,&amp;rdquo; which you can find here. In that initial report, I demonstrated the feasibility of creating an MCP server using Google Apps Script, with Claude Desktop serving as the client.</description>
    </item>
    
    <item>
      <title>Text-To-Speech (TTS) using Gemini API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/06/11/text-to-speech-tts-using-gemini-api-with-google-apps-script/</link>
      <pubDate>Wed, 11 Jun 2025 16:22:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/11/text-to-speech-tts-using-gemini-api-with-google-apps-script/</guid>
      <description>Gists
Description This script provides a simple example for generating Text-To-Speech (TTS) using the Gemini API within Google Apps Script. The Gemini API generates audio data in the audio/L16;codec=pcm;rate=24000 format, which is not directly playable. Since there&amp;rsquo;s no built-in method to convert this to a standard audio/wav format, this sample script includes a custom function to handle the conversion.
Limitations and Considerations  The provided convertL16ToWav_ function is specifically designed for the audio/L16;codec=pcm;rate=24000 MIME type.</description>
    </item>
    
    <item>
      <title>Importance of Time Information in Gemini and Current Time Handling</title>
      <link>https://tanaikech.github.io/2025/06/06/importance-of-time-information-in-gemini-and-current-time-handling/</link>
      <pubDate>Fri, 06 Jun 2025 15:00:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/06/06/importance-of-time-information-in-gemini-and-current-time-handling/</guid>
      <description>Gists
Abstract This report investigates how Gemini handles current time information, particularly when using the Gemini API. We found that while the Gemini web interface knows the current time, the Gemini API does not inherently. Therefore, applications must explicitly provide current time information in API calls for accurate time-sensitive responses.
Introduction The rapidly advancing field of generative AI is enabling increasingly complex tasks, particularly through the use of open protocols like the Model Context Protocol (MCP) and Agent2Agent (A2A) Protocol.</description>
    </item>
    
    <item>
      <title>Enabling Collaborative Agent Systems through Google Apps Script-based Agent2Agent (A2A) Network</title>
      <link>https://tanaikech.github.io/2025/05/28/enabling-collaborative-agent-systems-through-google-apps-script-based-agent2agent-a2a-network/</link>
      <pubDate>Wed, 28 May 2025 09:49:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/28/enabling-collaborative-agent-systems-through-google-apps-script-based-agent2agent-a2a-network/</guid>
      <description>Gists
Abstract This report details the Agent2Agent (A2A) network built with Google Apps Script&amp;rsquo;s Web Apps. It facilitates communication between diverse AI agents, overcoming platform limitations. Key improvements include parallel task execution with asynchronous processes and enhanced security through secure access token handling and user-specific Web App availability, demonstrating a robust and secure A2A implementation.
Introduction This report details an updated implementation of Agent2Agent (A2A), an open protocol designed to enable communication and collaboration between diverse AI agents.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2025/05/21/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Wed, 21 May 2025 09:49:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/21/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.10   v2.0.10 (May 21, 2025)
 Implemented the parallel function calling. Ref    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Image Transfer: MCP Server (Web Apps/Google Apps Script) to MCP Client (Gemini/Python)</title>
      <link>https://tanaikech.github.io/2025/05/10/image-transfer-mcp-server-web-apps/google-apps-script-to-mcp-client-gemini/python/</link>
      <pubDate>Sat, 10 May 2025 14:06:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/10/image-transfer-mcp-server-web-apps/google-apps-script-to-mcp-client-gemini/python/</guid>
      <description>Gists
Abstract This report details transferring image data via Model Context Protocol (MCP) from Google Apps Script server to a Python/Gemini client, extending capabilities for multimodal applications beyond text.
Introduction Following up on my previous report, &amp;ldquo;Building Model Context Protocol (MCP) Server with Google Apps Script&amp;rdquo; (Ref), which detailed the transfer of text data between the MCP server and client, this new report focuses on extending the protocol to handle image data.</description>
    </item>
    
    <item>
      <title>Analyzing Google Apps Script from Stackoverflow</title>
      <link>https://tanaikech.github.io/2025/05/01/analyzing-google-apps-script-from-stackoverflow/</link>
      <pubDate>Thu, 01 May 2025 14:48:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/01/analyzing-google-apps-script-from-stackoverflow/</guid>
      <description>Gists
Abstract The report details a novel Gemini API method to analyze big data beyond AI context window limits, which was validated with Stack Overflow data for insights into Google Apps Script&amp;rsquo;s potential.
Introduction Generative AI models face significant limitations when processing massive datasets, primarily due to the constraints imposed by their fixed context windows. Current methods thus struggle to analyze the entirety of big data within a single API call, preventing comprehensive analysis.</description>
    </item>
    
    <item>
      <title>Comprehensive Big Data Processing with Gemini</title>
      <link>https://tanaikech.github.io/2025/05/01/comprehensive-big-data-processing-with-gemini/</link>
      <pubDate>Thu, 01 May 2025 14:12:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/05/01/comprehensive-big-data-processing-with-gemini/</guid>
      <description>Gists
Abstract Generative AI faces limits in processing massive datasets due to context windows. Current methods can&amp;rsquo;t analyze entire data lakes. This report presents a Gemini API approach for comprehensive big data analysis beyond typical model limits.
Introduction The rapid advancement and widespread adoption of generative AI have been remarkable. High expectations are placed on these technologies, particularly regarding processing speed and the capacity to handle vast amounts of data. While AI processing speed continues to increase with technological progress, effectively managing and analyzing truly large datasets presents significant challenges.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2025/04/23/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Wed, 23 Apr 2025 15:30:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/04/23/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.6   v2.0.6 (April 23, 2025)
 A new method countTokens was added. Ref When this method is used, you can count tokens of the request. This pull request was reflected. Ref    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Integrating Gemini and Google Apps Script for Automated Google Slides Presentations</title>
      <link>https://tanaikech.github.io/2025/04/15/integrating-gemini-and-google-apps-script-for-automated-google-slides-presentations/</link>
      <pubDate>Tue, 15 Apr 2025 13:39:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/04/15/integrating-gemini-and-google-apps-script-for-automated-google-slides-presentations/</guid>
      <description>Gists
Abstract Learn how Gemini AI and Google Apps Script automate Google Slides generation. A developed application demonstrates this synergy, streamlining initial presentation drafting and showcasing AI&amp;rsquo;s automation potential within Google Workspace.
Introduction The field of AI, particularly large language models like Google&amp;rsquo;s Gemini, is advancing rapidly. A powerful application of this technology involves integrating Gemini with Google Apps Script. Google Apps Script provides a seamless way to automate tasks across Google Workspace by natively handling authorization and interaction with services like Google Docs, Google Sheets, and Google Slides.</description>
    </item>
    
    <item>
      <title>Stowage Planning Automation Using Gemini: A Feasibility Study and A Prompt-Based Approach</title>
      <link>https://tanaikech.github.io/2025/04/03/stowage-planning-automation-using-gemini-a-feasibility-study-and-a-prompt-based-approach/</link>
      <pubDate>Thu, 03 Apr 2025 11:14:40 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/04/03/stowage-planning-automation-using-gemini-a-feasibility-study-and-a-prompt-based-approach/</guid>
      <description>Gists
Abstract Gemini 2.5 Pro Experimental enabled automated cargo ship stowage planning via prompt engineering, overcoming prior model limitations. This eliminates the need for complex algorithms, demonstrating AI&amp;rsquo;s potential in logistics.
Introduction Recently, I encountered a practical business challenge: automating stowage planning through AI. Specifically, I received a request to generate optimal container loading plans for cargo ships, a task traditionally requiring significant manual effort and domain expertise. In initial tests, prior to the release of Gemini 2.</description>
    </item>
    
    <item>
      <title>Roadmap Generator as Gemini</title>
      <link>https://tanaikech.github.io/2025/04/01/roadmap-generator-as-gemini/</link>
      <pubDate>Tue, 01 Apr 2025 16:32:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/04/01/roadmap-generator-as-gemini/</guid>
      <description>Gists
Abstract Gemini and Google Apps Script automate project roadmap creation in Google Sheets, including Gantt charts, improving efficiency and agile planning.
Introduction When initiating a new project, a comprehensive roadmap is crucial for successful execution. Previously, I meticulously crafted these roadmaps manually, a time-consuming process. However, leveraging the advanced capabilities of Google&amp;rsquo;s Gemini, I&amp;rsquo;ve significantly streamlined this workflow. Gemini now assists in generating detailed project roadmaps, enhancing efficiency and accuracy.</description>
    </item>
    
    <item>
      <title>Generate Growing Images using Gemini API</title>
      <link>https://tanaikech.github.io/2025/03/19/generate-growing-images-using-gemini-api/</link>
      <pubDate>Wed, 19 Mar 2025 13:42:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/19/generate-growing-images-using-gemini-api/</guid>
      <description>Gists
Abstract Gemini API now generates images via Flash Experimental and Imagen 3. This report introduces image evolution within conversations using Gemini API with Google Apps Script.
Introduction Recently, image generation was supported in the Gemini API using Gemini 2.0 Flash Experimental and Imagen 3. I have already reported a simple sample script for generating images using the Gemini API with Google Apps Script. Ref In practice, you might want to evolve the generated images within a conversation.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2025/03/19/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Wed, 19 Mar 2025 13:11:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/19/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.5   v2.0.5 (March 19, 2025)
 A new method chat was added. Ref When this method is used, you can generate content with Gemini API through the chat. The default model was changed from models/gemini-1.5-flash-latest to models/gemini-2.0-flash.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Create Visualized Recipe Instructions with Gemini using Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/03/17/create-visualized-recipe-instructions-with-gemini-using-google-apps-script/</link>
      <pubDate>Mon, 17 Mar 2025 14:42:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/17/create-visualized-recipe-instructions-with-gemini-using-google-apps-script/</guid>
      <description>Gists
Abstract This report presents a Google Apps Script for generating visualized cooking recipes with text and images using the Gemini API, leveraging its image generation capabilities.
Introduction Recently, image generation was supported in the Gemini API using Gemini 2.0 Flash Experimental and Imagen 3. I have already reported a simple sample script for generating images using the Gemini API with Google Apps Script. Ref Google Apps Script seamlessly integrates with Google Docs, Sheets, and Slides.</description>
    </item>
    
    <item>
      <title>Generate Images with Gemini API using Google Apps Script</title>
      <link>https://tanaikech.github.io/2025/03/15/generate-images-with-gemini-api-using-google-apps-script/</link>
      <pubDate>Sat, 15 Mar 2025 15:32:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/15/generate-images-with-gemini-api-using-google-apps-script/</guid>
      <description>Gists
Description Recently, image generation was supported in the Gemini API using Gemini 2.0 Flash Experimental and Imagen 3. This report introduces simple sample scripts for generating images using the Gemini API with Google Apps Script. When images can be created using the Gemini API with Google Apps Script, Google Apps Script, which seamlessly integrates with Google Docs, Sheets, and Slides, becomes a powerful tool for creating and managing them, and the applications are infinite.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2025/03/15/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Sat, 15 Mar 2025 14:56:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2025/03/15/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.4   v2.0.4 (March 15, 2025)
 Property generationConfig was added to the method geminiWithFiles. By this, you can use all properties for generationConfig. Ref You can see the sample scripts at &amp;ldquo;Use googleSearch for grounding&amp;rdquo; and &amp;ldquo;Generate image&amp;rdquo;.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Streamlining Gmail Processing Including Attachment Files Using Gemini with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/12/05/streamlining-gmail-processing-including-attachment-files-using-gemini-with-google-apps-script/</link>
      <pubDate>Thu, 05 Dec 2024 10:14:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/12/05/streamlining-gmail-processing-including-attachment-files-using-gemini-with-google-apps-script/</guid>
      <description>Gists
Abstract A new library, MimeTypeApp, simplifies using Gmail messages and attachments with the Gemini API for tasks like text analysis. It converts unsupported formats for seamless integration with Google Apps Script and Gemini.
Introduction Recently, I published MimeTypeApp, a Google Apps Script library that simplifies parsing Gmail messages, including attachments, for use with the Gemini API. Ref This library addresses a key challenge: Gmail attachments come in various MIME types, while the Gemini API currently only accepts a limited set for processing.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/11/19/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Tue, 19 Nov 2024 21:05:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/11/19/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.3   v2.0.3 (November 19, 2024)
 I modified the specification of setFileIdsOrUrlsWithResumableUpload. From v2.0.3, when you use this method, please include propertiesService: PropertiesService.getScriptProperties() into the initial object as follows. Because, when PropertiesService.getScriptProperties() is used in the library, the values are put into the library. When I created Ref and Ref, I supposed that the script is used by copying and pasting instead of the library.</description>
    </item>
    
    <item>
      <title>Improving Gemini&#39;s Text Generation Accuracy with Corpus Managed by Google Spreadsheet as RAG</title>
      <link>https://tanaikech.github.io/2024/10/09/improving-geminis-text-generation-accuracy-with-corpus-managed-by-google-spreadsheet-as-rag/</link>
      <pubDate>Wed, 09 Oct 2024 08:53:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/10/09/improving-geminis-text-generation-accuracy-with-corpus-managed-by-google-spreadsheet-as-rag/</guid>
      <description>Gists
Abstract Gemini excels at text generation with RAG for large datasets, but smaller ones benefit from prompting or data upload. This report explores using Gemini 1.5 Flash/Pro with RAG on medium-sized, Google Spreadsheet-stored datasets for improved accuracy and effectiveness.
Introduction Gemini&amp;rsquo;s text generation capabilities have seen significant advancements with the Retrieval-Augmented Generation (RAG). This approach excels for large datasets, where embedding data and querying the model leads to high-quality answers.</description>
    </item>
    
    <item>
      <title>Pseudo Function Calling for Gemini API Through Prompt Engineering</title>
      <link>https://tanaikech.github.io/2024/10/01/pseudo-function-calling-for-gemini-api-through-prompt-engineering/</link>
      <pubDate>Tue, 01 Oct 2024 10:39:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/10/01/pseudo-function-calling-for-gemini-api-through-prompt-engineering/</guid>
      <description>Gists
Abstract This research explores &amp;ldquo;pseudo function calling&amp;rdquo; in Gemini API using prompt engineering with JSON schema, bypassing model dependency limitations.
Introduction Large Language Models (LLMs) like Gemini and ChatGPT offer powerful functionalities, but their capabilities can be further extended through function calling. This feature allows the LLM to execute pre-defined functions with arguments generated based on the user&amp;rsquo;s prompt. This unlocks a wide range of applications, as demonstrated in these resources (see References).</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/09/26/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Thu, 26 Sep 2024 10:06:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/09/26/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.2   v2.0.2 (September 26, 2024)
 As the option for generationConfig, the properties response_schema and temperature were added.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Harnessing Gemini&#39;s Power: A Guide to Generating Content from Structured Data</title>
      <link>https://tanaikech.github.io/2024/09/25/harnessing-geminis-power-a-guide-to-generating-content-from-structured-data/</link>
      <pubDate>Wed, 25 Sep 2024 15:35:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/09/25/harnessing-geminis-power-a-guide-to-generating-content-from-structured-data/</guid>
      <description>Gists
Abstract This report presents a method to train AI to effectively generate content from smaller, structured datasets using Python. Gemini&amp;rsquo;s token processing capabilities are leveraged to effectively utilize limited data, while techniques for interpreting CSV and JSON formats are explored.
Introduction In the era of rapidly advancing artificial intelligence (AI), the ability to analyze and leverage large datasets is paramount. While RAG (Retrieval Augmented Generation) environments are often ideal for such tasks, there are scenarios where content generation needs to be achieved with smaller datasets.</description>
    </item>
    
    <item>
      <title>Flexible Labeling for Gmail using Gemini API with Google Apps Script Part 3</title>
      <link>https://tanaikech.github.io/2024/09/19/flexible-labeling-for-gmail-using-gemini-api-with-google-apps-script-part-3/</link>
      <pubDate>Thu, 19 Sep 2024 12:02:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/09/19/flexible-labeling-for-gmail-using-gemini-api-with-google-apps-script-part-3/</guid>
      <description>Gists
Abstract This report improves Gmail email labeling with Gemini API using JSON schema and leverages advancements in Gemini 1.5 Flash for faster processing.
Introduction As Gemini continues to evolve, existing scripts utilizing its capabilities can be revisited to improve efficiency and accuracy. This includes the process of flexible labeling for Gmail emails using the Gemini API. I have previously explored this topic in two reports:
 December 19, 2023: Demonstrating Gmail label selection based solely on prompts.</description>
    </item>
    
    <item>
      <title>Gemini-Powered Dynamic Pseudo-RAG for Efficient Script Generation</title>
      <link>https://tanaikech.github.io/2024/09/12/gemini-powered-dynamic-pseudo-rag-for-efficient-script-generation/</link>
      <pubDate>Thu, 12 Sep 2024 15:16:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/09/12/gemini-powered-dynamic-pseudo-rag-for-efficient-script-generation/</guid>
      <description>Gists
Abstract This report presents a method to optimize AI-generated scripts for processing costs using Gemini and Google Apps Script. By incorporating external knowledge from sources like StackOverflow, we demonstrate the effective generation of efficient scripts that minimize overhead while maintaining desired outcomes. This approach can be considered a dynamic pseudo-RAG technique.
Introduction The proliferation of generative AI, exemplified by Google Gemini, has led to a surge in AI-generated scripts. This trend is evident in the growing number of questions on platforms like StackOverflow that involve AI-generated scripts.</description>
    </item>
    
    <item>
      <title>A Versatile Approach to Uploading Files with Node.js: Integrating Gemini, Drive, YouTube, and Other APIs</title>
      <link>https://tanaikech.github.io/2024/08/24/a-versatile-approach-to-uploading-files-with-node.js-integrating-gemini-drive-youtube-and-other-apis/</link>
      <pubDate>Sat, 24 Aug 2024 15:09:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/24/a-versatile-approach-to-uploading-files-with-node.js-integrating-gemini-drive-youtube-and-other-apis/</guid>
      <description>Gists
Abstract A script using resumable upload with file streams is proposed to enhance file handling within the Gemini Generative AI API for Node.js. This script allows uploading from web URLs and local storage, efficiently handles large files, and offers potential reusability with other Google APIs.
Description The @google/generative-ai library provides a powerful way to interact with the Gemini Generative AI API using Node.js. This enables developers to programmatically generate creative text formats, translate languages, write different kinds of creative content, and answer your questions in an informative way, all powered by Gemini&amp;rsquo;s advanced AI models.</description>
    </item>
    
    <item>
      <title>Expanding Gemini API&#39;s Capabilities: A Practical Solution for Web Content Summarization</title>
      <link>https://tanaikech.github.io/2024/08/23/expanding-gemini-apis-capabilities-a-practical-solution-for-web-content-summarization/</link>
      <pubDate>Fri, 23 Aug 2024 11:32:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/23/expanding-gemini-apis-capabilities-a-practical-solution-for-web-content-summarization/</guid>
      <description>Gists
Abstract This study proposes a workaround to address the Gemini API&amp;rsquo;s current inability to directly process web content from URLs. By utilizing Google Apps Script, the method extracts relevant information from a specified URL and feeds it into the API for summarization. This approach offers a solution for generating comprehensive summaries from web-based content until the API&amp;rsquo;s limitations are resolved.
Introduction While Gemini API offers powerful text generation capabilities, it currently faces limitations in directly accessing and processing web content from URLs.</description>
    </item>
    
    <item>
      <title>Leveraging GCP for Seamless Google Apps Script Log Export and Analysis with Gemini API</title>
      <link>https://tanaikech.github.io/2024/08/18/leveraging-gcp-for-seamless-google-apps-script-log-export-and-analysis-with-gemini-api/</link>
      <pubDate>Sun, 18 Aug 2024 15:05:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/18/leveraging-gcp-for-seamless-google-apps-script-log-export-and-analysis-with-gemini-api/</guid>
      <description>Gists
Abstract Linking a Google Apps Script project to a GCP project enables you to export logs from the Class console to Logs Explorer for simplified analysis and debugging. By overcoming the limitations of in-script logging methods, this report outlines a method for exporting logs using the Cloud Logging API with Google Apps Script.
Introduction While developing applications with Google Apps Script, the Class console is a valuable tool for debugging individual components.</description>
    </item>
    
    <item>
      <title>A Novel Approach to Learning: Combining Gemini with Google Apps Script for Automated Q&amp;A</title>
      <link>https://tanaikech.github.io/2024/08/08/a-novel-approach-to-learning-combining-gemini-with-google-apps-script-for-automated-qa/</link>
      <pubDate>Thu, 08 Aug 2024 15:05:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/08/a-novel-approach-to-learning-combining-gemini-with-google-apps-script-for-automated-qa/</guid>
      <description>Gists
Abstract This report proposes a novel learning method using Gemini to automate Q&amp;amp;A generation, addressing the challenges of manual Q&amp;amp;A creation. By integrating with Google tools, this approach aims to enhance learning efficiency, accessibility, and personalization while reducing costs.
Introduction Mastering a new subject often demands a significant time commitment. A proven strategy for efficient learning is through question-and-answer (Q&amp;amp;A) practice. This method typically involves constructing a dataset of pertinent Q&amp;amp;A pairs and subsequently engaging in repeated practice until desired proficiency levels are achieved.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/08/04/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Sun, 04 Aug 2024 11:26:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/04/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.1   v2.0.1 (August 4, 2024)
 From this version, codeExecution can be used. Ref    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Updated: GAS Application - UnlockSmartInvoiceManagementWithGeminiAPI</title>
      <link>https://tanaikech.github.io/2024/08/03/updated-gas-application-unlocksmartinvoicemanagementwithgeminiapi/</link>
      <pubDate>Sat, 03 Aug 2024 14:36:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/03/updated-gas-application-unlocksmartinvoicemanagementwithgeminiapi/</guid>
      <description>UnlockSmartInvoiceManagementWithGeminiAPI was updated to v1.0.3.   v1.0.3 (August 3, 2024)
 On August 3, 2024, I upated GeminiWithFiles (https://github.com/tanaikech/GeminiWithFiles). In this version, PDF data can be processed with Gemini API without async/await. So, I updated UnlockSmartInvoiceManagementWithGeminiAPI.    You can see the detail information here https://github.com/tanaikech/UnlockSmartInvoiceManagementWithGeminiAPI</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/08/03/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Sat, 03 Aug 2024 14:20:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/08/03/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v2.0.0   v2.0.0 (August 3, 2024)
 From this version, the following changes were made.   PDF data can be directly used. Ref By this, PDFApp is not required to be used. By this, the script can be used without async/await. As the default, functions: {} is used. So, the default function calling was removed. Because in the current stage, JSON output can be easily returned using a JSON schema and response_mime_type.</description>
    </item>
    
    <item>
      <title>Gemini API: Revolutionizing Content Generation with Direct PDF Input</title>
      <link>https://tanaikech.github.io/2024/07/23/gemini-api-revolutionizing-content-generation-with-direct-pdf-input/</link>
      <pubDate>Tue, 23 Jul 2024 14:17:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/07/23/gemini-api-revolutionizing-content-generation-with-direct-pdf-input/</guid>
      <description>Gists
Abstract Gemini API now enables direct PDF processing for content generation, eliminating image conversion and reducing costs. This report provides a sample script to demonstrate this new capability and its potential applications.
Introduction Gemini API has recently introduced the ability to directly process PDF data for content generation, significantly enhancing its capabilities. Previously, to utilize PDF data for content creation, it was necessary to convert each PDF page into a separate image format.</description>
    </item>
    
    <item>
      <title>Updated: GAS Application - UnlockSmartInvoiceManagementWithGeminiAPI</title>
      <link>https://tanaikech.github.io/2024/07/23/updated-gas-application-unlocksmartinvoicemanagementwithgeminiapi/</link>
      <pubDate>Tue, 23 Jul 2024 10:46:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/07/23/updated-gas-application-unlocksmartinvoicemanagementwithgeminiapi/</guid>
      <description>UnlockSmartInvoiceManagementWithGeminiAPI was updated to v1.0.2.   v1.0.2 (July 23, 2024)
 On July 23, 2024, I noticed that PDF data could be directly parsed by Gemini API. It is considered that this is due to the update by the Google side. So, I updated setBlobs([blob], true) to setBlobs([blob], false) of the method parseInvoiceByGemini_. By this modification, the PDF blob is directly used with Gemini API. Ref    You can see the detail information here https://github.</description>
    </item>
    
    <item>
      <title>Uploading Large Files to Gemini with Google Apps Script: Overcoming 50 MB Limit</title>
      <link>https://tanaikech.github.io/2024/07/11/uploading-large-files-to-gemini-with-google-apps-script-overcoming-50-mb-limit/</link>
      <pubDate>Thu, 11 Jul 2024 11:10:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/07/11/uploading-large-files-to-gemini-with-google-apps-script-overcoming-50-mb-limit/</guid>
      <description>Gists
Abstract Uploads in Google Apps Script are limited to 50 MB, hindering work with large datasets. This report introduces a script with uploadType=resumable to overcome this limit, enabling uploads over 50 MB to Gemini and other services.
Introduction This report explores the limitations of data upload size using Google Apps Script and introduces a script to overcome these limitations. In the current stage, Gemini API can generate content using the uploaded data to Gemini.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/07/04/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Thu, 04 Jul 2024 14:08:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/07/04/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.7.   v1.0.7 (July 4, 2024)
 From this version, when doCountToken: true and exportTotalTokens: true are used in the object of the argument of geminiWithFiles, the total tokens are returned. In this case, the returned value is an object like {returnValue: &amp;quot;###&amp;quot;, totalTokens: ###}. Ref    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Updated: GAS Application - UnlockSmartInvoiceManagementWithGeminiAPI</title>
      <link>https://tanaikech.github.io/2024/06/17/updated-gas-application-unlocksmartinvoicemanagementwithgeminiapi/</link>
      <pubDate>Mon, 17 Jun 2024 14:37:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/17/updated-gas-application-unlocksmartinvoicemanagementwithgeminiapi/</guid>
      <description>UnlockSmartInvoiceManagementWithGeminiAPI was updated to v1.0.1.   v1.0.1 (June 17, 2024)
 In order to easily customize the value of &amp;ldquo;jsonSchema&amp;rdquo; for generating content with Gemini API, I added it as a new sheet of &amp;ldquo;jsonSchema&amp;rdquo; sheet in the Spreadsheet. When you customize it, you can edit the cell &amp;ldquo;A1&amp;rdquo; of the &amp;ldquo;jsonSchema&amp;rdquo; sheet. By this, the script generates content with Gemini API using your customized JSON schema. The cell &amp;ldquo;A2&amp;rdquo; is the number of characters of &amp;ldquo;A1&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/06/15/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Sat, 15 Jun 2024 16:32:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/15/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.6.   v1.0.6 (June 15, 2024)
 Included the script of PDFApp in this library.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Unlock Smart Invoice Management: Gemini, Gmail, and Google Apps Script Integration</title>
      <link>https://tanaikech.github.io/2024/06/15/unlock-smart-invoice-management-gemini-gmail-and-google-apps-script-integration/</link>
      <pubDate>Sat, 15 Jun 2024 14:58:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/15/unlock-smart-invoice-management-gemini-gmail-and-google-apps-script-integration/</guid>
      <description>Gists You can see the presentation of this application at https://www.youtube.com/watch?v=Dc2WPQkovZE. Abstract This report describes an invoice processing application built with Google Apps Script. It leverages Gemini, a large language model, to automatically parse invoices received as email attachments and automates the process using time-driven triggers. Introduction The emergence of large language models (LLMs) like ChatGPT and Gemini has significantly impacted various aspects of our daily lives. One such example</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/06/07/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Fri, 07 Jun 2024 14:02:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/07/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.5.   v1.0.5 (June 7, 2024)
 Spelling mistakes in the warning message were modified. The wait time for changing the value of state for the movie file is changed from 5 seconds to 10 seconds per cycle.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>My post was featured in The overwhelmed person’s guide to Google Cloud: week of May 23</title>
      <link>https://tanaikech.github.io/2024/06/03/my-post-was-featured-in-the-overwhelmed-persons-guide-to-google-cloud-week-of-may-23/</link>
      <pubDate>Mon, 03 Jun 2024 08:11:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/03/my-post-was-featured-in-the-overwhelmed-persons-guide-to-google-cloud-week-of-may-23/</guid>
      <description>My post was featured in the section &amp;ldquo;Community cuts&amp;rdquo; of &amp;ldquo;The overwhelmed person’s guide to Google Cloud: week of May 23&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Expanding Error Messages for Google Apps Script with Gemini 1.5 Flash</title>
      <link>https://tanaikech.github.io/2024/06/02/expanding-error-messages-for-google-apps-script-with-gemini-1.5-flash/</link>
      <pubDate>Sun, 02 Jun 2024 15:46:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/02/expanding-error-messages-for-google-apps-script-with-gemini-1.5-flash/</guid>
      <description>Gitst
Abstract This report builds on prior work using Gemini 1.0 Pro to expand Google Apps Script error messages. It highlights how the script&amp;rsquo;s execution time limit created a bottleneck, but the introduction of Gemini 1.5 Flash eliminates this issue.
Introduction After the release of the Gemini API, I previously reported on &amp;ldquo;Expanding Error Messages of Google Apps Script using Gemini Pro API with Google Apps Script&amp;rdquo;. Ref In that report, I utilized the Gemini 1.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/05/29/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Wed, 29 May 2024 14:31:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/29/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.4.   v1.0.4 (May 29, 2024)
 Recently, when model.countToken is used with the uploaded files, I confirmed that an error like You do not have permission to access the File ### or it may not exist. occurred. In order to handle this issue, I modified the library. In order to use the movie files for generateContent, I modified the library. Ref    You can see the detail information here https://github.</description>
    </item>
    
    <item>
      <title>Taming the Wild Output: Effective Control of Gemini API Response Formats with response_schema</title>
      <link>https://tanaikech.github.io/2024/05/21/taming-the-wild-output-effective-control-of-gemini-api-response-formats-with-response_schema/</link>
      <pubDate>Tue, 21 May 2024 15:57:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/21/taming-the-wild-output-effective-control-of-gemini-api-response-formats-with-response_schema/</guid>
      <description>Gists
Abstract The Gemini API traditionally required specific prompts for desired output formats. This report explores two new GenerationConfig properties: &amp;ldquo;response_mime_type&amp;rdquo; and &amp;ldquo;response_schema&amp;rdquo;. These allow developers to directly specify formats like JSON, enhancing control and predictability. We analyze and compare the effectiveness of both properties for controlling Gemini API output formats.
Introduction One of the key challenges when working with the Gemini API is ensuring the output data is delivered in the format your application requires.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/05/17/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Fri, 17 May 2024 14:53:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/17/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.3.   v1.0.3 (May 17, 2024)
 Bugs were removed.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Leveraging Gemini 1.5 API for Automated Test Case Generation in Google Apps Script Reverse Engineering</title>
      <link>https://tanaikech.github.io/2024/05/08/leveraging-gemini-1.5-api-for-automated-test-case-generation-in-google-apps-script-reverse-engineering/</link>
      <pubDate>Wed, 08 May 2024 14:24:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/08/leveraging-gemini-1.5-api-for-automated-test-case-generation-in-google-apps-script-reverse-engineering/</guid>
      <description>Gists
Abstract This report examines leveraging Gemini 1.5 API with Google Apps Script to automate sample input creation during script reverse engineering. Traditionally, this process is manual and time-consuming, especially for functions with numerous test cases. Gemini 1.5 API&amp;rsquo;s potential to streamline development by automating input generation is explored through applying reverse engineering techniques to Google Apps Script samples.
Introduction With the release of Gemini 1.5 API, users gained the ability to process more complex data, opening doors for various application developments.</description>
    </item>
    
    <item>
      <title>Gemini API with JSON schema</title>
      <link>https://tanaikech.github.io/2024/05/07/gemini-api-with-json-schema/</link>
      <pubDate>Tue, 07 May 2024 16:33:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/07/gemini-api-with-json-schema/</guid>
      <description>Gists
Overview These are sample scripts in Python and Node.js for controlling the output format of the Gemini API using JSON schemas.
Description In a previous report, &amp;ldquo;Taming the Wild Output: Effective Control of Gemini API Response Formats with response_mime_type,&amp;rdquo; I presented sample scripts created with Google Apps Script. Ref Following its publication, I received requests for sample scripts using Python and Node.js. This report addresses those requests by providing sample scripts in both languages.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/05/07/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Tue, 07 May 2024 10:25:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/07/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.2.   v1.0.2 (May 7, 2024)
 For generating content, parts was added. From this version, you can select one of q, jsonSchema, and parts. From this version, systemInstruction can be used. In order to call the function call, toolConfig was added to the request body.    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/05/02/updated-gas-library-geminiwithfiles/</link>
      <pubDate>Thu, 02 May 2024 11:18:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/02/updated-gas-library-geminiwithfiles/</guid>
      <description>GeminiWithFiles was updated to v1.0.1.   v1.0.1 (May 2, 2024)
 response_mime_type got to be able to be used for controlling the output format. Ref    You can see the detail information here https://github.com/tanaikech/GeminiWithFiles</description>
    </item>
    
    <item>
      <title>Taming the Wild Output: Effective Control of Gemini API Response Formats with response_mime_type</title>
      <link>https://tanaikech.github.io/2024/05/01/taming-the-wild-output-effective-control-of-gemini-api-response-formats-with-response_mime_type/</link>
      <pubDate>Wed, 01 May 2024 13:57:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/01/taming-the-wild-output-effective-control-of-gemini-api-response-formats-with-response_mime_type/</guid>
      <description>Gists
Abstract This report explores controlling output formats for the Gemini API. Traditionally, prompts dictated the format. A new property, &amp;ldquo;response_mime_type&amp;rdquo;, allows specifying the format (e.g., JSON) directly. Testing confirms this property improves control over output format, especially for complex JSON schemas. The recommended approach is to combine a detailed JSON schema with &amp;ldquo;response_mime_type&amp;rdquo; for clear and consistent outputs.
Introduction One of the key challenges when working with the Gemini API is ensuring the output data is in the format your application requires.</description>
    </item>
    
    <item>
      <title>GAS Library - GeminiWithFiles</title>
      <link>https://tanaikech.github.io/2024/04/26/gas-library-geminiwithfiles/</link>
      <pubDate>Fri, 26 Apr 2024 15:33:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/04/26/gas-library-geminiwithfiles/</guid>
      <description>Overview This is a Google Apps Script library for Gemini API with files.
A new Google Apps Script library called GeminiWithFiles simplifies using Gemini, a large language model, to process unstructured data like images and PDFs. GeminiWithFiles can upload files, generate content, and create descriptions from multiple images at once. This significantly reduces workload and expands possibilities for using Gemini.
Description Recently, Gemini, a large language model from Google AI, has brought new possibilities to various tasks by enabling the use of unstructured data as structured data.</description>
    </item>
    
    <item>
      <title>Batch Processing Powerhouse: Leverage Gemini 1.5 API and Google Apps Script for Efficient Content Workflows</title>
      <link>https://tanaikech.github.io/2024/04/26/batch-processing-powerhouse-leverage-gemini-1.5-api-and-google-apps-script-for-efficient-content-workflows/</link>
      <pubDate>Fri, 26 Apr 2024 15:15:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/04/26/batch-processing-powerhouse-leverage-gemini-1.5-api-and-google-apps-script-for-efficient-content-workflows/</guid>
      <description>Gists
Abstract A new Google Apps Script library, &amp;ldquo;GeminiWithFiles&amp;rdquo;, simplifies using the powerful Gemini 1.5 AI model. It lets users directly upload files for content generation or create descriptions for many images at once, making it much faster than prior methods. This is helpful for tasks involving large amounts of text or images.
Introduction Recently, Gemini, a family of Google&amp;rsquo;s most capable AI models, has revolutionized various tasks by allowing unstructured data to be used as structured data.</description>
    </item>
    
    <item>
      <title>Specifying Output Types for Gemini API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/04/10/specifying-output-types-for-gemini-api-with-google-apps-script/</link>
      <pubDate>Wed, 10 Apr 2024 14:35:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/04/10/specifying-output-types-for-gemini-api-with-google-apps-script/</guid>
      <description>Gists
Abstract The Gemini API generates different outputs depending on the prompts. This report explains how to use function calling in the new Gemini 1.5 API to control the output format (string, number, etc.) within a script during a chat session. This allows for more flexibility in using the Gemini API&amp;rsquo;s results.
Introduction The appearance of Gemini has already brought a wave of innovation to various fields. When the Gemini API returns a response, the format of the response is highly dependent on the input text provided as a prompt.</description>
    </item>
    
    <item>
      <title>Parsing Invoices using Gemini 1.5 API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/04/03/parsing-invoices-using-gemini-1.5-api-with-google-apps-script/</link>
      <pubDate>Wed, 03 Apr 2024 11:59:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/04/03/parsing-invoices-using-gemini-1.5-api-with-google-apps-script/</guid>
      <description>Gists
Abstract This report explores using Gemini, a new AI model, to parse invoices in Gmail attachments. Traditional text searching proved unreliable due to invoice format variations. Gemini&amp;rsquo;s capabilities can potentially overcome this inconsistency and improve invoice data extraction.
Introduction After Gemini, a large language model from Google AI, has been released, it has the potential to be used for modifying various situations, including information extraction from documents. In my specific case, I work with invoices in PDF format.</description>
    </item>
    
    <item>
      <title>Analyzing Trends of Google Apps Script from Questions on Stackoverflow using Gemini 1.5 API</title>
      <link>https://tanaikech.github.io/2024/03/30/analyzing-trends-of-google-apps-script-from-questions-on-stackoverflow-using-gemini-1.5-api/</link>
      <pubDate>Sat, 30 Mar 2024 14:28:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/03/30/analyzing-trends-of-google-apps-script-from-questions-on-stackoverflow-using-gemini-1.5-api/</guid>
      <description>Gists
Abstract A new large language model (LLM) called Gemini with an API is now available, allowing developers to analyze vast amounts of data. This report explores trends in Google Apps Script by using the Gemini 1.5 API to analyze questions on Stack Overflow.
Introduction The release of the LLM model Gemini as an API on Vertex AI and Google AI Studio has opened a world of possibilities. Ref The Gemini API significantly expands the potential of various scripting languages, paving the way for diverse applications.</description>
    </item>
    
    <item>
      <title>Generating Texts using Files Uploaded by Gemini 1.5 API</title>
      <link>https://tanaikech.github.io/2024/03/30/generating-texts-using-files-uploaded-by-gemini-1.5-api/</link>
      <pubDate>Sat, 30 Mar 2024 11:30:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/03/30/generating-texts-using-files-uploaded-by-gemini-1.5-api/</guid>
      <description>Gists
Abstract The Gemini API allows the generating of text from uploaded files using Google Apps Script. It expands the potential of various scripting languages for diverse applications.
Introduction With the release of the LLM model Gemini as an API on Vertex AI and Google AI Studio, a world of possibilities has opened up. Ref The Gemini API significantly expands the potential of various scripting languages and paves the way for diverse applications.</description>
    </item>
    
    <item>
      <title>Crafting Bespoke Output Formats with Gemini API</title>
      <link>https://tanaikech.github.io/2024/03/25/crafting-bespoke-output-formats-with-gemini-api/</link>
      <pubDate>Mon, 25 Mar 2024 10:54:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/03/25/crafting-bespoke-output-formats-with-gemini-api/</guid>
      <description>Gists
Abstract The Gemini API unlocks potential for diverse applications but requires consistent output formatting. This report proposes a method using question phrasing and API calls to craft a bespoke output, enabling seamless integration with user applications. Examples include data categorization and obtaining multiple response options.
Introduction With the release of the LLM model Gemini as an API on Vertex AI and Google AI Studio, a world of possibilities has opened up.</description>
    </item>
    
    <item>
      <title>Attempting Reverse Engineering with Gemini API and Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/03/21/attempting-reverse-engineering-with-gemini-api-and-google-apps-script/</link>
      <pubDate>Thu, 21 Mar 2024 15:43:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/03/21/attempting-reverse-engineering-with-gemini-api-and-google-apps-script/</guid>
      <description>Gists
Abstract Gemini API on Vertex AI/Studio unlocks new applications with data retrieval and content generation through function calls. This report explores using the API for reverse engineering with a sample interpreter in Google Apps Script.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio unlocks a vast potential for new applications and methodologies. It significantly expands capabilities across diverse situations, paving the way for groundbreaking applications.</description>
    </item>
    
    <item>
      <title>Enhanced Search using Gemini API</title>
      <link>https://tanaikech.github.io/2024/03/06/enhanced-search-using-gemini-api/</link>
      <pubDate>Wed, 06 Mar 2024 15:24:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/03/06/enhanced-search-using-gemini-api/</guid>
      <description>Gists
Abstract The Gemini API can now do semantic searches, going beyond content generation. This means it can understand the meaning of your search and provide better results, even if your words don&amp;rsquo;t exactly match the data. This report introduces the enhanced search capabilities of the Gemini API.
Introduction The Gemini API expands its potential beyond content generation to encompass powerful semantic search capabilities. Searching existing data is crucial in various situations.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - CorporaApp</title>
      <link>https://tanaikech.github.io/2024/03/06/updated-gas-library-corporaapp/</link>
      <pubDate>Wed, 06 Mar 2024 12:09:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/03/06/updated-gas-library-corporaapp/</guid>
      <description>CorporaApp was updated to v1.0.3.   v1.0.3 (March 6, 2024)
 New method of getChunk was added. When this method is used, you can retrieve a single chunk using the resource name of chunk.    You can see the detail information here https://github.com/tanaikech/CorporaApp</description>
    </item>
    
    <item>
      <title>Similarity Viewer using Gemini API with Google Spreadsheet and Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/02/29/similarity-viewer-using-gemini-api-with-google-spreadsheet-and-google-apps-script/</link>
      <pubDate>Thu, 29 Feb 2024 11:22:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/02/29/similarity-viewer-using-gemini-api-with-google-spreadsheet-and-google-apps-script/</guid>
      <description>Gists
Abstract The Gemini API enables both content generation and semantic search, managing data effectively. This report introduces a Gemini-powered similarity viewer for easy visualization of complex text similarity scores, using Google Spreadsheet and Apps Script.
Introduction The Gemini API unlocks new possibilities, extending its capabilities beyond content generation to encompass semantic search. Within this context, the API excels at efficiently managing data within corpora. While semantic search provides valuable similarity scores (chunkRelevanceScore) for text pairs, interpreting these numerical values can be cumbersome.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - CorporaApp</title>
      <link>https://tanaikech.github.io/2024/02/26/updated-gas-library-corporaapp/</link>
      <pubDate>Mon, 26 Feb 2024 10:23:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/02/26/updated-gas-library-corporaapp/</guid>
      <description>CorporaApp was updated to v1.0.2.   v1.0.2 (February 26, 2024)
 New method of setAccessToken was added. When this method is used, you can use the access token retrieved from the service account. Default access token is retrieved by ScriptApp.getOAuthToken().    You can see the detail information here https://github.com/tanaikech/CorporaApp</description>
    </item>
    
    <item>
      <title>Creating Image Bot using Gemini with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/02/22/creating-image-bot-using-gemini-with-google-apps-script/</link>
      <pubDate>Thu, 22 Feb 2024 12:06:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/02/22/creating-image-bot-using-gemini-with-google-apps-script/</guid>
      <description>Gists
Abstract New Gemini API opens doors for developers to integrate its AI power into apps, potentially impacting education, healthcare, and business. The latest Gemini 1.5 brings even more features. This report showcases an image bot using Gemini as one example of its diverse applications. Showcasing its diverse application potential across various fields.
Introduction The recent release of Gemini as an accessible API on Vertex AI and Google AI Studio empowers developers to integrate its vast capabilities into their applications, potentially revolutionizing fields like education, healthcare, and business.</description>
    </item>
    
    <item>
      <title>Guide to Function Calling with Gemini and Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/02/18/guide-to-function-calling-with-gemini-and-google-apps-script/</link>
      <pubDate>Sun, 18 Feb 2024 14:22:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/02/18/guide-to-function-calling-with-gemini-and-google-apps-script/</guid>
      <description>Gists
Abstract Powerful AI tool Gemini&amp;rsquo;s API release (Vertex AI &amp;amp; Google AI Studio) opens doors for diverse applications. Its recent upgrade to version 1.5 boosts capabilities. This report demonstrates using simple Google Apps Script function calls to leverage Gemini&amp;rsquo;s power for both data retrieval and content generation.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio unlocks a world of possibilities.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - CorporaApp</title>
      <link>https://tanaikech.github.io/2024/02/16/updated-gas-library-corporaapp/</link>
      <pubDate>Fri, 16 Feb 2024 17:49:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/02/16/updated-gas-library-corporaapp/</guid>
      <description>CorporaApp was updated to v1.0.1.   v1.0.1 (February 16, 2024)
 New method of searchQueryWithGenerateAnswer was added.    You can see the detail information here https://github.com/tanaikech/CorporaApp</description>
    </item>
    
    <item>
      <title>Applying Gemini Pro API to Flexible Templates using Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/02/07/applying-gemini-pro-api-to-flexible-templates-using-google-apps-script/</link>
      <pubDate>Wed, 07 Feb 2024 16:57:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/02/07/applying-gemini-pro-api-to-flexible-templates-using-google-apps-script/</guid>
      <description>Gists
Abstract New &amp;ldquo;semantic search&amp;rdquo; features in Gemini API help find desired information within its corpora. While using these features with Google Apps Script was complex, a new library simplifies the process. This report proposes using this library with Gemini-generated content to automate template processes in Google Docs and Slides, creating a more flexible workflow.
Introduction The semantic search opens up a new wind for finding the expected values. Recently, the APIs for managing corpora have been added to Gemini API.</description>
    </item>
    
    <item>
      <title>Semantic Search using Corpus of Gemini API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/01/31/semantic-search-using-corpus-of-gemini-api-with-google-apps-script/</link>
      <pubDate>Wed, 31 Jan 2024 10:54:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/01/31/semantic-search-using-corpus-of-gemini-api-with-google-apps-script/</guid>
      <description>Gists
Description In the current stage, v1beta of Gemini API can use the corpora. Ref When the corpora are used, the values can be searched with the semantic search. In the current stage, 5 corpora can be created in a single project. And, each corpus can have 10,000 documents and 1,000,000 chunks. In this report, I would like to introduce a method for achieving the semantic search using the corpora with Google Apps Script.</description>
    </item>
    
    <item>
      <title>Flexible Labeling for Gmail using Gemini Pro API with Google Apps Script Part 2</title>
      <link>https://tanaikech.github.io/2024/01/30/flexible-labeling-for-gmail-using-gemini-pro-api-with-google-apps-script-part-2/</link>
      <pubDate>Tue, 30 Jan 2024 11:51:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/01/30/flexible-labeling-for-gmail-using-gemini-pro-api-with-google-apps-script-part-2/</guid>
      <description>Gists
Description I have published &amp;ldquo;Flexible Labeling for Gmail using Gemini Pro API with Google Apps Script&amp;rdquo; on December 19, 2023. Today, I published &amp;ldquo;Categorization using Gemini Pro API with Google Apps Script&amp;rdquo;.
In this report, as part 2, I would like to introduce 2 sample scripts for flexible labeling for Gmail using the semantic search and the function calling of Gemini Pro API with Google Apps Script.
Usage In order to test this script, please do the following flow.</description>
    </item>
    
    <item>
      <title>Categorization using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/01/30/categorization-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Tue, 30 Jan 2024 11:47:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/01/30/categorization-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Abstract This report explores using the Gemini Pro API with Google Apps Script to achieve flexible data categorization.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio opens a world of possibilities. Ref and Ref I believe Gemini API significantly expands the potential of Google Apps Script and paves the way for diverse applications. In this report, I present the flexible categorization of data using Gemini Pro API with Google Apps Script.</description>
    </item>
    
    <item>
      <title>Semantic Search using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2024/01/25/semantic-search-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Thu, 25 Jan 2024 12:17:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/01/25/semantic-search-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Abstract Gemini API unlocks semantic search for Google Apps Script, boosting its power beyond automation. This report explores the result of attempting the semantic search using Gemini Pro API with Google Apps Script.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio opens a world of possibilities. Ref and Ref I believe Gemini API significantly expands the potential of Google Apps Script and paves the way for diverse applications.</description>
    </item>
    
    <item>
      <title>Inserting Generated Text to Google Documents, Google Spreadsheets, and Google Slides using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/12/22/inserting-generated-text-to-google-documents-google-spreadsheets-and-google-slides-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Fri, 22 Dec 2023 15:14:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/12/22/inserting-generated-text-to-google-documents-google-spreadsheets-and-google-slides-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Description When the generated text can be automatically inserted into the cursor position of Google Document, Google Spreadsheet, and Google Slide, it will be useful for users. This report introduces sample scripts for achieving this.
Sample scripts Here, I would like to introduce 3 sample scripts for a Google Document, a Google Spreadsheet, and a Google Slide.
Create an API key These sample scripts request Gemini Pro API using an API key.</description>
    </item>
    
    <item>
      <title>Expanding Error Messages of Google Apps Script using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/12/20/expanding-error-messages-of-google-apps-script-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Wed, 20 Dec 2023 08:25:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/12/20/expanding-error-messages-of-google-apps-script-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Abstract It is considered that when the current error message of Google Apps Script is expanded, it will be useful for a lot of users. This report introduces a sample script for expanding the error message of Google Apps Script using Gemini Pro API with Google Apps Script.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio opens a world of possibilities.</description>
    </item>
    
    <item>
      <title>Flexible Labeling for Gmail using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/12/19/flexible-labeling-for-gmail-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Tue, 19 Dec 2023 09:19:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/12/19/flexible-labeling-for-gmail-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Abstract The release of Gemini API is expected to expand the future of Google Apps Script. This report introduces a sample script for flexible email labeling in Gmail using Gemini API with Google Apps Script.
Introduction The recent release of the LLM model Gemini as an API on Vertex AI and Google AI Studio opens a world of possibilities. Ref and Ref I believe Gemini API significantly expands the potential of Google Apps Script and paves the way for diverse applications.</description>
    </item>
    
    <item>
      <title>Automatically Creating Descriptions of Files on Google Drive using Gemini Pro API with Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/12/17/automatically-creating-descriptions-of-files-on-google-drive-using-gemini-pro-api-with-google-apps-script/</link>
      <pubDate>Sun, 17 Dec 2023 17:32:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/12/17/automatically-creating-descriptions-of-files-on-google-drive-using-gemini-pro-api-with-google-apps-script/</guid>
      <description>Gists
Abstract Gemini LLM, now a Vertex AI/Studio API, unlocks easy document summarization and image analysis via Google Apps Script. This report details an example script for automatically creating the description of the files on Google Drive and highlights seamless integration options with API keys.
Introduction Recently, the LLM model Gemini has been released and is now available as an API on Vertex AI and Google AI Studio. Ref and Ref This report presents a simple Google Apps Script example for automatically creating descriptions of files on Google Drive using the Gemini Pro API.</description>
    </item>
    
  </channel>
</rss>
