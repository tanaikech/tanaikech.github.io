<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Drive on tanaike</title>
    <link>https://tanaikech.github.io/tags/google-drive/</link>
    <description>Recent content in Google Drive on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 18 Jun 2024 09:03:25 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/google-drive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Updated: GAS Library - MoveFolder</title>
      <link>https://tanaikech.github.io/2024/06/18/updated-gas-library-movefolder/</link>
      <pubDate>Tue, 18 Jun 2024 09:03:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/18/updated-gas-library-movefolder/</guid>
      <description>MoveFolder was updated to v1.0.1.   v1.0.1 (June 18, 2024)
 In the recent update on the Google side, it was found that in the current stage, when the other libraries are loaded from a library, an error like We&#39;re sorry, a server error occurred while reading from storage. Error code NOT_FOUND occurs. So, from v1.0.1, the library of BatchRequest is included in this library.    You can see the detail information here https://github.</description>
    </item>
    
    <item>
      <title>GAS Library - MoveFolder</title>
      <link>https://tanaikech.github.io/2024/06/06/gas-library-movefolder/</link>
      <pubDate>Thu, 06 Jun 2024 11:58:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/06/06/gas-library-movefolder/</guid>
      <description>Overview This is a Google Apps Script library for moving a folder including files and folders on Google Drive.
Description This library addresses a common challenge: efficiently moving folders, including their subfolders and files, between Google Drives. This encompasses both personal and shared drives using a script. While Google Drive offers straightforward methods for moving individual files between any drives, directly moving entire folders containing subfolders presents limitations, particularly when shared drives are involved.</description>
    </item>
    
    <item>
      <title>Retrieving Specific Folders from Google Drive using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/11/29/retrieving-specific-folders-from-google-drive-using-google-apps-script/</link>
      <pubDate>Tue, 29 Nov 2022 09:49:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/11/29/retrieving-specific-folders-from-google-drive-using-google-apps-script/</guid>
      <description>Gists
These are sample scripts for retrieving specific folders from Google Drive using Google Drive service (DriveApp) with Google Apps Script.
Retrieving folders in own Google Drive const folders = DriveApp.searchFolders(  `&amp;#39;${Session.getActiveUser().getEmail()}&amp;#39; in owners and trashed=false` ); const res = []; while (folders.hasNext()) {  const folder = folders.next();  res.push(folder.getName()); } console.log(res); Retrieving folders in shared Drives const folders = DriveApp.searchFolders(  `not &amp;#39;${Session.getActiveUser().getEmail()}&amp;#39; in owners and trashed=false` ); const res = []; while (folders.</description>
    </item>
    
    <item>
      <title>Retrieving Files of &#39;Shared with Me&#39; in Specific Folder using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/09/20/retrieving-files-of-shared-with-me-in-specific-folder-using-google-apps-script/</link>
      <pubDate>Tue, 20 Sep 2022 11:26:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/09/20/retrieving-files-of-shared-with-me-in-specific-folder-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the files of &amp;lsquo;Shared with Me&amp;rsquo; in the specific folder using Google Apps Script.
In the current stage, when you transfer the ownership of your file on your Google Drive to another user and/or copy the file &amp;ldquo;Shared with me&amp;rdquo; to the specific folder on your Google Drive, the file becomes the shortcut file. Under this situation, when you want to retrieve the files of &amp;ldquo;Shared with me&amp;rdquo; in the specific folder, unfortunately, the following search query cannot be used.</description>
    </item>
    
    <item>
      <title>Retrieving Files and Folders without Parents in Google Drive</title>
      <link>https://tanaikech.github.io/2020/03/13/retrieving-files-and-folders-without-parents-in-google-drive/</link>
      <pubDate>Fri, 13 Mar 2020 17:00:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/13/retrieving-files-and-folders-without-parents-in-google-drive/</guid>
      <description>Gists
This is a sample script for retrieving the files and folders which have no parents in own Google Drive.
When you use this script, please enable Drive API at Advanced Google services.
Sample script const myFunction = () =&amp;gt; {  const token = ScriptApp.getOAuthToken();  const fields = decodeURIComponent(  &amp;#34;nextPageToken,files(name,id,mimeType,parents)&amp;#34;  );  const q = decodeURIComponent(&amp;#34;&amp;#39;me&amp;#39; in owners and trashed = false&amp;#34;);  let files = [];  let pageToken = &amp;#34;&amp;#34;;  do {  const res = UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Moving File to Specific Folder using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/11/20/moving-file-to-specific-folder-using-google-apps-script/</link>
      <pubDate>Wed, 20 Nov 2019 15:45:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/11/20/moving-file-to-specific-folder-using-google-apps-script/</guid>
      <description>Gists
These are 3 sample scripts for moving a file to the specific folder in Google Drive using Google Apps Script.
Sample script 1 In this script, only Drive Service is used.
var sourceFileId = &amp;#34;###&amp;#34;; var destinationFolderId = &amp;#34;###&amp;#34;;  var file = DriveApp.getFileById(sourceFileId); DriveApp.getFolderById(destinationFolderId).addFile(file); file  .getParents()  .next()  .removeFile(file); Sample script 2 In this script, only Drive API at Advanced Google services. (In this case, it&amp;rsquo;s Drive API v2.</description>
    </item>
    
    <item>
      <title>One Time Download for Google Drive</title>
      <link>https://tanaikech.github.io/2019/10/04/one-time-download-for-google-drive/</link>
      <pubDate>Fri, 04 Oct 2019 11:59:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/04/one-time-download-for-google-drive/</guid>
      <description>Overview This is a sample script for downloading files from Google Drive by the one time download method.
Description When you download a file from Google Drive, in generally, the login and the access token are required. If you want to download the file without the authorization for the simple situation, the file is required to be publicly shared. But the file might not be able to be shared publicly, because of various reasons.</description>
    </item>
    
    <item>
      <title>Uploading File to Shared Folder using ggsrun</title>
      <link>https://tanaikech.github.io/2019/03/30/uploading-file-to-shared-folder-using-ggsrun/</link>
      <pubDate>Sat, 30 Mar 2019 16:42:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/30/uploading-file-to-shared-folder-using-ggsrun/</guid>
      <description>Gists
ggsrun is also a CLI application for using Google Drive.
Here, I would like to introduce a sample command. This is a sample command for uploading a file to a shared folder using ggsrun.
This situation supposes that the shared folder is https://drive.google.com/drive/folders/abcdefg?usp=sharing and the folder has the edit permission.
Sample command: $ ggsrun u -f &amp;#34;sample.txt&amp;#34; -p &amp;#34;abcdefg&amp;#34; --serviceaccount &amp;#34;###JSON file of Service Account###&amp;#34;  If you have already used OAuth2, you can upload the file by ggsrun u -f &amp;quot;sample.</description>
    </item>
    
    <item>
      <title>(NEW) Retrieve old revision file from Google Drive</title>
      <link>https://tanaikech.github.io/2017/07/12/new-retrieve-old-revision-file-from-google-drive/</link>
      <pubDate>Wed, 12 Jul 2017 13:21:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/12/new-retrieve-old-revision-file-from-google-drive/</guid>
      <description>This method was updated at July 12, 2017.
In order to use this, at first, please retrieve your access token and enable Drive API.
1. File ID Retrieve file id from file name.
curl -X GET -sSL \  -H &amp;#39;Authorization: Bearer ### Access token ###&amp;#39; \  &amp;#39;https://www.googleapis.com/drive/v3/files?q=name=&amp;#34;### FileName ###&amp;#34;&amp;amp;fields=files(id,name)&amp;#39; Reference : https://developers.google.com/drive/v3/reference/files/list
2. Revision ID Retrieve revision id from file id.
curl -X GET -sSL \  -H &amp;#39;Authorization: Bearer ### Access token ###&amp;#39; \  &amp;#39;https://www.</description>
    </item>
    
    <item>
      <title>Retrieving HTML File ID from Microsoft Docx File on Google Drive</title>
      <link>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive/</link>
      <pubDate>Wed, 24 May 2017 09:08:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/24/retrieving-html-file-id-from-microsoft-docx-file-on-google-drive/</guid>
      <description>This sample script converts from Microsoft Docx File on Google Drive to Google Spreadsheet, and converts to HTML file.
Drive APIs v2 and v3 are used for this. Please set as follows.
 Drive API v2 Drive API v3  &amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.
How to use it is as follows.</description>
    </item>
    
    <item>
      <title>Creating Spreadsheet from Excel file</title>
      <link>https://tanaikech.github.io/2017/04/15/creating-spreadsheet-from-excel-file/</link>
      <pubDate>Sat, 15 Apr 2017 10:39:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/15/creating-spreadsheet-from-excel-file/</guid>
      <description>These scripts can be executed on Script Editor. But, in order to use these, you have to enable Drive API of Advanced Google services and of Google API Console. &amp;ldquo;Drive API v2&amp;rdquo; can be used at Google Apps Script by enabling Drive API of Advanced Google services and of Google API Console.
How to use it is as follows.
  In the script editor, select Resources &amp;gt; Advanced Google services</description>
    </item>
    
    <item>
      <title>Creating Downloaded Excel file as Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/04/14/creating-downloaded-excel-file-as-spreadsheet/</link>
      <pubDate>Fri, 14 Apr 2017 18:03:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/14/creating-downloaded-excel-file-as-spreadsheet/</guid>
      <description>This is a sample GAS script to create an Excel file, which was downloaded from web, as Spreadsheet. By using Drive API, it can be achieved without access token.
Script :
function downloadFile(fileURL, folder) {  var filename = fileURL.match(&amp;#34;.+/(.+?)([\?#;].*)?$&amp;#34;)[1];  var response = UrlFetchApp.fetch(fileURL);  var rc = response.getResponseCode();  var blob = response.getBlob();  var resource = {  &amp;#34;mimeType&amp;#34;: &amp;#34;application/vnd.google-apps.spreadsheet&amp;#34;,  &amp;#34;parents&amp;#34;: [{id: folder}],  &amp;#34;title&amp;#34;: filename  };  var res = Drive.</description>
    </item>
    
    <item>
      <title>How to use &#34;fields&#34; of Drive APIs</title>
      <link>https://tanaikech.github.io/2017/03/30/how-to-use-fields-of-drive-apis/</link>
      <pubDate>Thu, 30 Mar 2017 08:53:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/30/how-to-use-fields-of-drive-apis/</guid>
      <description>There are a lot of APIs on Google. When we use Google Drive APIs, they usually have &amp;ldquo;fields&amp;rdquo; as a resource. The parameter &amp;ldquo;fields&amp;rdquo; gives various information which is selected to us. This is one of important parameters. And this can be used at Google Apps Script (GAS) although that version is v2. About how to use it, there are some documents. But it is difficult to find how to use it at GAS.</description>
    </item>
    
    <item>
      <title>Retrieve old revision file from Google Drive</title>
      <link>https://tanaikech.github.io/2017/03/29/retrieve-old-revision-file-from-google-drive/</link>
      <pubDate>Wed, 29 Mar 2017 16:00:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/29/retrieve-old-revision-file-from-google-drive/</guid>
      <description>I introduce 2 kinds of methods. One is to use curl. Another is to use wget. At this time, I could know that wget can be also used as same as curl.
In order to use this, at first, please retrieve your access token and enable Drive API.
1. File ID Retrieve file id from file name.
curl -X GET -sSL \  -H &amp;#39;Authorization: Bearer ### Access token ###&amp;#39; \  &amp;#39;https://www.</description>
    </item>
    
  </channel>
</rss>
