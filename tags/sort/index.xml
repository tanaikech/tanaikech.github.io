<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sort on tanaike</title>
    <link>https://tanaikech.github.io/tags/sort/</link>
    <description>Recent content in Sort on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 20 Jun 2019 12:19:52 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sorting for Slice using Golang</title>
      <link>https://tanaikech.github.io/2019/06/20/sorting-for-slice-using-golang/</link>
      <pubDate>Thu, 20 Jun 2019 12:19:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/06/20/sorting-for-slice-using-golang/</guid>
      <description>[Gists]()
This is a sample script for sorting a slice using Golang. Recently, I had a situation for sorting the coordinates of cells of Spreadsheet. As a test case, it thinks of the situation that the randomized cells are sorted. I think that this can be also used for a table except for Spreadsheet.
The sample slice is as follows.
ar := []struct { row int col int value string }{ {0, 0, &amp;quot;A1&amp;quot;}, {0, 1, &amp;quot;B1&amp;quot;}, {0, 2, &amp;quot;C1&amp;quot;}, {1, 0, &amp;quot;A2&amp;quot;}, {1, 1, &amp;quot;B2&amp;quot;}, {1, 3, &amp;quot;D2&amp;quot;}, {2, 0, &amp;quot;A3&amp;quot;}, {2, 2, &amp;quot;C3&amp;quot;}, }  When each element of above slice is put to a Spreadsheet, it becomes as follows.</description>
    </item>
    
    <item>
      <title>Updated go-rearrange and gorearrange to v102</title>
      <link>https://tanaikech.github.io/2017/10/18/updated-go-rearrange-and-gorearrange-to-v102/</link>
      <pubDate>Wed, 18 Oct 2017 14:45:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/18/updated-go-rearrange-and-gorearrange-to-v102/</guid>
      <description>go-rearrange and gorearrange were updated to v.1.0.2 From this version, data included multi-bytes characters can be used. At Linux, it works fine. At Windows DOS, rearranging and selecting data can be done. But the displayed data is shifted. Although this may be a bug of termbox-go, I don&amp;rsquo;t know the reason. I&amp;rsquo;m sorry. On the other hand, data with only single-byte characters works fine. About MAC, I don&amp;rsquo;t have it.</description>
    </item>
    
    <item>
      <title>Updated go-rearrange and gorearrange to v101</title>
      <link>https://tanaikech.github.io/2017/10/16/updated-go-rearrange-and-gorearrange-to-v101/</link>
      <pubDate>Mon, 16 Oct 2017 15:37:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/16/updated-go-rearrange-and-gorearrange-to-v101/</guid>
      <description>go-rearrange and gorearrange were updated to v.1.0.1  As one of outputs, indexmode (bool) was added. If this is true, the rearranged result is output as the change of index for the source data. For example, if the source data and rearranged data are [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;] and [&amp;quot;c&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;], respectively. The output will become [2, 1, 0].  By this, the specification for creating applications will expand.</description>
    </item>
    
    <item>
      <title>CLI Tool - gorearrange</title>
      <link>https://tanaikech.github.io/2017/10/15/cli-tool---gorearrange/</link>
      <pubDate>Sun, 15 Oct 2017 16:43:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/15/cli-tool---gorearrange/</guid>
      <description>Overview This is a CLI tool to interactively rearrange a text data on a terminal.
Description Since I couldn&amp;rsquo;t find CLI tools for manually rearranging text data, I created this CLI tool.
For this, at first, I created a Golang library go-rearrange.
The detail information and how to get this are https://github.com/tanaikech/gorearrange.</description>
    </item>
    
  </channel>
</rss>