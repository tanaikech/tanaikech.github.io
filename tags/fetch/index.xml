<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fetch on tanaike</title>
    <link>https://tanaikech.github.io/tags/fetch/</link>
    <description>Recent content in fetch on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sat, 19 Sep 2020 13:11:35 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/fetch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Updated: GAS Library - FetchApp</title>
      <link>https://tanaikech.github.io/2020/09/19/Updated-GAS-Library-FetchApp/</link>
      <pubDate>Sat, 19 Sep 2020 13:11:35 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/19/Updated-GAS-Library-FetchApp/</guid>
      <description>FetchApp was updated to v1.0.2.   v1.0.2 (September 19, 2020)
 From this version, when a blob is sent, the blob is sent to files.    You can check this at https://github.com/tanaikech/FetchApp.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - FetchApp</title>
      <link>https://tanaikech.github.io/2020/04/13/Updated-GAS-Library-FetchApp/</link>
      <pubDate>Mon, 13 Apr 2020 21:27:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/04/13/Updated-GAS-Library-FetchApp/</guid>
      <description>FetchApp was updated to v1.0.1.   v1.0.1 (April 13, 2020)
 When V8 runtime is enabled, it was found that an error occurred. So this bug was removed.    You can check this at https://github.com/tanaikech/FetchApp.</description>
    </item>
    
    <item>
      <title>Go Library - go-fetchall</title>
      <link>https://tanaikech.github.io/2019/05/01/Go-Library-go-fetchall/</link>
      <pubDate>Wed, 01 May 2019 21:14:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/01/Go-Library-go-fetchall/</guid>
      <description>Overview This is a Golang library for running HTTP requests with the asynchronous process. The progress of requests can be also shown.
Demo In this demonstration, 5 requests are run by 2 workers. And before each request, the waiting time for 2 seconds is added as a sample. By this, you can easily see the work with 2 workers. Also you can see this script at the following sample script.</description>
    </item>
    
    <item>
      <title>GAS Library - FetchApp</title>
      <link>https://tanaikech.github.io/2019/04/20/GAS-Library-FetchApp/</link>
      <pubDate>Sat, 20 Apr 2019 11:07:03 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/20/GAS-Library-FetchApp/</guid>
      <description>Overview This is a GAS library for creating and requesting the type of multipart/form-data using Google Apps Script. This library enhances Class UelFetchApp of Google Apps Script.
Description In order to fetch data from URL, there is Class UrlFetchApp in Google Apps Script. As the method for fetching, there is the method of fetch(url, params). In the current stage which was released this library, when user want to request with the type of multipart/form-data, the request body is required to be created by the user.</description>
    </item>
    
  </channel>
</rss>
