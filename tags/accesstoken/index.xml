<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>accesstoken on tanaike</title>
    <link>https://tanaikech.github.io/tags/accesstoken/</link>
    <description>Recent content in accesstoken on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sat, 01 May 2021 11:54:52 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/accesstoken/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrieving Access Token using Service Account for PHP without using googleapis</title>
      <link>https://tanaikech.github.io/2021/05/01/retrieving-access-token-using-service-account-for-php-without-using-googleapis/</link>
      <pubDate>Sat, 01 May 2021 11:54:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/05/01/retrieving-access-token-using-service-account-for-php-without-using-googleapis/</guid>
      <description>Gists
This is a sample PHP script to retrieve the access token from Service Account of Google without using googleapis.
Sample script &amp;lt;?php  $private_key = &amp;#34;-----BEGIN PRIVATE KEY-----\n###-----END PRIVATE KEY-----\n&amp;#34;; // private_key of JSON file retrieved by creating Service Account $client_email = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account $scopes = [&amp;#34;https://www.googleapis.com/auth/drive.readonly&amp;#34;]; // Sample scope  $url = &amp;#34;https://www.googleapis.com/oauth2/v4/token&amp;#34;; $header = array(&amp;#34;alg&amp;#34; =&amp;gt; &amp;#34;RS256&amp;#34;, &amp;#34;typ&amp;#34; =&amp;gt; &amp;#34;JWT&amp;#34;); $now = floor(time()); $claim = array( 	&amp;#34;iss&amp;#34; =&amp;gt; $client_email, 	&amp;#34;sub&amp;#34; =&amp;gt; $client_email, 	&amp;#34;scope&amp;#34; =&amp;gt; implode(&amp;#34; &amp;#34;, $scopes), 	&amp;#34;aud&amp;#34; =&amp;gt; $url, 	&amp;#34;exp&amp;#34; =&amp;gt; (string)($now + 3600), 	&amp;#34;iat&amp;#34; =&amp;gt; (string)$now, ); $signature = base64_encode(json_encode($header, JSON_UNESCAPED_SLASHES)) .</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Javascript</title>
      <link>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</link>
      <pubDate>Sat, 19 Dec 2020 14:09:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Javascript. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  Sample script In this script, 2 libraries of jsencrypt and crypto-js are used.
&amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/3.0.0-rc.1/jsencrypt.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;  &amp;lt;script&amp;gt;  async function sample() {  const private_key = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Account  const client_email = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account  const scopes = [&amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account for Node.js without using googleapis</title>
      <link>https://tanaikech.github.io/2019/04/02/retrieving-access-token-using-service-account-for-node.js-without-using-googleapis/</link>
      <pubDate>Tue, 02 Apr 2019 16:42:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/02/retrieving-access-token-using-service-account-for-node.js-without-using-googleapis/</guid>
      <description>Gists
This is a sample Node.js script to retrieve access token from Service Account of Google without using googleapis.
const cryptor = require(&amp;#39;crypto&amp;#39;); const request = require(&amp;#39;request&amp;#39;);  const privateKey = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Account const clientEmail = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account const scopes = [&amp;#34;https://www.googleapis.com/auth/drive.readonly&amp;#34;]; // Sample scope  const url = &amp;#34;https://www.googleapis.com/oauth2/v4/token&amp;#34;; const header = {  alg: &amp;#34;RS256&amp;#34;,  typ: &amp;#34;JWT&amp;#34;, }; const now = Math.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account by Google&#39;s OAuth2 package for Golang</title>
      <link>https://tanaikech.github.io/2018/12/11/retrieving-access-token-using-service-account-by-googles-oauth2-package-for-golang/</link>
      <pubDate>Tue, 11 Dec 2018 14:47:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/11/retrieving-access-token-using-service-account-by-googles-oauth2-package-for-golang/</guid>
      <description>Gists
This is a sample golang script for retrieving access token using Service Account of Google by Google&amp;rsquo;s OAuth2 package.
The script without using Google&amp;rsquo;s OAuth2 package is here.
package mainimport (&amp;#34;encoding/json&amp;#34;&amp;#34;fmt&amp;#34;&amp;#34;io/ioutil&amp;#34;&amp;#34;os&amp;#34;&amp;#34;golang.org/x/oauth2&amp;#34;&amp;#34;golang.org/x/oauth2/google&amp;#34;&amp;#34;golang.org/x/oauth2/jwt&amp;#34;)func serviceAccount(credentialFile string) (*oauth2.Token, error) {b, err := ioutil.ReadFile(credentialFile)if err != nil {return nil, err}var c = struct {Email string `json:&amp;#34;client_email&amp;#34;`PrivateKey string `json:&amp;#34;private_key&amp;#34;`}{}json.</description>
    </item>
    
    <item>
      <title>Go Library - go-gettokenbyserviceaccount</title>
      <link>https://tanaikech.github.io/2018/12/11/go-library-go-gettokenbyserviceaccount/</link>
      <pubDate>Tue, 11 Dec 2018 14:42:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/11/go-library-go-gettokenbyserviceaccount/</guid>
      <description>Overview This is a Golang library to retrieve access token from Service Account of Google without using Google&amp;rsquo;s OAuth2 package.
You can get this from https://github.com/tanaikech/go-gettokenbyserviceaccount</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</link>
      <pubDate>Fri, 07 Dec 2018 12:09:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Google Apps Script. The flow for using this script is as follows.
Usage  Create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email as an object.   If you want to use impersonate email, please set the value of impersonate_email.  Run the script.  /** * ### Description * Get access token from service account.</description>
    </item>
    
    <item>
      <title>Directly Using Access Token by googleapis for Node.js</title>
      <link>https://tanaikech.github.io/2018/11/19/directly-using-access-token-by-googleapis-for-node.js/</link>
      <pubDate>Mon, 19 Nov 2018 07:35:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/19/directly-using-access-token-by-googleapis-for-node.js/</guid>
      <description>Gists
This sample script is for directly using the refreshed access token by googleapis for Node.js. When oauth2Client.refreshAccessToken((err, tokens) =&amp;gt; {}); is used to retrieve the refreshed access token, the following error occurs.
 DeprecationWarning: The refreshAccessToken method has been deprecated, and will be removed in the 3.0 release of goo gle-auth-library. Please use the getRequestHeaders method instead.
 It is required to use getRequestHeaders(). But I couldn&amp;rsquo;t find the sample script using getRequestHeaders().</description>
    </item>
    
    <item>
      <title>Remove Third-party Apps with Account Access using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</link>
      <pubDate>Wed, 23 May 2018 15:51:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</guid>
      <description>Gists
Overview This is a method for removing Third-party Apps with Account Access using a script.
Demo Description When users create a script in a project and run the script, if the methods which are required to use scopes are included, users have to authorize to use the scopes using the browser. By authorizing it, users can use the script. The authorized projects can be seen at Third-party Apps with Account Access.</description>
    </item>
    
  </channel>
</rss>
