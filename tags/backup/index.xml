<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backup on tanaike</title>
    <link>https://tanaikech.github.io/tags/backup/</link>
    <description>Recent content in Backup on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 16 Dec 2019 16:00:19 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/backup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GAS Library - GmailToList</title>
      <link>https://tanaikech.github.io/2019/12/16/gas-library---gmailtolist/</link>
      <pubDate>Mon, 16 Dec 2019 16:00:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/12/16/gas-library---gmailtolist/</guid>
      <description>Overview This is a library for exporting all messages of Gmail as a list using Google Apps Script (GAS).
Description Recently, I have had a situation it had been required to backup all messages in own Gmail. In order to achieve this, I created a simple script. After I created it, I thought that when such situation might occur for other users and the script is published as a library, they might be useful.</description>
    </item>
    
    <item>
      <title>Backup Project as zip File using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/05/06/backup-project-as-zip-file-using-google-apps-script/</link>
      <pubDate>Mon, 06 May 2019 13:23:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/05/06/backup-project-as-zip-file-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for backing up a project as a zip file. When you use this script, please install a GAS library of ProjectApp2. You can back up both the standalone script type and the container-bound script type.
In this script, the blob of zip file can be retrieved from ProjectApp2. So you can also send it as email without creating a file.
var projectId = &amp;quot;### fileId of project ###&amp;quot;; var blob = ProjectApp2.</description>
    </item>
    
  </channel>
</rss>