<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on tanaike</title>
    <link>https://tanaikech.github.io/tags/javascript/</link>
    <description>Recent content in javascript on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 09 Aug 2022 16:44:36 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Javascript library - CropImageByBorder_js</title>
      <link>https://tanaikech.github.io/2022/08/09/javascript-library-cropimagebyborder_js/</link>
      <pubDate>Tue, 09 Aug 2022 16:44:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/08/09/javascript-library-cropimagebyborder_js/</guid>
      <description>Javascript Library for Cropping Image by Border Overview This is a Javascript library for cropping images by the border.
Description When an image is used, there is a case where I wanted to simply crop the image by a script. In this Javascript library, the image is cropped by a border. The sample situation is as follows.
In this sample situation, a red rectangle is enclosed by a border (1 pixel) with &amp;ldquo;#000000&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Splitting and Processing an Array every n length using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/05/21/splitting-and-processing-an-array-every-n-length-using-google-apps-script/</link>
      <pubDate>Sat, 21 May 2022 09:02:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/05/21/splitting-and-processing-an-array-every-n-length-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for splitting and processing an array every n length using Google Apps Script. When I prepare a sample script with Google Apps Script, I sometimes have the situation that it is required to split and process an array every n length. This sample script is for achieving this situation.
Please set limit. This sample script splits the sample array every 3 length.
When you use this script with Google Apps Script, please enable V8 runtime.</description>
    </item>
    
    <item>
      <title>Increasing Column Letter by One using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/05/01/increasing-column-letter-by-one-using-google-apps-script/</link>
      <pubDate>Sun, 01 May 2022 09:49:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/05/01/increasing-column-letter-by-one-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for increasing the column letter by one using Google Apps Script.
Sample script const increase = (ar) =&amp;gt;  ar.map((e) =&amp;gt; {  const idx = [...e].reduce(  (c, e, i, a) =&amp;gt;  (c += (e.charCodeAt(0) - 64) * Math.pow(26, a.length - i - 1)),  -1  );   // Ref: https://stackoverflow.com/a/53678158  columnIndexToLetter = (n) =&amp;gt;  (a = Math.floor(n / 26)) &amp;gt;= 0  ?</description>
    </item>
    
    <item>
      <title>Applicating Spread Syntax and Destructuring assignment to Google Spreadsheet with Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/03/30/applicating-spread-syntax-and-destructuring-assignment-to-google-spreadsheet-with-google-apps-script/</link>
      <pubDate>Wed, 30 Mar 2022 16:59:40 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/03/30/applicating-spread-syntax-and-destructuring-assignment-to-google-spreadsheet-with-google-apps-script/</guid>
      <description>Gists
Introduction In this report, I would like to introduce to apply the spread syntax and the destructuring assignment to Google Spreadsheet with Google Apps Script. The destructuring assignment can be used without V8 runtime. But, the spread syntax is required to be used with V8 runtime. Recently, I often saw the script using them at Stackoverflow. And also, I have sometimes gotten the questions related to the spread syntax and the destructuring assignment.</description>
    </item>
    
    <item>
      <title>Update: Javascript library - HtmlFormObjectParserForGoogleAppsScript_js</title>
      <link>https://tanaikech.github.io/2022/01/11/update-javascript-library-htmlformobjectparserforgoogleappsscript_js/</link>
      <pubDate>Tue, 11 Jan 2022 17:00:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/01/11/update-javascript-library-htmlformobjectparserforgoogleappsscript_js/</guid>
      <description>This is a Javascript library for sending the HTML form object to Google Apps Script using google.script.run.
HtmlFormObjectParserForGoogleAppsScript_js was updated to v1.0.1.
  v1.0.1 (January 11, 2022)
 A new argument of includeOrder was added as the 4th argument. This library returns the parsed form object as a JSON object. By this, the order of HTML form object is not saved. From this version, this order can be included. This argument includes the order of each input tag in form.</description>
    </item>
    
    <item>
      <title>Updated: Javascript library - ResumableUploadForGoogleDrive_js</title>
      <link>https://tanaikech.github.io/2021/11/15/updated-javascript-library-resumableuploadforgoogledrive_js/</link>
      <pubDate>Mon, 15 Nov 2021 15:38:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/11/15/updated-javascript-library-resumableuploadforgoogledrive_js/</guid>
      <description>ResumableUploadForGoogleDrive_js was updated to v2.0.0.
  v2.0.0 (November 15, 2021)
 New Class ResumableUploadToGoogleDrive2 was added. By this, the large file which is over the memory in the local PC can be uploaded by the resumable upload.    Overview This is a Javascript library to achieve the resumable upload for Google Drive.
Description When a file more than 5 MB is uploaded to Google Drive with Drive API, the resumable upload is required to be used.</description>
    </item>
    
    <item>
      <title>Compiling Continuous Numbers using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/10/08/compiling-continuous-numbers-using-google-apps-script/</link>
      <pubDate>Fri, 08 Oct 2021 21:01:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/10/08/compiling-continuous-numbers-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for compiling the continuous numbers using Google Apps Script. For example, the values of [4, 5, 9, 3, 10, 5, 11, 7, 7, 13, 1] are converted to [&amp;quot;1&amp;quot;,&amp;quot;3-5&amp;quot;,&amp;quot;7&amp;quot;,&amp;quot;9-11&amp;quot;,&amp;quot;13&amp;quot;].
Sample script const compilingNumbers = (ar) =&amp;gt; {  const { values } = [...new Set(ar.sort((a, b) =&amp;gt; a - b))].reduce(  (o, e, i, a) =&amp;gt; {  if (  o.temp.length == 0 ||  (o.</description>
    </item>
    
    <item>
      <title>Using Google API Client Library (gapi) for JavaScript with Service Account</title>
      <link>https://tanaikech.github.io/2021/05/27/using-google-api-client-library-gapi-for-javascript-with-service-account/</link>
      <pubDate>Thu, 27 May 2021 15:08:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/05/27/using-google-api-client-library-gapi-for-javascript-with-service-account/</guid>
      <description>Gists
This is a sample script for using Google API Client Library (gapi) for JavaScript with the service account. Unfortunately, in the current stage, gapi cannot directly use the service account. So, in this case, it is required to implement the script for retrieving the access token from the service account. In this report, I would like to introduce the method for using gapi with the service account using a Javascript library.</description>
    </item>
    
    <item>
      <title>Javascript library - GetAccessTokenFromServiceAccount_js</title>
      <link>https://tanaikech.github.io/2021/05/27/javascript-library-getaccesstokenfromserviceaccount_js/</link>
      <pubDate>Thu, 27 May 2021 15:03:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/05/27/javascript-library-getaccesstokenfromserviceaccount_js/</guid>
      <description>Overview This is a Javascript library to retrieve the access token from the Google Service Account. Ref
Description I have already posted the sample script for retrieving the access token from the Google Service Account. Ref But, when I use this script, I thought that when this was published as the Javascript library, it will be useful. So I created this.
Install &amp;lt;script src=&amp;#34;getaccesstokengromserviceaccount_js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Or, using jsdelivr cdn
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/tanaikech/GetAccessTokenFromServiceAccount_js@master/getaccesstokengromserviceaccount_js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; You can see the detail of this at https://github.</description>
    </item>
    
    <item>
      <title>Javascript library - HtmlFormObjectParserForGoogleAppsScript_js</title>
      <link>https://tanaikech.github.io/2021/02/13/javascript-library-htmlformobjectparserforgoogleappsscript_js/</link>
      <pubDate>Sat, 13 Feb 2021 17:11:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/02/13/javascript-library-htmlformobjectparserforgoogleappsscript_js/</guid>
      <description>Parser for Sending HTML Form Object to Google Apps Script using google.script.run Overview This is a Javascript library for sending the HTML form object to Google Apps Script using google.script.run.
Description HTML form object is parsed by this library, and the object can be sent to Google Apps Script using google.script.run. After the V8 runtime got to be able to be used for Google Apps Script, when the file input tag is included in the HTML form object, the object sent to Google Apps Script using google.</description>
    </item>
    
    <item>
      <title>Safe-Uploading for Google Drive by HTML in External Server using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</link>
      <pubDate>Tue, 29 Dec 2020 11:13:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</guid>
      <description>Overview This is a report for safe-uploading files to Google Drive by HTML put in the external server using Google Apps Script.
Description When you want to make the user upload a file to your own Google Drive using the HTML put in the external server of Google side, when the file size is smaller than 50 MB, this can be achieved without using the access token. Ref (When the HTML is put in the internal server of Google side, you can also use google.</description>
    </item>
    
    <item>
      <title>Javascript library - BatchRequest_js</title>
      <link>https://tanaikech.github.io/2020/12/22/javascript-library-batchrequest_js/</link>
      <pubDate>Tue, 22 Dec 2020 11:50:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/22/javascript-library-batchrequest_js/</guid>
      <description>Overview This is a library for running Batch Requests for Google APIs using Javascript.
Description When users use Google&amp;rsquo;s APIs, one quota is used for one API call. When the batch request is used, several APIs can be called by one quota, although there are some limitations in the batch request.
google-api-javascript-client can run the batch request. Ref But, I created this for my self study. This library can achieve the batch request using fetch without using google-api-javascript-client.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Javascript</title>
      <link>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</link>
      <pubDate>Sat, 19 Dec 2020 14:09:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Javascript. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  Sample script In this script, 2 libraries of jsencrypt and crypto-js are used.
&amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/3.0.0-rc.1/jsencrypt.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;  &amp;lt;script&amp;gt;  async function sample() {  const private_key = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Account  const client_email = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account  const scopes = [&amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Uploading Image Files to Google Photos using axios</title>
      <link>https://tanaikech.github.io/2020/12/07/uploading-image-files-to-google-photos-using-axios/</link>
      <pubDate>Mon, 07 Dec 2020 10:38:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/07/uploading-image-files-to-google-photos-using-axios/</guid>
      <description>Gists
This is a sample script for uploading the image files to the specific album in Google Photos using axios.
Before you use this script, please retrieve the access token for uploading the files using Google Photos API.
Sample script In this sample script, several image files can be uploaded.
&amp;lt;input type=&amp;#34;file&amp;#34; id=&amp;#34;files&amp;#34; name=&amp;#34;file&amp;#34; multiple /&amp;gt; &amp;lt;input type=&amp;#34;button&amp;#34; onclick=&amp;#34;main()&amp;#34; value=&amp;#34;upload&amp;#34; /&amp;gt;  &amp;lt;script&amp;gt;  function upload({ files, albumId, accessToken }) {  const description = new Date().</description>
    </item>
    
    <item>
      <title>Sample Scripts for Creating New Event with Google Meet Link to Google Calendar using Various Languages</title>
      <link>https://tanaikech.github.io/2020/12/03/sample-scripts-for-creating-new-event-with-google-meet-link-to-google-calendar-using-various-languages/</link>
      <pubDate>Thu, 03 Dec 2020 16:04:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/03/sample-scripts-for-creating-new-event-with-google-meet-link-to-google-calendar-using-various-languages/</guid>
      <description>Gists
This is the sample scripts for creating new event with Google Meet link to Google Calendar using various languages. When I saw the official document of &amp;ldquo;Add video and phone conferences to events&amp;rdquo;, in the current stage, I can see only the sample script for Javascript. But I saw the several questions related to this for various languages. So I published the sample scripts for creating new event with Google Meet link to Google Calendar using various languages.</description>
    </item>
    
    <item>
      <title>Workaround: Showing Log in Web Apps to Apps Script Dashboard using Javascript</title>
      <link>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</link>
      <pubDate>Wed, 29 Jul 2020 09:24:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</guid>
      <description>Gists
I have already reported for showing the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps. Ref In order to show the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps, it is required to use the access token. But in the current stage, when the access token is used for XMLHttpRequest and fetch of Javascript in the request headers, the error related to CORS occurs.</description>
    </item>
    
    <item>
      <title>Retrieving Difference Between 2 Arrays using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/19/retrieving-difference-between-2-arrays-using-google-apps-script/</link>
      <pubDate>Fri, 19 Jun 2020 16:18:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/19/retrieving-difference-between-2-arrays-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the difference between 2 arrays, which are the old values and the new values, using Google Apps Script. In my environment, I sometimes have the situation that it is required to retrieve the difference between 2 arrays. So I prepared this as a sample script. I think that this can be also used at Javascript and Node.js. If this was also useful for your situation, I&amp;rsquo;m glad.</description>
    </item>
    
    <item>
      <title>Updated: GetFileList for golang, Javascript, Node.js and Python</title>
      <link>https://tanaikech.github.io/2020/06/01/updated-getfilelist-for-golang-javascript-node.js-and-python/</link>
      <pubDate>Mon, 01 Jun 2020 14:12:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/01/updated-getfilelist-for-golang-javascript-node.js-and-python/</guid>
      <description>Updated: GetFileList for golang, Javascript, Node.js and Python
This is the libraries to retrieve the file list with the folder tree from the specific folder of own Google Drive and shared Drives.
 Golang: https://github.com/tanaikech/go-getfilelist  Updated to v1.0.4.   Javascript: https://github.com/tanaikech/GetFileList_js  Updated to v1.0.3.   Node.js: https://github.com/tanaikech/node-getfilelist  Updated to v1.0.5.   Python: https://github.com/tanaikech/getfilelistpy  Updated to v1.0.6.    </description>
    </item>
    
    <item>
      <title>Updated: Javascript library - GetFileList_js</title>
      <link>https://tanaikech.github.io/2020/05/15/updated-javascript-library-getfilelist_js/</link>
      <pubDate>Fri, 15 May 2020 12:15:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/15/updated-javascript-library-getfilelist_js/</guid>
      <description>GetFileList_js was updated to v1.0.2.   v1.0.2 (May 15, 2020)
  Shared drive got to be able to be used. The file list can be retrieved from both your Google Drive and the shared drive.
 For example, when the folder ID in the shared Drive is used id of resource, you can retrieve the file list from the folder in the shared Drive.      You can see the detail information here https://github.</description>
    </item>
    
    <item>
      <title>Javascript library - ResumableUploadForGoogleDrive_js</title>
      <link>https://tanaikech.github.io/2019/10/11/javascript-library-resumableuploadforgoogledrive_js/</link>
      <pubDate>Fri, 11 Oct 2019 13:07:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/11/javascript-library-resumableuploadforgoogledrive_js/</guid>
      <description>Overview This is a Javascript library to achieve the resumable upload for Google Drive.
Description When a file more than 5 MB is uploaded to Google Drive with Drive API, the resumable upload is required to be used. I have already published the sample script for &amp;ldquo;Resumable Upload for Web Apps using Google Apps Script&amp;rdquo;. Ref In this case, Web Apps is used. Here, I would like to introduce the script for the resumable upload created by only Javascript.</description>
    </item>
    
    <item>
      <title>Updated: Javascript library - GetFileList_js</title>
      <link>https://tanaikech.github.io/2019/09/30/updated-javascript-library-getfilelist_js/</link>
      <pubDate>Mon, 30 Sep 2019 11:35:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/09/30/updated-javascript-library-getfilelist_js/</guid>
      <description>GetFileList_js was updated to v1.0.1.   v1.0.1 (September 30, 2019)
 A bug related to the scope of variables was removed.    You can see the detail information here https://github.com/tanaikech/GetFileList_js</description>
    </item>
    
    <item>
      <title>Javascript library - syncGoogleScriptRun</title>
      <link>https://tanaikech.github.io/2019/09/13/javascript-library-syncgooglescriptrun/</link>
      <pubDate>Fri, 13 Sep 2019 14:54:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/09/13/javascript-library-syncgooglescriptrun/</guid>
      <description>Overview This is a Javascript library to use &amp;ldquo;google.script.run&amp;rdquo; with the synchronous process.
Description When I create Web Apps, add-on using a side bar and dialog, there is the case that I want to use google.script.run with the synchronous process. As you know, google.script.run works with the asynchronous process. So in order to use it as the synchronous process, the script is required to be prepared. I also saw several issues for such situation at Stackoverflow and other sites.</description>
    </item>
    
    <item>
      <title>Javascript library - GetFileList_js</title>
      <link>https://tanaikech.github.io/2019/09/12/javascript-library-getfilelist_js/</link>
      <pubDate>Thu, 12 Sep 2019 14:44:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/09/12/javascript-library-getfilelist_js/</guid>
      <description>Overview This is a Javascript library to retrieve the file list with the folder tree from the specific folder (publicly shared folders and own folders) of Google Drive.
Description The library for retrieving the file list with the folder tree from the specific folder of Google Drive has already been published for Google Apps Script, golang, node.js and python as GetFileList. Ref Here, this GetFileList was released as the library of Javascript.</description>
    </item>
    
    <item>
      <title>Upload Files to Google Drive using Javascript</title>
      <link>https://tanaikech.github.io/2018/08/13/upload-files-to-google-drive-using-javascript/</link>
      <pubDate>Mon, 13 Aug 2018 10:16:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/13/upload-files-to-google-drive-using-javascript/</guid>
      <description>Gists
News At October 11, 2019, I published a Javascript library to to run the resumable upload for Google Drive. When this is used, the large file can be uploaded. You can also use this js library.
Description This is a sample script for uploading files to Google Drive using Javascript. The files are uploaded by Drive API v3. gapi.client.drive.files.create() can create an empty file on Google Drive. But it cannot directly upload files including contents.</description>
    </item>
    
    <item>
      <title>Adding Query Parameters to URL using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/12/adding-query-parameters-to-url-using-google-apps-script/</link>
      <pubDate>Thu, 12 Jul 2018 08:53:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/12/adding-query-parameters-to-url-using-google-apps-script/</guid>
      <description>Gists
This is for adding the query parameters to the URL. This sample script is prepared by ES5. So this can be also used for Javascript. When I created an endpoint with some query parameters, I had used the scripts of various patterns every time. Today, I prepared this sample script to unify them. If this is also useful for you, I&amp;rsquo;m glad.
Sample script : String.prototype.addQuery = function(obj) {  return this + Object.</description>
    </item>
    
    <item>
      <title>Retrieving a Key with Maximum Value from Object</title>
      <link>https://tanaikech.github.io/2018/06/15/retrieving-a-key-with-maximum-value-from-object/</link>
      <pubDate>Fri, 15 Jun 2018 08:22:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/06/15/retrieving-a-key-with-maximum-value-from-object/</guid>
      <description>Gists
This sample script is for retrieving a key with the maximum value from an object. This can be also used by Google Apps Script.
var obj = {&amp;#34;a&amp;#34;: 5, &amp;#34;b&amp;#34;: 4, &amp;#34;c&amp;#34;: 3, &amp;#34;d&amp;#34;: 2, &amp;#34;e&amp;#34;: 1}; var res = Object.keys(obj).reduce(function(a, c) {  return obj[a] &amp;gt; obj[c] ? a : c; });  Logger.log(res); // &amp;gt;&amp;gt;&amp;gt; a </description>
    </item>
    
    <item>
      <title>google.script.run and jQuery.Deferred</title>
      <link>https://tanaikech.github.io/2018/01/26/google.script.run-and-jquery.deferred/</link>
      <pubDate>Fri, 26 Jan 2018 09:55:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/26/google.script.run-and-jquery.deferred/</guid>
      <description>google.script.run doesn&amp;rsquo;t return values. So I tried this using jQuery.Deferred.
GAS : Code.gs function doGet() {  return HtmlService.createHtmlOutputFromFile(&amp;#39;index&amp;#39;)  .setSandboxMode(HtmlService.SandboxMode.IFRAME); }  function getValues(e) {  return e + &amp;#34;hoge&amp;#34;; } HTML : index.html &amp;lt;script src=&amp;#34;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;body&amp;gt;  &amp;lt;input type=&amp;#34;button&amp;#34; id=&amp;#34;button&amp;#34; value=&amp;#34;ok&amp;#34;&amp;gt;  &amp;lt;div id=&amp;#34;result&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;   &amp;lt;script&amp;gt;  $(() =&amp;gt; {  $(&amp;#34;#button&amp;#34;).click(() =&amp;gt; {  var str = &amp;#34;fuga&amp;#34;;  googleScriptRun(str).then((res) =&amp;gt; {  $(&amp;#39;#result&amp;#39;).text(res);  });  });  });   function googleScriptRun(str) {  var d = new $.</description>
    </item>
    
    <item>
      <title>Mixing 2 Array Objects Included Dictionary Object by Javascript</title>
      <link>https://tanaikech.github.io/2017/12/03/mixing-2-array-objects-included-dictionary-object-by-javascript/</link>
      <pubDate>Sun, 03 Dec 2017 15:45:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/03/mixing-2-array-objects-included-dictionary-object-by-javascript/</guid>
      <description>Gists
This is a sample script for combining and mixing 2 objects. Each object is an array which included a dictionary type. When the key of the dictionary object is the same, the values are mixed.
This can be also used for Google Apps Script.
Input var obj1 = [{&amp;#34;key1&amp;#34;: [&amp;#34;value1a1&amp;#34;, &amp;#34;value1a2&amp;#34;]},{&amp;#34;key1&amp;#34;: [&amp;#34;value1aa1&amp;#34;, &amp;#34;value1aa2&amp;#34;]},{&amp;#34;key2&amp;#34;: [&amp;#34;value2a1&amp;#34;, &amp;#34;value2a2&amp;#34;]},{&amp;#34;key3&amp;#34;: [&amp;#34;value3a1&amp;#34;, &amp;#34;value3a2&amp;#34;]},];var obj2 = [{&amp;#34;key1&amp;#34;: [&amp;#34;value1b1&amp;#34;, &amp;#34;value1b2&amp;#34;]},{&amp;#34;key3&amp;#34;: [&amp;#34;value3b1&amp;#34;, &amp;#34;value3b2&amp;#34;]},{&amp;#34;key3&amp;#34;: [&amp;#34;value3bb1&amp;#34;, &amp;#34;value3bb2&amp;#34;]},{&amp;#34;key4&amp;#34;: [&amp;#34;value4b1&amp;#34;, &amp;#34;value4b2&amp;#34;]},]; Output [{&amp;#34;key1&amp;#34;: [&amp;#34;value1a1&amp;#34;, &amp;#34;value1a2&amp;#34;, &amp;#34;value1b1&amp;#34;, &amp;#34;value1b2&amp;#34;, &amp;#34;value1aa1&amp;#34;, &amp;#34;value1aa2&amp;#34;]},{&amp;#34;key2&amp;#34;: [&amp;#34;value2a1&amp;#34;, &amp;#34;value2a2&amp;#34;]},{&amp;#34;key3&amp;#34;: [&amp;#34;value3a1&amp;#34;, &amp;#34;value3a2&amp;#34;, &amp;#34;value3b1&amp;#34;, &amp;#34;value3b2&amp;#34;, &amp;#34;value3bb1&amp;#34;, &amp;#34;value3bb2&amp;#34;]},{&amp;#34;key4&amp;#34;: [&amp;#34;value4b1&amp;#34;, &amp;#34;value4b2&amp;#34;]}] Sample script : Javascript : function mixture(obj1, obj2) {  Array.</description>
    </item>
    
    <item>
      <title>Adding Object to Object by Javascript</title>
      <link>https://tanaikech.github.io/2017/12/01/adding-object-to-object-by-javascript/</link>
      <pubDate>Fri, 01 Dec 2017 12:12:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/01/adding-object-to-object-by-javascript/</guid>
      <description>Gists
This sample script is for adding object to object by javascript.
Script : var obj = {  key1: &amp;#34;value1&amp;#34;,  key2: &amp;#34;value2&amp;#34;,  key3: &amp;#34;value3&amp;#34; }; var obj1 = {  key4: &amp;#34;value4&amp;#34;,  key5: &amp;#34;value5&amp;#34;,  key6: &amp;#34;value6&amp;#34; }; Object.assign(obj, obj1); console.log(obj); Result : { key1: &amp;#39;value1&amp;#39;,  key2: &amp;#39;value2&amp;#39;,  key3: &amp;#39;value3&amp;#39;,  key4: &amp;#39;value4&amp;#39;,  key5: &amp;#39;value5&amp;#39;,  key6: &amp;#39;value6&amp;#39; } jsfiddle demo
Reference :  Object.</description>
    </item>
    
    <item>
      <title>Straightening Elements in 2 Dimensional Array using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/10/26/straightening-elements-in-2-dimensional-array-using-google-apps-script/</link>
      <pubDate>Thu, 26 Oct 2017 16:51:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/26/straightening-elements-in-2-dimensional-array-using-google-apps-script/</guid>
      <description>Gists
This sample script is for straightening elements in 2 dimensional array using Google Apps Script (GAS). When applications using Spreadsheet are developed by GAS, it usually uses 2 dimensional array by setValues(). And the lengths of each element are required to be the same. On the other hand, data used for the applications might not be the same length for each element in 2 dimensional array. This sample script can be used under such situation.</description>
    </item>
    
    <item>
      <title>Changing Values by Checking Duplicated Values of JSON for Javascript</title>
      <link>https://tanaikech.github.io/2017/08/21/changing-values-by-checking-duplicated-values-of-json-for-javascript/</link>
      <pubDate>Mon, 21 Aug 2017 08:30:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/21/changing-values-by-checking-duplicated-values-of-json-for-javascript/</guid>
      <description>Gists
This sample script is for changing values by checking duplicated values of JSON for Javascript.
Please see the following script. There is an array with a JSON data with 3 keys and 3 values. It is found that the values for each element duplicate. These duplicated values are changing by adding numbers.
I use this for managing filenames. This script also can be used for Google Apps Script. If this was useful for you, I&amp;rsquo;m glad.</description>
    </item>
    
    <item>
      <title>Retrieving Array Coordinates of Duplicated Elements</title>
      <link>https://tanaikech.github.io/2017/07/19/retrieving-array-coordinates-of-duplicated-elements/</link>
      <pubDate>Wed, 19 Jul 2017 10:38:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/19/retrieving-array-coordinates-of-duplicated-elements/</guid>
      <description>This sample is for retrieving array coordinates of duplicated elements.
Script : var inputdata = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;f&amp;#34;, &amp;#34;g&amp;#34;];  var dic = {}; var result = []; inputdata.forEach(function(e, i){  if (dic[e]) {  result[i] = &amp;#39;Duplicated&amp;#39;;  } else {  result[i] = null;  }  dic[e] = &amp;#34;temp&amp;#34;; });  Logger.log(JSON.stringify(result)) Logger.log([i for (i in result) if(result[i]==&amp;#39;Duplicated&amp;#39;)]) Result : [null,null,&amp;#34;Duplicated&amp;#34;,null,null,&amp;#34;Duplicated&amp;#34;,null,&amp;#34;Duplicated&amp;#34;,null,null] [2, 5, 7] </description>
    </item>
    
    <item>
      <title>Removes Duplicate JSON Elements for a Value of a Certain Key</title>
      <link>https://tanaikech.github.io/2017/04/09/removes-duplicate-json-elements-for-a-value-of-a-certain-key/</link>
      <pubDate>Sun, 09 Apr 2017 14:24:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/09/removes-duplicate-json-elements-for-a-value-of-a-certain-key/</guid>
      <description>This sample removes duplicate JSON elements for a value of a certain key. When the value of the certain key is removed, only a first duplicate element is left. Also I had wanted to be used for Google Apps Script. So it became like this.
Script :
function removeDup(arr, key){ var temp = []; var out = []; arr.forEach( function (e, i) { temp[i] = (temp.indexOf(e[key]) === -1) ? e[key] : false; if (temp[i]) out.</description>
    </item>
    
    <item>
      <title>Transposing Array From (n x m) To (m x n) for javascript</title>
      <link>https://tanaikech.github.io/2017/03/21/transposing-array-from-n-x-m-to-m-x-n-for-javascript/</link>
      <pubDate>Tue, 21 Mar 2017 08:55:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/03/21/transposing-array-from-n-x-m-to-m-x-n-for-javascript/</guid>
      <description>This script transposes from an array with n rows x m columns to the array with m rows x n columns. In this script, you can use array of n != m .
array = [ [a1, b1, c1, d1, e1], [a2, b2, c2, d2, e2], [a3, b3, c3, d3, e3], [a4, b4, c4, d4, e4], [a5, b5, c5, d5, e5], [a6, b6, c6, d6, e6], [a7, b7, c7, d7, e7], [a8, b8, c8, d8, e8], [a9, b9, c9, d9, e9], [a10, b10, c10, d10, e10] ] var result = []; for (i in array[0]){  result.</description>
    </item>
    
    <item>
      <title>Sample Array Script for Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/02/08/sample-array-script-for-spreadsheet/</link>
      <pubDate>Wed, 08 Feb 2017 08:50:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/02/08/sample-array-script-for-spreadsheet/</guid>
      <description>This is a Sample Array Script for Spreadsheet. It makes an 2D array filled by strings and number. The strings and number are column strings and row number, respectively.
However, because this is a sample, the maximum column number is 26.
function sa(row, col){ if (col &amp;gt; 26) return; var ar = new Array(row); for(var i = 0; i &amp;lt; row; i++) ar[i] = new Array(col); for (var i = 0; i &amp;lt; row; i++){ for (var j = 0; j &amp;lt; col; j++){ ar[i][j] = String.</description>
    </item>
    
  </channel>
</rss>
