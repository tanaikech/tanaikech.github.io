<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides on tanaike</title>
    <link>https://tanaikech.github.io/tags/slides/</link>
    <description>Recent content in Slides on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 06 Aug 2020 14:18:01 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/slides/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cropping Images in Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/06/cropping-images-in-google-slides-using-google-apps-script/</link>
      <pubDate>Thu, 06 Aug 2020 14:18:01 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/06/cropping-images-in-google-slides-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for cropping images in the Google Slides using Google Apps Script. In the current stage, in order to crop the images in Google Slides, it is required to use replace(blobSource, crop) Because, although there is the &amp;ldquo;cropProperties&amp;rdquo; of &amp;ldquo;UpdateImagePropertiesRequest&amp;rdquo; in Slides API, unfortunately, in the current stage, this cannot be still used. This has already been reported. Ref
About cropping using replace(blobSource, crop), I thought that how to use might be a bit difficult.</description>
    </item>
    
    <item>
      <title>Managing Texts on Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/24/managing-texts-on-google-slides-using-google-apps-script/</link>
      <pubDate>Wed, 24 Jun 2020 11:57:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/24/managing-texts-on-google-slides-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for managing the texts on Google Slides using Google Apps Script. Recently, I got the request like this. I published this here, because I thought that this might be also useful for other users.
Demo In this demonstration, the text of {{baz}} on Google Slides are searched and replaced to other text, and also, the text style is changed.
Sample situation In this case, it supposes that there are 3 types of shapes in the slide.</description>
    </item>
    
    <item>
      <title>Figma to Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/11/11/figma-to-google-slides-using-google-apps-script/</link>
      <pubDate>Mon, 11 Nov 2019 14:43:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/11/11/figma-to-google-slides-using-google-apps-script/</guid>
      <description>Gists
In this sample script, all pages in the Figma file are retrieved and the retrieved pages are put to new Google Slides as the image.
Usage 1. Retrieve access token You can see the method for retrieving the access token at here. Although there is also OAuth2 for retrieving the access token, in your situation, I thought that the method for directly generating the access token on the site might be suitable.</description>
    </item>
    
    <item>
      <title>Limitations for Inserting Images to Google Docs</title>
      <link>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</link>
      <pubDate>Fri, 05 Apr 2019 11:49:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</guid>
      <description>Gists
When an image is inserted to Google Docs (Spreadsheet, Document and Slides) using the method of insertImage using Google Apps Script, there is the case that the error occurs. The error messages are &amp;ldquo;server error&amp;rdquo; and &amp;ldquo;invalid image data&amp;rdquo;. Here, I would like to introduce the limitations for inserting images to Google Docs. As the result, it was found that the limitation is due to both the mimeTypes and the area of image rather than the file size.</description>
    </item>
    
    <item>
      <title>Summarizing Slides as Thumbnails</title>
      <link>https://tanaikech.github.io/2018/12/14/summarizing-slides-as-thumbnails/</link>
      <pubDate>Fri, 14 Dec 2018 16:26:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/14/summarizing-slides-as-thumbnails/</guid>
      <description>Gists
This is a sample script for summarizing Slides as thumbnails. For example, it supposes a Slides including 15 pages. When this script is run, it summarizes 6 pages to one page as images. I created this because there are no methods for directly achieving this. This is useful for myself. If this is also useful for you, I&#39;m glad.
The flow of this workaround is as follows.
Flow:  Copy the original Slides file as a temporary file.</description>
    </item>
    
    <item>
      <title>GAS Library - ArrangeStackingOrder</title>
      <link>https://tanaikech.github.io/2018/10/10/gas-library-arrangestackingorder/</link>
      <pubDate>Wed, 10 Oct 2018 09:11:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/10/gas-library-arrangestackingorder/</guid>
      <description>Overview ArrangeStackingOrder is a GAS library for arranging the stacking order of page elements on Google Slides using Google Apps Script (GAS).
Demo This is a demonstration of this library when this is used as a Google Slides Addon.
Description Do you have situations that you want to arrange the stacking order of page elements on Google Slides using GAS? I had it before. At that time, I could achieve it by creating a simple script.</description>
    </item>
    
    <item>
      <title>Add-on - ShapeApp was featured</title>
      <link>https://tanaikech.github.io/2018/02/15/add-on-shapeapp-was-featured/</link>
      <pubDate>Thu, 15 Feb 2018 12:59:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/15/add-on-shapeapp-was-featured/</guid>
      <description>At February 15th, 2018, ShapeApp was featured as one of &amp;ldquo;4 useful add-ons launched last month&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Add-on - ShapeApp</title>
      <link>https://tanaikech.github.io/2018/01/06/add-on-shapeapp/</link>
      <pubDate>Sat, 06 Jan 2018 16:24:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/06/add-on-shapeapp/</guid>
      <description>ShapeApp for Google Slides was published as an add-on application When you use Google Slides, have you ever thought about creating and updating shapes on Slides by inputting parameters, and arranging selected shapes? I have thought about them. Recently, since Class SlidesApp was added to GAS, it came to be able to easily to create various applications for Slides. So I created this. This application is add-on application which was made of GAS.</description>
    </item>
    
    <item>
      <title>IssueTracker: Bug for scopes of Slides</title>
      <link>https://tanaikech.github.io/2017/12/31/issuetracker-bug-for-scopes-of-slides/</link>
      <pubDate>Sun, 31 Dec 2017 17:11:05 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/31/issuetracker-bug-for-scopes-of-slides/</guid>
      <description>I have reported because I found a bug for scopes of Slides. The detail is the following URL.
https://issuetracker.google.com/issues/71448583</description>
    </item>
    
    <item>
      <title>Difference Between Given Values and Retrieved Values for Shapes on Google Slides</title>
      <link>https://tanaikech.github.io/2017/12/15/difference-between-given-values-and-retrieved-values-for-shapes-on-google-slides/</link>
      <pubDate>Fri, 15 Dec 2017 16:56:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/15/difference-between-given-values-and-retrieved-values-for-shapes-on-google-slides/</guid>
      <description>Gists
This is a document for explaining the difference between given values and retrieved values for shapes on Google Slides. When a shape is created to a slide using Slides API, most users give the size of height and width as pt. When the size is retrieved from the created shape as pt, the size is often difference from the given size.
For example, when a square shape is created by giving the height and width of 100 pt, the size which is retrieved from the created square becomes 99.</description>
    </item>
    
    <item>
      <title>Retrieving Size of Tables in Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/11/21/retrieving-size-of-tables-in-google-slides-using-google-apps-script/</link>
      <pubDate>Tue, 21 Nov 2017 11:24:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/21/retrieving-size-of-tables-in-google-slides-using-google-apps-script/</guid>
      <description>Gists
This sample script is for retrieving the size (width and height) of a table in Google Slides using Google Apps Script.
There are no methods for directly retrieving the table size using SlidesApp yet. So I thought of a workaround using Slides API.
 When the slide information is retrieved using Slides.Presentations.Pages.get() of Slides API, the information of tables is also included. In the information, the height and width of table are also included.</description>
    </item>
    
    <item>
      <title>SlideApp for Google Slides</title>
      <link>https://tanaikech.github.io/2017/11/13/slideapp-for-google-slides/</link>
      <pubDate>Mon, 13 Nov 2017 14:17:26 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/13/slideapp-for-google-slides/</guid>
      <description>Gists
By recent Google updated, Class SlideApp is added to Google Slides. SlideApp will be bring a lot of applications. Here, I would like to introduce 2 samples.
1. Sidebar function showSidebar() {var html = HtmlService.createHtmlOutput(&amp;#39;Hello, world! &amp;lt;input type=&amp;#34;button&amp;#34; value=&amp;#34;Close&amp;#34; onclick=&amp;#34;google.script.host.close()&amp;#34; /&amp;gt;&amp;#39;).setTitle(&amp;#39;My custom sidebar&amp;#39;).setWidth(300);SlidesApp.getUi().showSidebar(html);}2. Copy slides in existing Slide to a new Slide This sample script create a new Slide with slides you want to copy.</description>
    </item>
    
  </channel>
</rss>