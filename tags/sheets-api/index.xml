<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sheets API on tanaike</title>
    <link>https://tanaikech.github.io/tags/sheets-api/</link>
    <description>Recent content in Sheets API on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 25 Apr 2018 11:34:28 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/sheets-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrieves All Named Ranges in Spreadsheet as a1Notation</title>
      <link>https://tanaikech.github.io/2018/04/25/retrieves-all-named-ranges-in-spreadsheet-as-a1notation/</link>
      <pubDate>Wed, 25 Apr 2018 11:34:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/25/retrieves-all-named-ranges-in-spreadsheet-as-a1notation/</guid>
      <description>Gists
This is a sample script for Google Apps Script (GAS). This script retrieves all named ranges in Spreadsheet. The names and range of the retrieved named ranges are output as the keys and the values of JSON object, respectively. The sample output is {&amp;quot;name1&amp;quot;: &amp;quot;Sheet1!A1:B2&amp;quot;, &amp;quot;name2&amp;quot;: &amp;quot;Sheet2!B1:C2&amp;quot;,,,}. The name of named range has to be only one in the spreadsheet. This was used.
Sheets.Spreadsheets.get() of Sheets API can retrieve all named ranges.</description>
    </item>
    
    <item>
      <title>Converting a1Notation to GridRange for Google Sheets API</title>
      <link>https://tanaikech.github.io/2017/07/31/converting-a1notation-to-gridrange-for-google-sheets-api/</link>
      <pubDate>Mon, 31 Jul 2017 14:38:28 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/31/converting-a1notation-to-gridrange-for-google-sheets-api/</guid>
      <description>Gists
When it uses Google Sheets API v4, GridRange is used for it as the range property. These sample scripts are for converting from a1Notation to GridRange. You can chose from following 2 scripts. Both scripts can retrieve the same result.
Script 1 : This is from me.
function a1notation2gridrange1(sheetid, a1notation) {  var data = a1notation.match(/(^.+)!(.+):(.+$)/);  var ss = SpreadsheetApp.openById(sheetid).getSheetByName(data[1]);  var range = ss.getRange(data[2] + &amp;#34;:&amp;#34; + data[3]);  var gridRange = {  sheetId: ss.</description>
    </item>
    
  </channel>
</rss>
