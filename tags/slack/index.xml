<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slack on tanaike</title>
    <link>https://tanaikech.github.io/tags/slack/</link>
    <description>Recent content in Slack on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 16:43:21 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/slack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CLI Tool - gorearrange</title>
      <link>https://tanaikech.github.io/2017/10/15/cli-tool---gorearrange/</link>
      <pubDate>Sun, 15 Oct 2017 16:43:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/10/15/cli-tool---gorearrange/</guid>
      <description>Overview This is a CLI tool to interactively rearrange a text data on a terminal.
Description Since I couldn&amp;rsquo;t find CLI tools for manually rearranging text data, I created this CLI tool.
For this, at first, I created a Golang library go-rearrange.
The detail information and how to get this are https://github.com/tanaikech/gorearrange.</description>
    </item>
    
    <item>
      <title>Uploading Image Files to Slack Using Incoming Webhooks by Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</link>
      <pubDate>Thu, 07 Sep 2017 12:37:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/07/uploading-image-files-to-slack-using-incoming-webhooks-by-google-apps-script/</guid>
      <description>Gist
This sample script is for uploading image files to Slack using Incoming Webhooks by Google Apps Script.
When users try to upload image files to Slack using Incoming Webhooks, it has been known that although the access token is required to directly upload them, Incoming Webhooks can upload them by using the tag of image_url. In this sample script, it uploads image files (BMP, GIF, JPEG and PNG) on Google Drive to Slack using Incoming Webhooks.</description>
    </item>
    
    <item>
      <title>Multipart-POST Request Using Node.js</title>
      <link>https://tanaikech.github.io/2017/07/27/multipart-post-request-using-node.js/</link>
      <pubDate>Thu, 27 Jul 2017 09:44:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/27/multipart-post-request-using-node.js/</guid>
      <description>Gists
Here, I introduce 2 scripts for uploading files to Slack using Node.js as samples. These 2 sample scripts are for uploading files to Slack.
Sample script 1:  You can upload the zip file by converting byte array as follows.  At first, it builds form-data. Adds the zip file converted to byte array and boundary using Buffer.concat(). This is used as body in request.   Basically, this is almost the same to the method using GAS.</description>
    </item>
    
    <item>
      <title>Updated: CLI Tool - gislack</title>
      <link>https://tanaikech.github.io/2017/06/30/updated-cli-tool---gislack/</link>
      <pubDate>Fri, 30 Jun 2017 11:40:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/30/updated-cli-tool---gislack/</guid>
      <description>gislack is a CLI tool to submit files to both Gist and Slack.
 v1.0.1 (June 30, 2017)  Some modifications related to error handling.   Please check it out. https://github.com/tanaikech/gislack</description>
    </item>
    
    <item>
      <title>Sublime Text Plugin - gislacks</title>
      <link>https://tanaikech.github.io/2017/06/22/sublime-text-plugin---gislacks/</link>
      <pubDate>Thu, 22 Jun 2017 13:33:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/22/sublime-text-plugin---gislacks/</guid>
      <description>Overview This is a plugin of Sublime Text 3 for submitting files to both Gist and Slack.
Description I like to use Sublime Text for developing scripts. And when I discuss about developing scripts, I often use Slack. When I submitted a script to Slack, I had saved the script to Gist as a backup. I had done manually this on my browser. Namely, I wanted to be saving the revision of script while I&amp;rsquo;m discussing about the script at Slack.</description>
    </item>
    
    <item>
      <title>CLI Tool - gislack</title>
      <link>https://tanaikech.github.io/2017/06/22/cli-tool---gislack/</link>
      <pubDate>Thu, 22 Jun 2017 12:59:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/22/cli-tool---gislack/</guid>
      <description>Overview This is a CLI tool to submit files to both Gist and Slack.
Description When I discuss about developing scripts, I often use Slack. When I submitted a script to Slack, I had saved the script to Gist as a backup. I had done manually this on my browser. Namely, I wanted to be saving the revision of script while I&amp;rsquo;m discussing about the script at Slack. Recently, I wished this process had been able to be automatically run.</description>
    </item>
    
    <item>
      <title>Changing Slack Status using Google Apps Script</title>
      <link>https://tanaikech.github.io/2017/05/09/changing-slack-status-using-google-apps-script/</link>
      <pubDate>Tue, 09 May 2017 10:58:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/09/changing-slack-status-using-google-apps-script/</guid>
      <description>This script changes slack status using GAS. If you want to change it on time you decided, it can be achieved by installing this method as a trigger.
In order to use this, the required scope is users.profile:write.
function setSlackStatus(token, user, status_text, status_emoji) { return UrlFetchApp.fetch( &#39;https://slack.com/api/users.profile.set&#39;, { method: &#39;post&#39;, payload: { token: token, user: user, profile: JSON.stringify({status_text: status_text, status_emoji: status_emoji}) }, muteHttpExceptions: true } ).getContentText(); } function main() { var res = setSlackStatus( &#39;### Your access token ###&#39;, &#39;### User ID ###&#39;, &#39;sample&#39;, &#39;:coffee:&#39; ); Logger.</description>
    </item>
    
  </channel>
</rss>