<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>image on tanaike</title>
    <link>https://tanaikech.github.io/tags/image/</link>
    <description>Recent content in image on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 16 May 2024 11:13:42 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/image/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2024/05/16/updated-gas-library-imgapp/</link>
      <pubDate>Thu, 16 May 2024 11:13:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2024/05/16/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.3.3.
 v1.3.3 (May 16, 2024) In SlidesAppp.gs, added a script for checking whether Drive API and Slides API are enabled. Ref  You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>Converting Various Formatted Images to PNG Format and JPEG format using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/07/07/converting-various-formatted-images-to-png-format-and-jpeg-format-using-google-apps-script/</link>
      <pubDate>Fri, 07 Jul 2023 11:43:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/07/07/converting-various-formatted-images-to-png-format-and-jpeg-format-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting various images to PNG Format and JPEG format using Google Apps Script.
The flow of this sample script is as follows.
 Convert the file to PNG format by the thumbnail link. Convert PNG format to JPEG format if outputFormat is &amp;ldquo;JPEG&amp;rdquo;. Create the image data in the JPEG format in the root folder as a file.  Sample script Please set your file ID and output format.</description>
    </item>
    
    <item>
      <title>Converting All Pages in PDF File to PNG Images using Google Apps Script</title>
      <link>https://tanaikech.github.io/2023/01/11/converting-all-pages-in-pdf-file-to-png-images-using-google-apps-script/</link>
      <pubDate>Wed, 11 Jan 2023 11:09:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/11/converting-all-pages-in-pdf-file-to-png-images-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting all pages in a PDF file to PNG images using Google Apps Script.
I have already published &amp;ldquo;Merging Multiple PDF Files as a Single PDF File using Google Apps Script&amp;rdquo;. In this post, it was found that pdf-lib can be used with Google Apps Script. From this, in this post, I would like to propose a sample script for converting all pages in a PDF file to PNG images using Google Apps Script.</description>
    </item>
    
    <item>
      <title>Converting Gmail Message to Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/11/22/converting-gmail-message-to-image-using-google-apps-script/</link>
      <pubDate>Tue, 22 Nov 2022 16:34:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/11/22/converting-gmail-message-to-image-using-google-apps-script/</guid>
      <description>Gists
This is a workaround for converting a Gmail message to a PNG image using Google Apps Script.
Sample script Please set the message ID of Gmail.
function myFunction() {  var id = &amp;#34;###&amp;#34;; // Please set your message ID of Gmail.   var message = GmailApp.getMessageById(id);  var date = Utilities.formatDate(  message.getDate(),  Session.getScriptTimeZone(),  &amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;  );  var from = message.getFrom();  var to = message.</description>
    </item>
    
    <item>
      <title>Javascript library - CropImageByBorder_js</title>
      <link>https://tanaikech.github.io/2022/08/09/javascript-library-cropimagebyborder_js/</link>
      <pubDate>Tue, 09 Aug 2022 16:44:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/08/09/javascript-library-cropimagebyborder_js/</guid>
      <description>Javascript Library for Cropping Image by Border Overview This is a Javascript library for cropping images by the border.
Description When an image is used, there is a case where I wanted to simply crop the image by a script. In this Javascript library, the image is cropped by a border. The sample situation is as follows.
In this sample situation, a red rectangle is enclosed by a border (1 pixel) with &amp;ldquo;#000000&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Reducing Image Data Size using Google Apps Script</title>
      <link>https://tanaikech.github.io/2022/05/14/reducing-image-data-size-using-google-apps-script/</link>
      <pubDate>Sat, 14 May 2022 11:13:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2022/05/14/reducing-image-data-size-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for reducing the image data size using Google Apps Script. You might have a situation where you might want to reduce the data size of image data using Google Apps Script. Here, using Google Apps Script, I would like to introduce a sample script for reducing the data size of the image data by reducing the image quality.
Limitations In the current stage, by the specification of Google side, there are the following limitations.</description>
    </item>
    
    <item>
      <title>Report: Images put with IMAGE function on Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2021/10/29/report-images-put-with-image-function-on-google-spreadsheet/</link>
      <pubDate>Fri, 29 Oct 2021 10:28:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/10/29/report-images-put-with-image-function-on-google-spreadsheet/</guid>
      <description>Gists
This is a report about images put with &amp;ldquo;=IMAGE(IMAGE_URL)&amp;rdquo; function on Google Spreadsheet.
Experiment When &amp;ldquo;=IMAGE(IMAGE_URL)&amp;rdquo; is put to a cell &amp;ldquo;A1&amp;rdquo; on Spreadsheet, the image is shown in the cell as shown in the following image.
For this situation, when the following script is run,
const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(&amp;#34;Sheet1&amp;#34;); const range = sheet.getRange(&amp;#34;A1&amp;#34;); range.copyTo(range, { contentsOnly: true }); The following result is obtained. In this case, the formula is removed and an image can be seen as shown in the following image.</description>
    </item>
    
    <item>
      <title>Creating Colorful Buttons on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/19/creating-colorful-buttons-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Mon, 19 Apr 2021 15:56:30 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/19/creating-colorful-buttons-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for creating the colorful buttons on Google Spreadsheet on Google Apps Script.
In order to achieve this, I have been looking for the method for creating the PNG image with the alpha channel using Google Apps Script. Recently, finally, I could find it. By this, the goal of this report got to be able to be achieved by the report of &amp;ldquo;Creating PNG Image with Alpha Channel using Google Apps Script&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Creating PNG Image with Alpha Channel using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/19/creating-png-image-with-alpha-channel-using-google-apps-script/</link>
      <pubDate>Mon, 19 Apr 2021 15:50:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/19/creating-png-image-with-alpha-channel-using-google-apps-script/</guid>
      <description>This is a sample script for creating a PNG image with the alpha channel using Google Apps Script.
The PNG image with the alpha channel is the image includes the transparent background. I have been looking for the method for creating such image using Google Apps Script. It is considered that when this will be achieved, it will be able to be used for various situations. For example, it is considered the following situations.</description>
    </item>
    
    <item>
      <title>Plotting Points on Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/04/02/plotting-points-on-image-using-google-apps-script/</link>
      <pubDate>Fri, 02 Apr 2021 15:27:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/04/02/plotting-points-on-image-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for plotting the points on an image using Google Apps Script.
Unfortunately, in the current stage, there are no methods for directly editing the image and putting the texts and some shapes in the methods for Google Apps Script. So in this case, it is required to use the workaround.
Fortunately, I have already published a report about &amp;ldquo;Inserting Text on Image using Google Apps Script&amp;rdquo; in my blog.</description>
    </item>
    
    <item>
      <title>Inserting Text on Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/10/13/inserting-text-on-image-using-google-apps-script/</link>
      <pubDate>Tue, 13 Oct 2020 08:23:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/13/inserting-text-on-image-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for inserting a text on an image using Google Apps Script.
Demo In this demonstration, &amp;ldquo;sample text&amp;rdquo; is inserted to the image. The image is from https://www.deviantart.com/k3-studio/art/Rainbow-painting-281090729.
Preparation When you use this script, please install the following 2 Google Apps Script libraries.
 DocsServiceApp ImgApp  And, please enable Slides API at Advanced Google services.
Flow The flow of this sample script is as follows.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2020/09/24/updated-gas-library-imgapp/</link>
      <pubDate>Thu, 24 Sep 2020 14:41:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/09/24/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.3.0.
 v1.3.0 (September 24, 2020)  Added new method. Added editImage() This method is for editing images. In the current stage, the image can be cropped. And several images can be merged as an image.    You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>Converting Range in Google Spreadsheet as Image using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/19/converting-range-in-google-spreadsheet-as-image-using-google-apps-script/</link>
      <pubDate>Wed, 19 Aug 2020 14:25:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/19/converting-range-in-google-spreadsheet-as-image-using-google-apps-script/</guid>
      <description>Another approach 10 Aug 2022: Report: Challenging Exporting Selected Cells on Spreadsheet as Image using Google Apps Script and Javascript
Old approach Gists
This is a sample script for converting a range in Google Spreadsheet as an image data using Google Apps Script. Unfortunately, there are no methods for directly converting the range in Google Spreadsheet as an image data in the built-in functions. So in this case, as a workaround, Charts Service is used.</description>
    </item>
    
    <item>
      <title>Decoding QR code on Google Slides using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/08/07/decoding-qr-code-on-google-slides-using-google-apps-script/</link>
      <pubDate>Fri, 07 Aug 2020 17:07:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/08/07/decoding-qr-code-on-google-slides-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for decoding a QR code put in Google Slides using Google Apps Script. In this case, Javascript is used at the opened dialog. And Canvas API and jsQR are used. So unfortunately, this method cannot be used with the time-driven trigger and the Google Apps Script project of the standalone type.
Of course, this method can be also used for Google Document and Google Spreadsheet.</description>
    </item>
    
    <item>
      <title>Converting SVG Format to PNG Format using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/20/converting-svg-format-to-png-format-using-google-apps-script/</link>
      <pubDate>Mon, 20 Jul 2020 15:23:38 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/20/converting-svg-format-to-png-format-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for converting the SVG image data to PNG image data using Google Apps Script.
Unfortunately, in the current stage, there are no methods for directly converting the SVG to PNG in Google Drive service. But it can be achieved by Drive API. The sample script is as follows.
Before you use this, please enable Drive API at Advanced Google services.
Sample script function myFunction() {  const svgFileId = &amp;#34;###&amp;#34;; // Please set the fileId of the SVG file.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2019/04/06/updated-gas-library-imgapp/</link>
      <pubDate>Sat, 06 Apr 2019 10:46:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/06/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.2.2.
  v1.2.2 (April 6, 2019)
By Google&amp;rsquo;s update, the error of &amp;ldquo;Malformed multipart body.&amp;rdquo; occurs. This error was resolved.
  You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>Limitations for Inserting Images to Google Docs</title>
      <link>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</link>
      <pubDate>Fri, 05 Apr 2019 11:49:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/05/limitations-for-inserting-images-to-google-docs/</guid>
      <description>Gists
When an image is inserted to Google Docs (Spreadsheet, Document and Slides) using the method of insertImage using Google Apps Script, there is the case that the error occurs. The error messages are &amp;ldquo;server error&amp;rdquo; and &amp;ldquo;invalid image data&amp;rdquo;. Here, I would like to introduce the limitations for inserting images to Google Docs. As the result, it was found that the limitation is due to both the mimeTypes and the area of image rather than the file size.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2018/11/05/updated-gas-library-imgapp/</link>
      <pubDate>Mon, 05 Nov 2018 14:17:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/05/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.2.1.
  v1.2.1 (November 5, 2018)
Efficiency of each loop was enhanced by this benchmark.
  You can see the detail information here https://github.com/tanaikech/ImgApp</description>
    </item>
    
    <item>
      <title>Replacing Text to Image for Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/20/replacing-text-to-image-for-google-document-using-google-apps-script/</link>
      <pubDate>Mon, 20 Aug 2018 09:55:47 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/20/replacing-text-to-image-for-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for replacing text to image for Google Document using Google Apps Script (GAS). There is a method for replacing text to text at Class Text of DocumentApp. But there are not methods for replacing text to image. So I created this sample script.
Demo : This sample image was created by k3-studio.
Usage : replaceTextToImage(body, replaceText, image, width);  body : body of document. You can set by DocumentApp.</description>
    </item>
    
    <item>
      <title>Limitation of Images for Inserting to Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/10/limitation-of-images-for-inserting-to-spreadsheet-using-google-apps-script/</link>
      <pubDate>Tue, 10 Jul 2018 08:51:44 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/10/limitation-of-images-for-inserting-to-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Introduction Here I would like to introduce about the limitation of images for inserting to Spreadsheet using Google Apps Script (GAS). When you want to insert the images to Spreadsheet using GAS, insertImage() of class Sheet is usually used for this situation. At this time, an error sometimes occurs. This indicates that there is the limitation for inserting images to Spreadsheet. So I investigated the limitation.
As a result, it was found that the limitation depends on the image area (pixels^2) rather than the file size of it.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/08/20/updated-gas-library-imgapp/</link>
      <pubDate>Sun, 20 Aug 2017 15:11:32 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/20/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.2.0. New method was added.
3. updateThumbnail() Overview This method is for updating thumbnail of files on Google Drive using images you selected.
Description For example, zip files don&amp;rsquo;t have the thumbnail on Google Drive. An icon is shown as the thumbnail. For the most files, Google Drive can create automatically each thumbnail. But there are sometimes files which cannot be created the thumbnail. Zip file is also one of them.</description>
    </item>
    
    <item>
      <title>Retrieving Images on Spreadsheet</title>
      <link>https://tanaikech.github.io/2017/07/21/retrieving-images-on-spreadsheet/</link>
      <pubDate>Fri, 21 Jul 2017 08:27:56 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/21/retrieving-images-on-spreadsheet/</guid>
      <description>Gist
This is a sample script for retrieving images on Spreadsheet.
Unfortunately, there are no methods for retrieving directly images on spreadsheet using GAS. So I use the method which retrieves URL from =image(URL) and retrieves the image from the URL.
In this case, =image(URL) has to be in the cell. Images embedded by insertImage() cannot be retrieved.
At first, please confirm them.
Sample script : var cell = &amp;#34;A1&amp;#34;; // Cell address with the function of &amp;#34;=image()&amp;#34; var filename = &amp;#34;samplename&amp;#34;; // Output filename  var image = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - ImgApp</title>
      <link>https://tanaikech.github.io/2017/06/29/updated-gas-library-imgapp/</link>
      <pubDate>Thu, 29 Jun 2017 16:09:57 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/29/updated-gas-library-imgapp/</guid>
      <description>ImgApp was updated to v1.1.0. New method was added.
2. doResize() Overview This method is for resizing images.
Description Unfortunately, there are no methods to resize images at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and resizes the image using setWidth() and setHeight(). But in this method, the resized blob cannot be retrieved. So although I had thought of other workaround, I had not been able to find it.</description>
    </item>
    
    <item>
      <title>GAS Library - ImgApp - getSize()</title>
      <link>https://tanaikech.github.io/2017/06/27/gas-library-imgapp-getsize/</link>
      <pubDate>Tue, 27 Jun 2017 16:21:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/27/gas-library-imgapp-getsize/</guid>
      <description>1. getSize() Overview This method is for retrieving the width and height of image as the unit of pixel.
Description Unfortunately, there are no methods to directly retrieve the image size at Google Apps Script. As a workaround, there is a method that it imports the image in Google Document and retrieves the size using getWidth() and getHeight(). But in this method, it uses much time and resources on Google. So I thought of retrieving the information of image at the binary level, and created this.</description>
    </item>
    
    <item>
      <title>GAS Library - CreateImg</title>
      <link>https://tanaikech.github.io/2017/04/17/gas-library-createimg/</link>
      <pubDate>Mon, 17 Apr 2017 15:29:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/04/17/gas-library-createimg/</guid>
      <description>Recently, I had been looking for creating an image from coordinate data. Unfortunately I have never found them. So I made this. This Google Apps Script (GAS) library creates an image file from coordinate data.
You can see the detail information at https://github.com/tanaikech/CreateImg.
There is a part where I would like to improve in this library. That&amp;rsquo;s convByteSlice(). I think that there is the method to be faster about the part.</description>
    </item>
    
  </channel>
</rss>
