<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webapps on tanaike</title>
    <link>https://tanaikech.github.io/tags/webapps/</link>
    <description>Recent content in webapps on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 29 Mar 2021 14:51:58 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/webapps/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redeploying Web Apps without Changing URL of Web Apps for new IDE</title>
      <link>https://tanaikech.github.io/2021/03/29/redeploying-web-apps-without-changing-url-of-web-apps-for-new-ide/</link>
      <pubDate>Mon, 29 Mar 2021 14:51:58 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/03/29/redeploying-web-apps-without-changing-url-of-web-apps-for-new-ide/</guid>
      <description>Gists
At March 15, 2021, one endpoint is created for one deployment. Ref By this, when you redeploy &amp;ldquo;Web Apps&amp;rdquo;, the endpoint is changed. Because the deployment ID is changed. It seems that this it the new specification. In this report, I would like to introduce the method for redeploying Web Apps without changing the URL of Web Apps for new IDE.
Deploy Web Apps   Open &amp;ldquo;New deployment&amp;rdquo; dialog with &amp;ldquo;Deploy&amp;rdquo; -&amp;gt; &amp;ldquo;New deployment&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Simple Photo Gallery Created by Google Slides and Web Apps using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/01/24/simple-photo-gallery-created-by-google-slides-and-web-apps-using-google-apps-script/</link>
      <pubDate>Sun, 24 Jan 2021 15:56:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/24/simple-photo-gallery-created-by-google-slides-and-web-apps-using-google-apps-script/</guid>
      <description>Overview This is a sample script for achieving a simple photo gallery created by Google Slides and Web Apps using Google Apps Script.
Description At Google, there is a great Google Photos. Ref Recently, I was required to have a simple photo gallery. At that time, I thought that when an independence photo gallery instead of Google Photos can be used, it will be useful. Also, this might be useful for other users.</description>
    </item>
    
    <item>
      <title>Workaround: Showing Log in Web Apps to Apps Script Dashboard using Javascript</title>
      <link>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</link>
      <pubDate>Wed, 29 Jul 2020 09:24:27 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/29/workaround-showing-log-in-web-apps-to-apps-script-dashboard-using-javascript/</guid>
      <description>Gists
I have already reported for showing the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps. Ref In order to show the log to &amp;ldquo;Apps Script Dashboard&amp;rdquo; when it requests to the Web Apps, it is required to use the access token. But in the current stage, when the access token is used for XMLHttpRequest and fetch of Javascript in the request headers, the error related to CORS occurs.</description>
    </item>
    
    <item>
      <title>Logs in Web Apps for Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/26/logs-in-web-apps-for-google-apps-script/</link>
      <pubDate>Sun, 26 Jul 2020 08:26:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/26/logs-in-web-apps-for-google-apps-script/</guid>
      <description>Gists
This is a report for retrieving the logs in Web Apps for Google Apps Script, when it requests to the Web Apps.
Experimental condition 1. Sample script for Web Apps const doGet = (e) =&amp;gt; { Logger.log(`GET method: ${JSON.stringify(e)}`); console.log(`GET method: ${JSON.stringify(e)}`); return ContentService.createTextOutput( JSON.stringify({ method: &amp;#34;GET&amp;#34;, e: e }) ); }; const doPost = (e) =&amp;gt; { Logger.log(`POST method: ${JSON.stringify(e)}`); console.log(`POST method: ${JSON.stringify(e)}`); return ContentService.createTextOutput( JSON.stringify({ method: &amp;#34;POST&amp;#34;, e: e }) ); };  This Web Apps is deployed as Execute the app as: Me and Who has access to the app: Anyone, even anonymous.</description>
    </item>
    
    <item>
      <title>Sample Scripts for Requesting to Web Apps by Various Languages</title>
      <link>https://tanaikech.github.io/2020/07/15/sample-scripts-for-requesting-to-web-apps-by-various-languages/</link>
      <pubDate>Wed, 15 Jul 2020 15:52:59 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/15/sample-scripts-for-requesting-to-web-apps-by-various-languages/</guid>
      <description>Gists
These are the sample scripts by the various languages for requesting to Web Apps created by Google Apps Script.
 curl Google Apps Script Javascript ajax Node.js axios angular go python php powershell  Sample script for Web Apps   Sample script for Web Apps is as follows.
const doGet = (e) =&amp;gt; ContentService.createTextOutput( JSON.stringify({ method: &amp;#34;GET&amp;#34;, eventObject: e }) ).setMimeType(ContentService.MimeType.JSON); const doPost = (e) =&amp;gt; ContentService.createTextOutput( JSON.stringify({ method: &amp;#34;POST&amp;#34;, eventObject: e }) ).</description>
    </item>
    
    <item>
      <title>Updated: Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/07/01/updated-taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Wed, 01 Jul 2020 10:32:09 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/07/01/updated-taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>New section CORS in Web Apps was added to Taking advantage of Web Apps with Google Apps Script
In this section, I would like to introduce CORS in Web Apps. As the result, in order to prevent the error related to CORS, it was found the following important points.
  It is required to return ContentService.createTextOutput() and ContentService.createTextOutput(&amp;quot;done&amp;quot;) from doGet and doPost.
  For POST method, the data is required to be converted to the string and sent to Web Apps.</description>
    </item>
    
    <item>
      <title>Completed: Web Application for searching Google Apps Script Library from Database</title>
      <link>https://tanaikech.github.io/2020/03/12/completed-web-application-for-searching-google-apps-script-library-from-database/</link>
      <pubDate>Thu, 12 Mar 2020 11:58:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/12/completed-web-application-for-searching-google-apps-script-library-from-database/</guid>
      <description>Web Application for searching Google Apps Script Library from Database was completed. So I published it as v1.0.0. Please check Google Apps Script Library Database.</description>
    </item>
    
    <item>
      <title>Web Apps: Fields Builder For Google APIs</title>
      <link>https://tanaikech.github.io/2020/03/04/web-apps-fields-builder-for-google-apis/</link>
      <pubDate>Wed, 04 Mar 2020 16:08:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/04/web-apps-fields-builder-for-google-apis/</guid>
      <description>Overview FieldsBuilderForGoogleAPIs is a Web Application for building the fields value for using Google APIs. This is mainly used for developing the scripts for using Google APIs.
Demo Description After the API explorer was updated, the fields of APIs cannot be created by the web interface. But it is important for using the fields property. Because when the fields property is used, only the required values can be retrieved. This leads to the low cost.</description>
    </item>
    
    <item>
      <title>Update: Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/01/16/update-taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Wed, 16 Jan 2019 10:42:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/01/16/update-taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>&amp;ldquo;Taking advantage of Web Apps with Google Apps Script&amp;rdquo; was updated. A section of &amp;ldquo;How to use dev mode from outside&amp;rdquo; was added.
 When you deploy Web Apps, you can see the link labeled latest code. The link is like https://script.google.com/macros/s/###/dev. When you access to the link of latest code using your browser under you login to Google, you can access to Web Apps with the dev mode. But if you want to access to Web Apps with the dev mode from outside, there are no documents for the method.</description>
    </item>
    
    <item>
      <title>Resumable Upload for Web Apps using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/17/resumable-upload-for-web-apps-using-google-apps-script/</link>
      <pubDate>Thu, 17 May 2018 16:48:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/17/resumable-upload-for-web-apps-using-google-apps-script/</guid>
      <description>News   At October 11, 2019, I published a Javascript library to to run the resumable upload for Google Drive. When this is used, the large file can be uploaded. You can also use this js library.
 Resumable Upload of Multiple Files with Asynchronous Process for Google Drive    Overview This is a sample script for uploading files with large size (&amp;gt; 50 MB) at Web Apps using Google Apps Script (GAS).</description>
    </item>
    
    <item>
      <title>Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Thu, 26 Apr 2018 08:35:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>Overview This is a report to take advantage of Web Apps with Google Apps Script (GAS).
Description There is Web Apps as one of applications using Google Apps Script (GAS). I sometimes use this Web Apps. But I have only a little the information for the specification of Web Apps. So in order to take more advantage of Web Apps, I investigated and summarized about this. The aim of this report is to become one of the basic information for creating various applications using Web Apps with GAS.</description>
    </item>
    
    <item>
      <title>Uploading Local Files to Google Drive without Authorization using HTML Form</title>
      <link>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</link>
      <pubDate>Mon, 06 Nov 2017 08:54:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/11/06/uploading-local-files-to-google-drive-without-authorization-using-html-form/</guid>
      <description>Gists
This is a sample script for uploading local file to Google Drive without the authorization using HTML form. A selected file in your local PC using HTML form is uploaded to Google Drive and saved to Google Drive.
When you use this, at first, please deploy Web Apps. The script is doPost() of following scripts.
Script : Google Apps Script function doPost(e) { var data = Utilities.base64Decode(e.parameters.data); var blob = Utilities.</description>
    </item>
    
    <item>
      <title>Downloading Files From Google Drive Under No Authorization Using Browser</title>
      <link>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser/</link>
      <pubDate>Tue, 04 Jul 2017 15:57:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/07/04/downloading-files-from-google-drive-under-no-authorization-using-browser/</guid>
      <description>Gist
This is a sample script for downloading files from Google Drive under no authorization using browser. By using this sample, you can make other users download files from your Google Drive. Even if the other users are not Google users, they can download the files.
Demo This is a demonstration for downloading files from Google Drive under no authorization using browser. From the top document, You can see that an user who is not owner of Google Drive is downloading files.</description>
    </item>
    
  </channel>
</rss>
