<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>trigger on tanaike</title>
    <link>https://tanaikech.github.io/tags/trigger/</link>
    <description>Recent content in trigger on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 01 Dec 2021 09:56:49 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/trigger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pseudo OnEdit Trigger for Google Document using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/12/01/pseudo-onedit-trigger-for-google-document-using-google-apps-script/</link>
      <pubDate>Wed, 01 Dec 2021 09:56:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/12/01/pseudo-onedit-trigger-for-google-document-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for achieving the pseudo OnEdit trigger for Google Document using Google Apps Script.
In the current stage, there is not OnEdit trigger for Google Document. Ref But I sometimes have the case that I want to use OnEdit trigger. So, as the current workaround, I created this sample script. I think that this workaround can be also used for Google Slides, Google Form and also Google Spreadsheet.</description>
    </item>
    
    <item>
      <title>Executing Function with Minutes timer in Specific Times using Google Apps Script</title>
      <link>https://tanaikech.github.io/2021/09/22/executing-function-with-minutes-timer-in-specific-times-using-google-apps-script/</link>
      <pubDate>Wed, 22 Sep 2021 15:59:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/09/22/executing-function-with-minutes-timer-in-specific-times-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for executing a function with the minutes timer in the specific times using Google Apps Script. For example, when this sample script is used, the following situation can be achieved.
 Execute a function every 10 minutes only in 09:00 - 12:00 and 15:00 - 18:00 for the weekday.  When the above situation is shown as an image, it becomes as follows.
In the above sample situation, a function is run every 10 minutes in the green ranges of 09:00 - 12:00 and 15:00 - 18:00.</description>
    </item>
    
    <item>
      <title>Running Specific Function When Specific Sheet is Edited on Google Spreadsheet</title>
      <link>https://tanaikech.github.io/2020/10/04/running-specific-function-when-specific-sheet-is-edited-on-google-spreadsheet/</link>
      <pubDate>Sun, 04 Oct 2020 09:23:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/10/04/running-specific-function-when-specific-sheet-is-edited-on-google-spreadsheet/</guid>
      <description>Gists
This is a sample Google Apps Script for running the specific function when the specific sheet is edited.
Sample script Please copy and paste the following script to the container-bound script of Spreadsheet and set sheets object.
// When the cells are edited, this function is run by the fire of event trigger. function onEdit(e) { // Please set the sheet name and function as follows.  const sheets = { Sheet1: functionForSheet1, // Sheet1 is the sheet name.</description>
    </item>
    
    <item>
      <title>Highlighting Row and Column of Selected Cell using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/06/11/highlighting-row-and-column-of-selected-cell-using-google-apps-script/</link>
      <pubDate>Thu, 11 Jun 2020 20:55:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/11/highlighting-row-and-column-of-selected-cell-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for highlighting the row and column of the selected cell using Google Apps Script. For this, the OnSelectionChange event trigger is used.
Demo Sample script Please copy and paste the following script to the script editor of Spreadsheet. And, please select a cell. By this, the script is run by the OnSelectionChange event trigger.
function onSelectionChange(e) { const range = e.range; const sheet = range.</description>
    </item>
    
    <item>
      <title>Detecting Quickly Checked Checkboxes on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/27/detecting-quickly-checked-checkboxes-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 27 May 2020 13:44:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/27/detecting-quickly-checked-checkboxes-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Abstract This is a report for detecting quickly checked checkboxes on Google Spreadsheet using Google Apps Script. It supposes that when the checkbox is checked, a function of Google Apps Script is run by the event trigger. In this case, when the multiple checkboxes on Google Spreadsheet are checked quickly, the script cannot be run for all checked checkboxes, because of the response speed of the event trigger. It is considered that to understand the response of event trigger is useful for creating the application for Spreadsheet.</description>
    </item>
    
    <item>
      <title>Characteristics of Response for onSelectionChange</title>
      <link>https://tanaikech.github.io/2020/05/19/characteristics-of-response-for-onselectionchange/</link>
      <pubDate>Tue, 19 May 2020 14:19:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/19/characteristics-of-response-for-onselectionchange/</guid>
      <description>Gists
Abstract I have already reported about &amp;ldquo;Change Tab Detection on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script&amp;rdquo;. Ref It is considered that when the situation which uses the event trigger of onSelectionChange is thought, the response speed is important. So, here, I investigated the characteristics of response for the event trigger of onSelectionChange.
Demo Experiment Sample script In order to investigate the response speed, I used the following sample script.</description>
    </item>
    
    <item>
      <title>Change Tab Detection on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/18/change-tab-detection-on-google-spreadsheet-using-onselectionchange-event-trigger-with-google-apps-script/</link>
      <pubDate>Mon, 18 May 2020 15:50:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/18/change-tab-detection-on-google-spreadsheet-using-onselectionchange-event-trigger-with-google-apps-script/</guid>
      <description>Gists
onSelectionChange has been released at April 22, 2020. But this couldn&amp;rsquo;t be used at the released day. But now, I could confirm that this got to be able to be used. So in order to test this event trigger, I prepared a simple sample script. This is a sample script for detecting the change tab on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script.
Demo Usage  Please copy and paste the following script to the container-bound script of Google Spreadsheet, and save the script.</description>
    </item>
    
    <item>
      <title>Asynchronous Processing using Event Triggers</title>
      <link>https://tanaikech.github.io/2018/09/21/asynchronous-processing-using-event-triggers/</link>
      <pubDate>Fri, 21 Sep 2018 17:00:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/21/asynchronous-processing-using-event-triggers/</guid>
      <description>Gists
Kanshi Tanaike
Overview This is a report about the possibility of asynchronous process using event triggers. This is for Google Apps Script (GAS).
Description onEdit() which is a simple trigger is often used as a trigger when the values are modified on Spreadsheet. When users want to use the script including some methods which are required to be authorized as the onEdit event, a installable trigger of onEdit is used.</description>
    </item>
    
    <item>
      <title>Sending E-mail When Spreadsheet was Edited from Outside by Sheet API</title>
      <link>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api/</link>
      <pubDate>Sun, 14 May 2017 17:43:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/05/14/sending-e-mail-when-spreadsheet-was-edited-from-outside-by-sheet-api/</guid>
      <description>This sample script sends an e-mail, when spreadsheet was edited from outside by Sheet API v4. When you use this sample, please create a container bound script with spreadsheet which is edited by Sheet API. And please input your e-mail and run firstly a method of createTrigger(). By this, a trigger is installed as onChange(). After this, edit spreadsheet from outside by Sheet API v4.
When when spreadsheet was edited from outside by Sheet API v4, I used sendEmail() as a sample, because script editor is closed.</description>
    </item>
    
  </channel>
</rss>
