<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Service Account on tanaike</title>
    <link>https://tanaikech.github.io/tags/service-account/</link>
    <description>Recent content in Service Account on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 15 Feb 2023 14:46:18 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/service-account/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrieving Access Token from Service Account using oauth2client and google-auth with Python</title>
      <link>https://tanaikech.github.io/2023/02/15/retrieving-access-token-from-service-account-using-oauth2client-and-google-auth-with-python/</link>
      <pubDate>Wed, 15 Feb 2023 14:46:18 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/02/15/retrieving-access-token-from-service-account-using-oauth2client-and-google-auth-with-python/</guid>
      <description>Gists
This is a sample script for retrieving the access token from the service account using oauth2client and google-auth with Python.
Sample script 1 Use oauth2client.
from oauth2client.service_account import ServiceAccountCredentials  SERVICE_ACCOUNT_FILE = &amp;#34;credentials.json&amp;#34; SCOPES = [&amp;#34;https://www.googleapis.com/auth/drive&amp;#34;]  creds = ServiceAccountCredentials.from_json_keyfile_name(SERVICE_ACCOUNT_FILE, scopes=SCOPES) res = creds.get_access_token() access_token = res.access_token  print(access_token) Sample script 2 Use google-auth. In the current stage, this method might be general.
from google.oauth2 import service_account import google.auth.transport.requests  SERVICE_ACCOUNT_FILE = &amp;#34;credentials.</description>
    </item>
    
    <item>
      <title>Using OnEdit trigger on Google Spreadsheet Created by Service Account</title>
      <link>https://tanaikech.github.io/2023/01/25/using-onedit-trigger-on-google-spreadsheet-created-by-service-account/</link>
      <pubDate>Wed, 25 Jan 2023 12:01:49 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2023/01/25/using-onedit-trigger-on-google-spreadsheet-created-by-service-account/</guid>
      <description>Gists
In the current stage, by the current specification, Google Apps Script cannot be directly run on Google Spreadsheet created by Service Account. But, there is a case in that we want to use the OnEdit trigger on the Spreadsheet that the service account is the owner. In this post, I would like to introduce the method for achieving this.
Recently, I published &amp;ldquo;Using OnEdit Trigger to Google Spreadsheet by Hiding Google Apps Script from Other Users&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Using Google API Client Library (gapi) for JavaScript with Service Account</title>
      <link>https://tanaikech.github.io/2021/05/27/using-google-api-client-library-gapi-for-javascript-with-service-account/</link>
      <pubDate>Thu, 27 May 2021 15:08:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/05/27/using-google-api-client-library-gapi-for-javascript-with-service-account/</guid>
      <description>Gists
This is a sample script for using Google API Client Library (gapi) for JavaScript with the service account. Unfortunately, in the current stage, gapi cannot directly use the service account. So, in this case, it is required to implement the script for retrieving the access token from the service account. In this report, I would like to introduce the method for using gapi with the service account using a Javascript library.</description>
    </item>
    
    <item>
      <title>Javascript library - GetAccessTokenFromServiceAccount_js</title>
      <link>https://tanaikech.github.io/2021/05/27/javascript-library-getaccesstokenfromserviceaccount_js/</link>
      <pubDate>Thu, 27 May 2021 15:03:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/05/27/javascript-library-getaccesstokenfromserviceaccount_js/</guid>
      <description>Overview This is a Javascript library to retrieve the access token from the Google Service Account. Ref
Description I have already posted the sample script for retrieving the access token from the Google Service Account. Ref But, when I use this script, I thought that when this was published as the Javascript library, it will be useful. So I created this.
Install &amp;lt;script src=&amp;#34;getaccesstokengromserviceaccount_js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Or, using jsdelivr cdn
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/tanaikech/GetAccessTokenFromServiceAccount_js@master/getaccesstokengromserviceaccount_js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; You can see the detail of this at https://github.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account for PHP without using googleapis</title>
      <link>https://tanaikech.github.io/2021/05/01/retrieving-access-token-using-service-account-for-php-without-using-googleapis/</link>
      <pubDate>Sat, 01 May 2021 11:54:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/05/01/retrieving-access-token-using-service-account-for-php-without-using-googleapis/</guid>
      <description>Gists
This is a sample PHP script to retrieve the access token from Service Account of Google without using googleapis.
Sample script &amp;lt;?php  $private_key = &amp;#34;-----BEGIN PRIVATE KEY-----\n###-----END PRIVATE KEY-----\n&amp;#34;; // private_key of JSON file retrieved by creating Service Account $client_email = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account $scopes = [&amp;#34;https://www.googleapis.com/auth/drive.readonly&amp;#34;]; // Sample scope  $url = &amp;#34;https://www.googleapis.com/oauth2/v4/token&amp;#34;; $header = array(&amp;#34;alg&amp;#34; =&amp;gt; &amp;#34;RS256&amp;#34;, &amp;#34;typ&amp;#34; =&amp;gt; &amp;#34;JWT&amp;#34;); $now = floor(time()); $claim = array( 	&amp;#34;iss&amp;#34; =&amp;gt; $client_email, 	&amp;#34;sub&amp;#34; =&amp;gt; $client_email, 	&amp;#34;scope&amp;#34; =&amp;gt; implode(&amp;#34; &amp;#34;, $scopes), 	&amp;#34;aud&amp;#34; =&amp;gt; $url, 	&amp;#34;exp&amp;#34; =&amp;gt; (string)($now + 3600), 	&amp;#34;iat&amp;#34; =&amp;gt; (string)$now, ); $signature = base64_encode(json_encode($header, JSON_UNESCAPED_SLASHES)) .</description>
    </item>
    
    <item>
      <title>Safe-Uploading for Google Drive by HTML in External Server using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</link>
      <pubDate>Tue, 29 Dec 2020 11:13:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</guid>
      <description>Overview This is a report for safe-uploading files to Google Drive by HTML put in the external server using Google Apps Script.
Description When you want to make the user upload a file to your own Google Drive using the HTML put in the external server of Google side, when the file size is smaller than 50 MB, this can be achieved without using the access token. Ref (When the HTML is put in the internal server of Google side, you can also use google.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Javascript</title>
      <link>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</link>
      <pubDate>Sat, 19 Dec 2020 14:09:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Javascript. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  Sample script In this script, 2 libraries of jsencrypt and crypto-js are used.
&amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/3.0.0-rc.1/jsencrypt.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;  &amp;lt;script&amp;gt;  async function sample() {  const private_key = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Account  const client_email = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account  const scopes = [&amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account for Node.js without using googleapis</title>
      <link>https://tanaikech.github.io/2019/04/02/retrieving-access-token-using-service-account-for-node.js-without-using-googleapis/</link>
      <pubDate>Tue, 02 Apr 2019 16:42:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/02/retrieving-access-token-using-service-account-for-node.js-without-using-googleapis/</guid>
      <description>Gists
This is a sample Node.js script to retrieve access token from Service Account of Google without using googleapis.
const cryptor = require(&amp;#39;crypto&amp;#39;); const request = require(&amp;#39;request&amp;#39;);  const privateKey = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Account const clientEmail = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account const scopes = [&amp;#34;https://www.googleapis.com/auth/drive.readonly&amp;#34;]; // Sample scope  const url = &amp;#34;https://www.googleapis.com/oauth2/v4/token&amp;#34;; const header = {  alg: &amp;#34;RS256&amp;#34;,  typ: &amp;#34;JWT&amp;#34;, }; const now = Math.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account by Google&#39;s OAuth2 package for Golang</title>
      <link>https://tanaikech.github.io/2018/12/11/retrieving-access-token-using-service-account-by-googles-oauth2-package-for-golang/</link>
      <pubDate>Tue, 11 Dec 2018 14:47:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/11/retrieving-access-token-using-service-account-by-googles-oauth2-package-for-golang/</guid>
      <description>Gists
This is a sample golang script for retrieving access token using Service Account of Google by Google&amp;rsquo;s OAuth2 package.
The script without using Google&amp;rsquo;s OAuth2 package is here.
package mainimport (&amp;#34;encoding/json&amp;#34;&amp;#34;fmt&amp;#34;&amp;#34;io/ioutil&amp;#34;&amp;#34;os&amp;#34;&amp;#34;golang.org/x/oauth2&amp;#34;&amp;#34;golang.org/x/oauth2/google&amp;#34;&amp;#34;golang.org/x/oauth2/jwt&amp;#34;)func serviceAccount(credentialFile string) (*oauth2.Token, error) {b, err := ioutil.ReadFile(credentialFile)if err != nil {return nil, err}var c = struct {Email string `json:&amp;#34;client_email&amp;#34;`PrivateKey string `json:&amp;#34;private_key&amp;#34;`}{}json.</description>
    </item>
    
    <item>
      <title>Go Library - go-gettokenbyserviceaccount</title>
      <link>https://tanaikech.github.io/2018/12/11/go-library-go-gettokenbyserviceaccount/</link>
      <pubDate>Tue, 11 Dec 2018 14:42:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/11/go-library-go-gettokenbyserviceaccount/</guid>
      <description>Overview This is a Golang library to retrieve access token from Service Account of Google without using Google&amp;rsquo;s OAuth2 package.
You can get this from https://github.com/tanaikech/go-gettokenbyserviceaccount</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</link>
      <pubDate>Fri, 07 Dec 2018 12:09:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Google Apps Script. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  var private_key = &amp;#34;#####&amp;#34;; // private_key of JSON file retrieved by creating Service Account var client_email = &amp;#34;#####&amp;#34;; // client_email of JSON file retrieved by creating Service Account var scopes = [&amp;#34;https://www.</description>
    </item>
    
  </channel>
</rss>
