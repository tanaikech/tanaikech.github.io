<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Service Account  on tanaike</title>
    <link>https://tanaikech.github.io/tags/service-account/</link>
    <description>Recent content in Service Account  on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 29 Dec 2020 11:13:10 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/service-account/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Safe-Uploading for Google Drive by HTML in External Server using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</link>
      <pubDate>Tue, 29 Dec 2020 11:13:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/29/safe-uploading-for-google-drive-by-html-in-external-server-using-google-apps-script/</guid>
      <description>Overview This is a report for safe-uploading files to Google Drive by HTML put in the external server using Google Apps Script.
Description When you want to make the user upload a file to your own Google Drive using the HTML put in the external server of Google side, when the file size is smaller than 50 MB, this can be achieved without using the access token. Ref (When the HTML is put in the internal server of Google side, you can also use google.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Javascript</title>
      <link>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</link>
      <pubDate>Sat, 19 Dec 2020 14:09:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/12/19/retrieving-access-token-for-service-account-using-javascript/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Javascript. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  Sample script In this script, 2 libraries of jsencrypt and crypto-js are used.
&amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/3.0.0-rc.1/jsencrypt.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;async function sample() {const private_key = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Account const client_email = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Account const scopes = [&amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account for Node.js without using googleapis</title>
      <link>https://tanaikech.github.io/2019/04/02/retrieving-access-token-using-service-account-for-node.js-without-using-googleapis/</link>
      <pubDate>Tue, 02 Apr 2019 16:42:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/04/02/retrieving-access-token-using-service-account-for-node.js-without-using-googleapis/</guid>
      <description>Gists
This is a sample Node.js script to retrieve access token from Service Account of Google without using googleapis.
const cryptor = require(&amp;#39;crypto&amp;#39;);const request = require(&amp;#39;request&amp;#39;);const privateKey = &amp;#34;###&amp;#34;; // private_key of JSON file retrieved by creating Service Accountconst clientEmail = &amp;#34;###&amp;#34;; // client_email of JSON file retrieved by creating Service Accountconst scopes = [&amp;#34;https://www.googleapis.com/auth/drive.readonly&amp;#34;]; // Sample scopeconst url = &amp;#34;https://www.googleapis.com/oauth2/v4/token&amp;#34;;const header = {alg: &amp;#34;RS256&amp;#34;,typ: &amp;#34;JWT&amp;#34;,};const now = Math.</description>
    </item>
    
    <item>
      <title>Retrieving Access Token using Service Account by Google&#39;s OAuth2 package for Golang</title>
      <link>https://tanaikech.github.io/2018/12/11/retrieving-access-token-using-service-account-by-googles-oauth2-package-for-golang/</link>
      <pubDate>Tue, 11 Dec 2018 14:47:41 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/11/retrieving-access-token-using-service-account-by-googles-oauth2-package-for-golang/</guid>
      <description>Gists
This is a sample golang script for retrieving access token using Service Account of Google by Google&#39;s OAuth2 package.
The script without using Google&#39;s OAuth2 package is here.
package mainimport (&amp;quot;encoding/json&amp;quot;&amp;quot;fmt&amp;quot;&amp;quot;io/ioutil&amp;quot;&amp;quot;os&amp;quot;&amp;quot;golang.org/x/oauth2&amp;quot;&amp;quot;golang.org/x/oauth2/google&amp;quot;&amp;quot;golang.org/x/oauth2/jwt&amp;quot;)func serviceAccount(credentialFile string) (*oauth2.Token, error) {b, err := ioutil.ReadFile(credentialFile)if err != nil {return nil, err}var c = struct {Email string `json:&amp;quot;client_email&amp;quot;`PrivateKey string `json:&amp;quot;private_key&amp;quot;`}{}json.</description>
    </item>
    
    <item>
      <title>Go Library - go-gettokenbyserviceaccount</title>
      <link>https://tanaikech.github.io/2018/12/11/go-library-go-gettokenbyserviceaccount/</link>
      <pubDate>Tue, 11 Dec 2018 14:42:52 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/11/go-library-go-gettokenbyserviceaccount/</guid>
      <description>Overview This is a Golang library to retrieve access token from Service Account of Google without using Google&#39;s OAuth2 package.
You can get this from https://github.com/tanaikech/go-gettokenbyserviceaccount</description>
    </item>
    
    <item>
      <title>Retrieving Access Token for Service Account using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</link>
      <pubDate>Fri, 07 Dec 2018 12:09:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/12/07/retrieving-access-token-for-service-account-using-google-apps-script/</guid>
      <description>Gists
This is a sample script for retrieving the access token for Service Account using Google Apps Script. The flow for using this script is as follows.
 At first, please create the Service Account and retrieve JSON file. Put Scopes, private_key and client_email to the script. Run the script.  var private_key = &amp;#34;#####&amp;#34;; // private_key of JSON file retrieved by creating Service Accountvar client_email = &amp;#34;#####&amp;#34;; // client_email of JSON file retrieved by creating Service Accountvar scopes = [&amp;#34;https://www.</description>
    </item>
    
  </channel>
</rss>