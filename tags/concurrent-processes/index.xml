<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrent-processes on tanaike</title>
    <link>https://tanaikech.github.io/tags/concurrent-processes/</link>
    <description>Recent content in concurrent-processes on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 15 Sep 2021 14:42:25 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/tags/concurrent-processes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concurrent Writing to Google Spreadsheet using Form</title>
      <link>https://tanaikech.github.io/2021/09/15/concurrent-writing-to-google-spreadsheet-using-form/</link>
      <pubDate>Wed, 15 Sep 2021 14:42:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/09/15/concurrent-writing-to-google-spreadsheet-using-form/</guid>
      <description>Gists
  Published: September 15, 2021
  Updated: September 17, 2021
 From the discussions, added data by changing the wait time of LockService for Web Apps.    Kanshi Tanaike
Introduction When the users try to write to a Spreadsheet using a form, the developers have to consider the concurrent submission from the form. For example, when multiple users submit the data with the form simultaneously, all data are possibly not to be saved to the Spreadsheet.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2021/01/13/updated-gas-library-batchrequest/</link>
      <pubDate>Wed, 13 Jan 2021 09:53:00 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2021/01/13/updated-gas-library-batchrequest/</guid>
      <description>BatchRequest was updated to v1.1.3.   v1.1.3 (January 13, 2021)
 In order to give the access token from outside, the access token got to be able to be included in the object. By this, for example, you can use the access token retrieved by the service account.    You can check this at https://github.com/tanaikech/BatchRequest.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2020/06/12/updated-gas-library-batchrequest/</link>
      <pubDate>Fri, 12 Jun 2020 14:43:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/12/updated-gas-library-batchrequest/</guid>
      <description>BatchRequest was updated to v1.1.2.   v1.1.1 (June 12, 2020)
 Error handling for the input object was added.    v1.1.2 (June 12, 2020)
 Removed a bug that when the returned value is empty, an error occurred.    You can check this at https://github.com/tanaikech/BatchRequest.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2020/06/10/updated-gas-library-batchrequest/</link>
      <pubDate>Wed, 10 Jun 2020 14:56:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/10/updated-gas-library-batchrequest/</guid>
      <description>BatchRequest was updated to v1.1.0.   v1.1.0 (June 10, 2020)
 New method of EDo() was added. This method is the enhanced Do() method. When this method is used, the result values from the batch requests are parsed. And also, the number of requests more than 100 can be used. In this case, the split of the number of requests is processed for the limitation of 100.    You can check this at https://github.</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2020/05/31/updated-gas-library-runall/</link>
      <pubDate>Sun, 31 May 2020 16:13:43 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/31/updated-gas-library-runall/</guid>
      <description>RunAll was updated to v1.1.2.   v1.1.2 (May 31, 2020)
 When the access token and project ID are not included in the object, getOAuthToken() and getScriptId(). By this, an error is removed.    You can see the detail information here https://github.com/tanaikech/RunAll</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2019/09/20/updated-gas-library-runall/</link>
      <pubDate>Fri, 20 Sep 2019 10:43:10 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/09/20/updated-gas-library-runall/</guid>
      <description>RunAll was updated to v1.1.1.   v1.1.1 (September 20, 2019)
 When the number of 0 was used as the argument, null was returned. This bug was removed. Coffeescript as the source was updated.    You can see the detail information here https://github.com/tanaikech/RunAll</description>
    </item>
    
    <item>
      <title>Updated: GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2019/08/26/updated-gas-library-runall/</link>
      <pubDate>Mon, 26 Aug 2019 17:40:23 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/26/updated-gas-library-runall/</guid>
      <description>RunAll was updated to v1.1.0.   v1.1.0 (August 26, 2019)
 New method for achieving the parallel processing with Web Apps was added.    You can see the detail information here https://github.com/tanaikech/RunAll</description>
    </item>
    
    <item>
      <title>GAS Library - BatchRequest</title>
      <link>https://tanaikech.github.io/2018/05/02/gas-library-batchrequest/</link>
      <pubDate>Wed, 02 May 2018 15:55:37 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/02/gas-library-batchrequest/</guid>
      <description>Overview This is a library for running Batch Requests using Google Apps Script (GAS).
Description When users use Google&#39;s APIs, one quota is used for one API call. When the batch request is used, several APIs can be called by one quota, although there are some limitations in the batch request. For example, in GAS, Drive API can be used be DriveApp. In this case, the quota is not used for using Drive API.</description>
    </item>
    
    <item>
      <title>GAS Library - RunAll</title>
      <link>https://tanaikech.github.io/2018/04/24/gas-library-runall/</link>
      <pubDate>Tue, 24 Apr 2018 08:45:08 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/24/gas-library-runall/</guid>
      <description>Overview This is a library for running the concurrent processing using only native Google Apps Script (GAS).
Description Have you ever thought about the concurrent processing using only native Google Apps Script (GAS)? So far, I had run the concurrent processing using golang, javascript and python. But the script cannot be used by the trigger event, because these are not native GAS. Recently, it was found that the fetchAll method added by the Google&#39;s update at January 19, 2018 is worked by the asynchronous processing.</description>
    </item>
    
  </channel>
</rss>