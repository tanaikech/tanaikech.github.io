<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compression on tanaike</title>
    <link>https://tanaikech.github.io/tags/compression/</link>
    <description>Recent content in compression on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 23 Oct 2018 16:59:51 +0900</lastBuildDate><atom:link href="https://tanaikech.github.io/tags/compression/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zip Compression of Downloaded File using Golang</title>
      <link>https://tanaikech.github.io/2018/10/23/zip-compression-of-downloaded-file-using-golang/</link>
      <pubDate>Tue, 23 Oct 2018 16:59:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/23/zip-compression-of-downloaded-file-using-golang/</guid>
      <description>Gists
This is a sample script for creating a downloaded file as a zip file using Golang. The downloaded file is not created to a file as a temporal file. The zip file is directly created. When you use this, please modify url, downloadedFileName and zipFileName.
Sample script: package mainimport (&amp;quot;archive/zip&amp;quot;&amp;quot;bytes&amp;quot;&amp;quot;fmt&amp;quot;&amp;quot;io&amp;quot;&amp;quot;io/ioutil&amp;quot;&amp;quot;log&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;os&amp;quot;&amp;quot;time&amp;quot;)func main() {url := &amp;quot;https://localhost/sample.png&amp;quot;downloadedFileName := &amp;quot;sample.</description>
    </item>
    
  </channel>
</rss>
