<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodetips on tanaike</title>
    <link>https://tanaikech.github.io/topics/nodetips/</link>
    <description>Recent content in Nodetips on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 12 Feb 2019 09:02:16 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/topics/nodetips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sample Script for Executing with Synchronous Process using Node.js</title>
      <link>https://tanaikech.github.io/2019/02/12/sample-script-for-executing-with-synchronous-process-using-node.js/</link>
      <pubDate>Tue, 12 Feb 2019 09:02:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/02/12/sample-script-for-executing-with-synchronous-process-using-node.js/</guid>
      <description>Gists
This is a sample script for executing with the synchronous process using Node.js.
Sample script function work(e) { return new Promise((resolve, reject) =&amp;gt; { setTimeout(() =&amp;gt; { console.log(e); resolve(&amp;quot;ok&amp;quot; + e); }, 1000); }); } async function main() { var ar = [1, 2, 3, 4, 5]; for (var i = 0; i &amp;lt; ar.length; i++) { console.log(&#39;start&#39; + ar[i]); await work(ar[i]).then((res) =&amp;gt; console.log(res)); console.log(&#39;end&#39; + ar[i]); } } main(); // Run main().</description>
    </item>
    
    <item>
      <title>Directly Using Access Token by googleapis for Node.js</title>
      <link>https://tanaikech.github.io/2018/11/19/directly-using-access-token-by-googleapis-for-node.js/</link>
      <pubDate>Mon, 19 Nov 2018 07:35:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/19/directly-using-access-token-by-googleapis-for-node.js/</guid>
      <description>Gists
This sample script is for directly using the refreshed access token by googleapis for Node.js. When oauth2Client.refreshAccessToken((err, tokens) =&amp;gt; {}); is used to retrieve the refreshed access token, the following error occurs.
 DeprecationWarning: The refreshAccess Token method has been deprecated, and will be removed in the 3.0 release of goo gle-auth-library. Please use the getRequestHeaders method instead.
 It is required to use getRequestHeaders(). But I couldn&amp;rsquo;t find the sample script using getRequestHeaders().</description>
    </item>
    
    <item>
      <title>Updated: node module - google-drive-getfilelist</title>
      <link>https://tanaikech.github.io/2018/11/16/updated-node-module---google-drive-getfilelist/</link>
      <pubDate>Fri, 16 Nov 2018 08:54:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/16/updated-node-module---google-drive-getfilelist/</guid>
      <description>node module - google-drive-getfilelist was updated to v1.0.3  v1.0.3 (November 16, 2018)
 Modified a bug.   You can get this from https://github.com/tanaikech/node-getfilelist
You can also get this from https://www.npmjs.com/package/google-drive-getfilelist</description>
    </item>
    
    <item>
      <title>node module - google-drive-getfilelist</title>
      <link>https://tanaikech.github.io/2018/11/14/node-module---google-drive-getfilelist/</link>
      <pubDate>Wed, 14 Nov 2018 12:28:21 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/14/node-module---google-drive-getfilelist/</guid>
      <description>Overview This is a Node.js module to retrieve the file list with the folder tree from the specific folder of Google Drive.
Description When I create applications for using Google Drive, I often retrieve a file list from a folder in the application. So far, I had created the script for retrieving a file list from a folder for each application. Recently, I thought that if there is the script for retrieving the file list with the folder tree from the folder of Google Drive as a module, it will be useful for me and other users.</description>
    </item>
    
    <item>
      <title>Create Folder Tree of Google Drive using Node.js</title>
      <link>https://tanaikech.github.io/2018/05/20/create-folder-tree-of-google-drive-using-node.js/</link>
      <pubDate>Sun, 20 May 2018 13:40:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/20/create-folder-tree-of-google-drive-using-node.js/</guid>
      <description>Gists
This is a sample script for retrieving a folder tree using Node.js. In this sample, you can set the top of folder for the folder tree. In generally, the folder tree is created by retrieving folders from the top folder in order. For example, when Google Apps Script is used, the script becomes like this. But when Drive API is used for this situation, if there are a lot of folders in the top folder, a lot of APIs are required to be called.</description>
    </item>
    
    <item>
      <title>Send mails from Gmail using Nodemailer</title>
      <link>https://tanaikech.github.io/2018/01/08/send-mails-from-gmail-using-nodemailer/</link>
      <pubDate>Mon, 08 Jan 2018 10:35:07 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/01/08/send-mails-from-gmail-using-nodemailer/</guid>
      <description>Gists
This is a sample script for sending e-mails from gmail using Nodemailer. In order to use this, please retrieve the folloing parameters before run this script.
 gmail address client ID client Secret Refresh token  Please include https://mail.google.com/ in the scope.  Enable gmail API at API console. Install Nodemailer  const nodemailer = require(&#39;nodemailer&#39;); var auth = { type: &#39;oauth2&#39;, user: &#39;### your gmail address ###&#39;, clientId: &#39;### client ID ###&#39;, clientSecret: &#39;### client secret ###&#39;, refreshToken: &#39;### refresh token ###&#39;, }; var mailOptions = { from: &#39;#####&#39;, to: &#39;#####&#39;, subject: &#39;sample subject&#39;, text: &#39;sample text&#39;, html: &#39;&amp;lt;b&amp;gt;sample html&amp;lt;/b&amp;gt;&#39;, }; var transporter = nodemailer.</description>
    </item>
    
    <item>
      <title>Downloading Files Under Specific Folder using Node.js</title>
      <link>https://tanaikech.github.io/2017/08/17/downloading-files-under-specific-folder-using-node.js/</link>
      <pubDate>Thu, 17 Aug 2017 09:25:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/17/downloading-files-under-specific-folder-using-node.js/</guid>
      <description>Gists
This sample script is for downloading files under a specific folder using Node.js. It can download files with Google Docs and others.
This sample supposes as follows. So please confirm it.
 quickstart is used and default quickstart works fine.  In order to use this sample, please carry out as follows.
 Replace listFiles() of the default quickstart to this sample. Set folderid. This script can retrieve files in the folder with folderid.</description>
    </item>
    
    <item>
      <title>Uploading Files to OneDrive Using Node.js</title>
      <link>https://tanaikech.github.io/2017/08/15/uploading-files-to-onedrive-using-node.js/</link>
      <pubDate>Tue, 15 Aug 2017 10:00:39 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/15/uploading-files-to-onedrive-using-node.js/</guid>
      <description>Gists
Upload contents for an item on OneDrive In order to use this script, please retrieve client id, client secret and refresh token before. About this, you can see the detail information at https://gist.github.com/tanaikech/d9674f0ead7e3320c5e3184f5d1b05cc.
1. Simple item upload This is for the simple item upload is available for items with less than 4 MB of content. The detail information is https://dev.onedrive.com/items/upload_put.htm.
var fs = require(&#39;fs&#39;); var mime = require(&#39;mime&#39;); var request = require(&#39;request&#39;); var file = &#39;.</description>
    </item>
    
  </channel>
</rss>