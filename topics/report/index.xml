<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>report on tanaike</title>
    <link>https://tanaikech.github.io/topics/report/</link>
    <description>Recent content in report on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 29 Jun 2020 13:59:48 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/topics/report/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Report: Processing to Create New File to Specific Folder using Drive API</title>
      <link>https://tanaikech.github.io/2020/06/29/report-processing-to-create-new-file-to-specific-folder-using-drive-api/</link>
      <pubDate>Mon, 29 Jun 2020 13:59:48 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/06/29/report-processing-to-create-new-file-to-specific-folder-using-drive-api/</guid>
      <description>Gists
In this report, I would like to report for processing to create new file to the specific folder using Drive API. When the new file is created to the specific folder using Drive API, the property of parents with the value of folder ID is included in the request body of the method &amp;ldquo;Files: create&amp;rdquo;. About this process, I had thought that the file is directly created to the specific folder.</description>
    </item>
    
    <item>
      <title>Detecting Quickly Checked Checkboxes on Google Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/05/27/detecting-quickly-checked-checkboxes-on-google-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 27 May 2020 13:44:12 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/27/detecting-quickly-checked-checkboxes-on-google-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Abstract This is a report for detecting quickly checked checkboxes on Google Spreadsheet using Google Apps Script. It supposes that when the checkbox is checked, a function of Google Apps Script is run by the event trigger. In this case, when the multiple checkboxes on Google Spreadsheet are checked quickly, the script cannot be run for all checked checkboxes, because of the response speed of the event trigger. It is considered that to understand the response of event trigger is useful for creating the application for Spreadsheet.</description>
    </item>
    
    <item>
      <title>Characteristics of Response for onSelectionChange</title>
      <link>https://tanaikech.github.io/2020/05/19/characteristics-of-response-for-onselectionchange/</link>
      <pubDate>Tue, 19 May 2020 14:19:51 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/05/19/characteristics-of-response-for-onselectionchange/</guid>
      <description>Gists
Abstract I have already reported about &amp;ldquo;Change Tab Detection on Google Spreadsheet using onSelectionChange Event Trigger with Google Apps Script&amp;rdquo;. Ref It is considered that when the situation which uses the event trigger of onSelectionChange is thought, the response speed is important. So, here, I investigated the characteristics of response for the event trigger of onSelectionChange.
Demo Experiment Sample script In order to investigate the response speed, I used the following sample script.</description>
    </item>
    
    <item>
      <title>Benchmark: Process Costs under V8 using Google Apps Script</title>
      <link>https://tanaikech.github.io/2020/03/22/benchmark-process-costs-under-v8-using-google-apps-script/</link>
      <pubDate>Sun, 22 Mar 2020 13:46:33 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/03/22/benchmark-process-costs-under-v8-using-google-apps-script/</guid>
      <description>Gists
 March 22, 2020  Published.    Kanshi Tanaike
Introduction V8 engine got to be able to be used at Google Apps Script. By this, I have reported about the process costs with and without using V8. Ref It is considered that knowing the process costs for various methods will be useful for creating the applications with Google Apps Script. Here, I would like to introduce the process costs of each situations under V8.</description>
    </item>
    
    <item>
      <title>Benchmark: Loop for Array Processing using Google Apps Script with V8</title>
      <link>https://tanaikech.github.io/2020/02/09/benchmark-loop-for-array-processing-using-google-apps-script-with-v8/</link>
      <pubDate>Sun, 09 Feb 2020 17:01:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/02/09/benchmark-loop-for-array-processing-using-google-apps-script-with-v8/</guid>
      <description>Gists
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Trend of google-apps-script Tag on Stackoverflow 2020</title>
      <link>https://tanaikech.github.io/2020/01/10/trend-of-google-apps-script-tag-on-stackoverflow-2020/</link>
      <pubDate>Fri, 10 Jan 2020 10:14:36 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2020/01/10/trend-of-google-apps-script-tag-on-stackoverflow-2020/</guid>
      <description>Gists
Kanshi Tanaike
Introduction At Stackoverflow, a lot of people post the questions and answers to the questions every day. There are various tags in Stackoverflow. A lot of discussions are performed at each tag. Their discussions bring the important information and are much useful for a lot of people. As one of tags, there is &amp;ldquo;google-apps-script&amp;rdquo;. I sometimes discuss at the questions with that tag. When we see the discussions, we can notice that the discussions are changed and progressed by the time, because &amp;ldquo;Google Apps Script&amp;rdquo; which is the origin of the tag is updated.</description>
    </item>
    
    <item>
      <title>Benchmark: Importing CSV Data to Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/08/28/benchmark-importing-csv-data-to-spreadsheet-using-google-apps-script/</link>
      <pubDate>Wed, 28 Aug 2019 12:01:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/08/28/benchmark-importing-csv-data-to-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes for Consumer and Google Apps free edition, and 30 minutes for G Suite and Early Access. 1 So many users always have to pay attention to reducing the process cost of scripts. So it is very important to know the process cost of various situations.</description>
    </item>
    
    <item>
      <title>Trend of google-apps-script Tag on Stackoverflow 2019</title>
      <link>https://tanaikech.github.io/2019/03/25/trend-of-google-apps-script-tag-on-stackoverflow-2019/</link>
      <pubDate>Mon, 25 Mar 2019 16:29:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/03/25/trend-of-google-apps-script-tag-on-stackoverflow-2019/</guid>
      <description>Gists
Kanshi Tanaike
Introduction At Stackoverflow, a lot of people post the questions and answers to the questions every day. There are various tags in Stackoverflow. A lot of discussions are performed at each tag. Their discussions bring the important information and are much useful for a lot of people. As one of tags, there is &amp;ldquo;google-apps-script&amp;rdquo;. I sometimes discuss at the questions with that tag. When we see the discussions, we can notice that the discussions are changed and progressed by the time, because &amp;ldquo;Google Apps Script&amp;rdquo; which is the origin of the tag is updated.</description>
    </item>
    
    <item>
      <title>Update: Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2019/01/16/update-taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Wed, 16 Jan 2019 10:42:46 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/01/16/update-taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>&amp;ldquo;Taking advantage of Web Apps with Google Apps Script&amp;rdquo; was updated. A section of &amp;ldquo;How to use dev mode from outside&amp;rdquo; was added.
 When you deploy Web Apps, you can see the link labeled latest code. The link is like https://script.google.com/macros/s/###/dev. When you access to the link of latest code using your browser under you login to Google, you can access to Web Apps with the dev mode. But if you want to access to Web Apps with the dev mode from outside, there are no documents for the method.</description>
    </item>
    
    <item>
      <title>Benchmark: Reading and Writing Spreadsheet using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/10/12/benchmark-reading-and-writing-spreadsheet-using-google-apps-script/</link>
      <pubDate>Fri, 12 Oct 2018 10:42:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/12/benchmark-reading-and-writing-spreadsheet-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Reading and Writing Spreadsheet using Google Apps Script October 18, 2018 Updated. In order to compare with Advanced Google Service, a result of Sheets API by UrlFetchApp was added to Appendix.
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes for Consumer and Google Apps free edition, and 30 minutes for G Suite and Early Access.</description>
    </item>
    
    <item>
      <title>Joined to Skillshare.com</title>
      <link>https://tanaikech.github.io/2018/10/03/joined-to-skillshare.com/</link>
      <pubDate>Wed, 03 Oct 2018 14:28:11 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/10/03/joined-to-skillshare.com/</guid>
      <description>Recently, I was invited to Skillshare.com. They said that &amp;ldquo;will you teach about Google Apps Script?&amp;quot;. I thought that if I can be helpful for other users, I&#39;m glad. So I joined to there and created a presentation. I would like to create more classed in the future. If those were helpful for you, I&#39;m glad.</description>
    </item>
    
    <item>
      <title>Asynchronous Processing using Event Triggers</title>
      <link>https://tanaikech.github.io/2018/09/21/asynchronous-processing-using-event-triggers/</link>
      <pubDate>Fri, 21 Sep 2018 17:00:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/09/21/asynchronous-processing-using-event-triggers/</guid>
      <description>Gists
Kanshi Tanaike
Overview This is a report about the possibility of asynchronous process using event triggers. This is for Google Apps Script (GAS).
Description onEdit() which is a simple trigger is often used as a trigger when the values are modified on Spreadsheet. When users want to use the script including some methods which are required to be authorized as the onEdit event, a installable trigger of onEdit is used.</description>
    </item>
    
    <item>
      <title>Benchmark: Decreasing Loop for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/08/11/benchmark-decreasing-loop-for-array-processing-using-google-apps-script/</link>
      <pubDate>Sat, 11 Aug 2018 16:25:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/08/11/benchmark-decreasing-loop-for-array-processing-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Decreasing Loop for Array Processing using Google Apps Script Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes. 1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Updated: Benchmark: Loop for Array Processing using Google Apps Script without V8</title>
      <link>https://tanaikech.github.io/2018/07/26/updated-benchmark-loop-for-array-processing-using-google-apps-script-without-v8/</link>
      <pubDate>Thu, 26 Jul 2018 09:29:06 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/26/updated-benchmark-loop-for-array-processing-using-google-apps-script-without-v8/</guid>
      <description>I updated the report of &amp;ldquo;Benchmark: Loop for Array Processing using Google Apps Script&amp;rdquo;. In this update, &amp;ldquo;reduce&amp;rdquo; was added. If this report is useful for your situation, I&#39;m glad.
**You can check this at https://gist.</description>
    </item>
    
    <item>
      <title>Benchmark: Conditional Branch using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/11/benchmark-conditional-branch-using-google-apps-script/</link>
      <pubDate>Wed, 11 Jul 2018 13:36:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/11/benchmark-conditional-branch-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Conditional Branch using Google Apps Script Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Benchmark: Search for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/07/02/benchmark-search-for-array-processing-using-google-apps-script/</link>
      <pubDate>Mon, 02 Jul 2018 08:55:45 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/07/02/benchmark-search-for-array-processing-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Search for Array Processing using Google Apps Script Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Retrieving Reformatted Scripts without Comments in a Project using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/28/retrieving-reformatted-scripts-without-comments-in-a-project-using-google-apps-script/</link>
      <pubDate>Mon, 28 May 2018 12:55:14 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/28/retrieving-reformatted-scripts-without-comments-in-a-project-using-google-apps-script/</guid>
      <description>Gists
Overview This is a sample script for easily retrieving the reformatted scripts without comments in a project using Google Apps Script (GAS).
Description When I create GAS script, if the format of script is not correct, the script editor lets me know about it. By this, I can find that the script editor and/or Google Drive checks the format of scripts. I had wished if I could use this function.</description>
    </item>
    
    <item>
      <title>Remove Third-party Apps with Account Access using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</link>
      <pubDate>Wed, 23 May 2018 15:51:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/05/23/remove-third-party-apps-with-account-access-using-google-apps-script/</guid>
      <description>Gists
Overview This is a method for removing Third-party Apps with Account Access using a script.
Demo Description When users create a script in a project and run the script, if the methods which are required to use scopes are included, users have to authorize to use the scopes using the browser. By authorizing it, users can use the script. The authorized projects can be seen at Third-party Apps with Account Access.</description>
    </item>
    
    <item>
      <title>Taking advantage of Web Apps with Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</link>
      <pubDate>Thu, 26 Apr 2018 08:35:02 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/26/taking-advantage-of-web-apps-with-google-apps-script/</guid>
      <description>Overview This is a report to take advantage of Web Apps with Google Apps Script (GAS).
Description There is Web Apps as one of applications using Google Apps Script (GAS). I sometimes use this Web Apps. But I have only a little the information for the specification of Web Apps. So in order to take more advantage of Web Apps, I investigated and summarized about this. The aim of this report is to become one of the basic information for creating various applications using Web Apps with GAS.</description>
    </item>
    
    <item>
      <title>Benchmark: fetchAll method in UrlFetch service for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/19/benchmark-fetchall-method-in-urlfetch-service-for-google-apps-script/</link>
      <pubDate>Thu, 19 Apr 2018 14:24:24 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/19/benchmark-fetchall-method-in-urlfetch-service-for-google-apps-script/</guid>
      <description>Gists
By Google&#39;s update at January 19, 2018, fetchAll method was added to the UrlFetch service. When I saw the usage, I couldn&#39;t find the detail information about the actual running state. So I investigated about it.
As the result, it was found that the fetchAll method is worked by the asynchronous processing. The returned data is reordered by the order of requests. By this, it was also found that if you want to retrieve the data from the several URL, the process cost of UrlFetchApp.</description>
    </item>
    
    <item>
      <title>Benchmark: Loop for Array Processing using Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/16/benchmark-loop-for-array-processing-using-google-apps-script/</link>
      <pubDate>Mon, 16 Apr 2018 08:27:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/16/benchmark-loop-for-array-processing-using-google-apps-script/</guid>
      <description>Gists
Benchmark: Loop for Array Processing using Google Apps Script July 26, 2018 Updated. Result of reduce was added.
Kanshi Tanaike
Introduction Please be careful! This result can be only used for Google Apps Script.
There are a limit executing time for Google Apps Script (GAS). That is 6 minutes.1 So users always have to pay attention to reducing the process cost of the scripts. Especially, it is very important to know the process cost for the array processing, because the array processing is often used for spreadsheet and Google APIs.</description>
    </item>
    
    <item>
      <title>Benchmark: Event Objects for Google Apps Script</title>
      <link>https://tanaikech.github.io/2018/04/14/benchmark-event-objects-for-google-apps-script/</link>
      <pubDate>Sat, 14 Apr 2018 14:45:15 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/04/14/benchmark-event-objects-for-google-apps-script/</guid>
      <description>Gists
Introduction There are event objects at Google Apps Script. Typically, users which use Spreadsheet often use onEdit(event). Here, I would like to introduce the process costs for the event objects using this onEdit(event).
When onEdit(event) is used for the spreadsheet, event of onEdit(event) has the following structure.
{&amp;#34;authMode&amp;#34;: {},&amp;#34;range&amp;#34;: {&amp;#34;columnStart&amp;#34;: 1,&amp;#34;rowStart&amp;#34;: 1,&amp;#34;rowEnd&amp;#34;: 1,&amp;#34;columnEnd&amp;#34;: 1},&amp;#34;source&amp;#34;: {},&amp;#34;oldValue&amp;#34;: &amp;#34;old sample text&amp;#34;,&amp;#34;user&amp;#34;: {&amp;#34;nickname&amp;#34;: &amp;#34;sampleName&amp;#34;,&amp;#34;email&amp;#34;: &amp;#34;sample email&amp;#34;},&amp;#34;value&amp;#34;: &amp;#34;sample text&amp;#34;}In this structure, for example, the range of active cell is &amp;quot;range&amp;quot;: {&amp;quot;columnStart&amp;quot;: 1, &amp;quot;rowStart&amp;quot;: 1, &amp;quot;rowEnd&amp;quot;: 1, &amp;quot;columnEnd&amp;quot;: 1 }.</description>
    </item>
    
    <item>
      <title>Benchmark: Effect of Comprehension for GAS</title>
      <link>https://tanaikech.github.io/2017/06/07/benchmark-effect-of-comprehension-for-gas/</link>
      <pubDate>Wed, 07 Jun 2017 09:21:54 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/07/benchmark-effect-of-comprehension-for-gas/</guid>
      <description>Description There are a limit executing time for Google Apps Script (GAS). It&#39;s 6 minutes. So users have to pay attention to the process cost of the script. GAS can use JavaScript 1.7. This means to be able to be used comprehension for GAS.
In this report, the process cost for the comprehension has been investigated. The normal for loop was used as the competitor. As a result, it was found that the comprehension can be used one of methods for reducing the process cost.</description>
    </item>
    
    <item>
      <title>Python Library - souwapy</title>
      <link>https://tanaikech.github.io/2016/10/30/python-library-souwapy/</link>
      <pubDate>Sun, 30 Oct 2016 13:38:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/30/python-library-souwapy/</guid>
      <description>This &amp;ldquo;souwapy&amp;rdquo; is a library for summing array elements with high speed by new algorithm (Pyramid method). The speed is faster than csv and panbdas module of python and v8 engine of node.js. The souwapy module is 2.3 and 3.1 times faster than csv and pandas module, respectively. This was really surprised me. It was found that the theory was correct.
At first, I have created this theory for Google Apps Script.</description>
    </item>
    
    <item>
      <title>GAS Library - SOUWA_GAS - Effects on Optimized Codes of Pyramid Method</title>
      <link>https://tanaikech.github.io/2016/10/13/gas-library-souwa_gas-effects-on-optimized-codes-of-pyramid-method/</link>
      <pubDate>Thu, 13 Oct 2016 15:57:20 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/13/gas-library-souwa_gas-effects-on-optimized-codes-of-pyramid-method/</guid>
      <description>Abstract I have already reported that the pyramid method is one of very effectively algolithms for summing string elements in an array using Google Apps Script (GAS). This report describes the adaptability of the pyramid method to any languages except for GAS. c++ (g++), Go, Java, Javascript on Node.js, Python and Ruby were chosen as the sample languages. In those languages, there are languages which have the distinctive commands for summing the array elements.</description>
    </item>
    
    <item>
      <title>Improved Algorithms for Summation of Array Elements</title>
      <link>https://tanaikech.github.io/2016/10/13/improved-algorithms-for-summation-of-array-elements/</link>
      <pubDate>Thu, 13 Oct 2016 14:39:34 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/13/improved-algorithms-for-summation-of-array-elements/</guid>
      <description>Abstract I considered an efficient algorithm for summation of array elements. All elements in an array are string. When those elements are summed using scripts, a standard method is to add each element in order. If the script is run without any optimize, the process becomes gradually sluggish, because the total amount of active data during the summation process is proportional to the square of the number of array elements. This leads directly to the high process-cost.</description>
    </item>
    
  </channel>
</rss>