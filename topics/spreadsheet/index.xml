<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spreadsheet on tanaike</title>
    <link>https://tanaikech.github.io/topics/spreadsheet/</link>
    <description>Recent content in Spreadsheet on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 28 Oct 2019 08:09:42 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/topics/spreadsheet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automatic Recalculation of Custom Function on Spreadsheet Part 2</title>
      <link>https://tanaikech.github.io/2019/10/28/automatic-recalculation-of-custom-function-on-spreadsheet-part-2/</link>
      <pubDate>Mon, 28 Oct 2019 08:09:42 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/10/28/automatic-recalculation-of-custom-function-on-spreadsheet-part-2/</guid>
      <description>Gists
Description I have already reported about &amp;ldquo;Automatic Recalculation of Custom Function on Spreadsheet Part 1&amp;rdquo; at here. Here, I would like to introduce other workaround for forcibly recalculating the custom functions and built-in functions using Class TextFinder. Class TextFinder has added at April 5, 2019. By this, this workaround can be proposed.
Sample scripts Pattern 1 If you want to refresh all functions of all sheets in a Spreadsheet, you can use the following script.</description>
    </item>
    
    <item>
      <title>Append Values by Inserting Rows using Google Sheets API</title>
      <link>https://tanaikech.github.io/2018/02/27/append-values-by-inserting-rows-using-google-sheets-api/</link>
      <pubDate>Tue, 27 Feb 2018 09:51:55 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/27/append-values-by-inserting-rows-using-google-sheets-api/</guid>
      <description>Gists
In the case appending values to cell by inserting rows, when sheets.spreadsheets.values.append is used, the values are appended to the next empty row of the last row. If you want to append values to between cells with values by inserting row, you can achieve it using sheets.spreadsheets.batchUpdate.
When you use this, please use your access token.
Endpoint : POST https://sheets.googleapis.com/v4/spreadsheets/### spreadsheet ID ###:batchUpdate  Request body : In this request body, it appends the data of &amp;ldquo;sample1, sample2, sample3&amp;rdquo; to &amp;ldquo;A1:A3&amp;rdquo; of the sheetId of &amp;ldquo;1234567890&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Automatic Recalculation of Custom Function on Spreadsheet Part 1</title>
      <link>https://tanaikech.github.io/2017/12/23/automatic-recalculation-of-custom-function-on-spreadsheet-part-1/</link>
      <pubDate>Sat, 23 Dec 2017 09:59:13 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/23/automatic-recalculation-of-custom-function-on-spreadsheet-part-1/</guid>
      <description>Gists
In this report, I would like to introduce a workaround for automatically recalculating custom functions on Spreadsheet.
1. Situation The sample situation is below. This is a sample situation for this document.
 There are 3 sheets with &amp;ldquo;sheet1&amp;rdquo;, &amp;ldquo;sheet2&amp;rdquo; and &amp;ldquo;sheet3&amp;rdquo; of sheet name in a Spreadsheet. Calculate the summation of values of &amp;ldquo;A1&amp;rdquo; of each sheet using a custom function. Sample script of the custom function is as follows.</description>
    </item>
    
    <item>
      <title>spreadsheets.values.batchUpdate using Golang</title>
      <link>https://tanaikech.github.io/2017/09/15/spreadsheets.values.batchupdate-using-golang/</link>
      <pubDate>Fri, 15 Sep 2017 14:14:50 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/09/15/spreadsheets.values.batchupdate-using-golang/</guid>
      <description>Gists
Flow : In my sample script, the script was made using the Quickstart. The flow to use this sample script is as follows.
 For Go Quickstart, please do Step 1 and Step 2. Please put client_secret.json to the same directory with my sample script. Copy and paste my sample script, and create it as new script file. Run the script. When Go to the following link in your browser then type the authorization code: is shown on your terminal, please copy the URL and paste to your browser.</description>
    </item>
    
  </channel>
</rss>