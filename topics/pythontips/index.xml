<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pythontips on tanaike</title>
    <link>https://tanaikech.github.io/topics/pythontips/</link>
    <description>Recent content in Pythontips on tanaike</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Thu, 18 Jul 2019 11:46:31 +0900</lastBuildDate>
    
	<atom:link href="https://tanaikech.github.io/topics/pythontips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python library - gdoctableapppy</title>
      <link>https://tanaikech.github.io/2019/07/18/python-library---gdoctableapppy/</link>
      <pubDate>Thu, 18 Jul 2019 11:46:31 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2019/07/18/python-library---gdoctableapppy/</guid>
      <description>Overview This is a python library to manage the tables on Google Document using Google Docs API.
Description Google Docs API has been released. When I used this API, I found that it is very difficult for me to manage the tables on Google Document using Google Docs API. Although I checked the official document, unfortunately, I thought that it&amp;rsquo;s very difficult for me. So in order to easily manage the tables on Google Document, I created this library.</description>
    </item>
    
    <item>
      <title>python library - getfilelistpy</title>
      <link>https://tanaikech.github.io/2018/11/17/python-library---getfilelistpy/</link>
      <pubDate>Sat, 17 Nov 2018 15:11:04 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/11/17/python-library---getfilelistpy/</guid>
      <description>Overview This is a python library to retrieve the file list with the folder tree from the specific folder of Google Drive.
Description When I create applications for using Google Drive, I often retrieve a file list from a folder in the application. So far, I had created the script for retrieving a file list from a folder for each application. Recently, I thought that if there is the script for retrieving the file list with the folder tree from the folder of Google Drive as a library, it will be useful for me and other users.</description>
    </item>
    
    <item>
      <title>Uploading Files From Local To Google Drive by Python without Quickstart</title>
      <link>https://tanaikech.github.io/2018/02/12/uploading-files-from-local-to-google-drive-by-python-without-quickstart/</link>
      <pubDate>Mon, 12 Feb 2018 11:39:22 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2018/02/12/uploading-files-from-local-to-google-drive-by-python-without-quickstart/</guid>
      <description>Gists
This is a sample script for uploading files from local PC to Google Drive using Python. In this sample, Quickstart is not used. So when you use this script, please retrieve access token.
Curl sample : curl -X POST \ -H &amp;quot;Authorization: Bearer ### access token ###&amp;quot; \ -F &amp;quot;metadata={name : &#39;sample.png&#39;, parents: [&#39;### folder ID ###&#39;]};type=application/json;charset=UTF-8&amp;quot; \ -F &amp;quot;file=@sample.png;type=image/png&amp;quot; \ &amp;quot;https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&amp;quot;  ]
Python sample : When above curl sample is converted to Python, it becomes as follows.</description>
    </item>
    
    <item>
      <title>Decoding Gmail Body with Japanese Language using Python</title>
      <link>https://tanaikech.github.io/2017/12/18/decoding-gmail-body-with-japanese-language-using-python/</link>
      <pubDate>Mon, 18 Dec 2017 08:22:16 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/12/18/decoding-gmail-body-with-japanese-language-using-python/</guid>
      <description>Gist
This is a sample script for decoding Gmail body with Japanese language using Python.
msg = service.users().messages().get(userId=&#39;me&#39;, id=id).execute() parts = msg[&#39;payload&#39;][&#39;parts&#39;] for e in parts: msg = base64.urlsafe_b64decode(e[&#39;body&#39;][&#39;data&#39;]).decode(&#39;utf-8&#39;).encode(&#39;cp932&#39;, &amp;quot;ignore&amp;quot;).decode(&#39;cp932&#39;) print(msg)  </description>
    </item>
    
    <item>
      <title>Updating Thumbnail of File on Google Drive using Python</title>
      <link>https://tanaikech.github.io/2017/08/19/updating-thumbnail-of-file-on-google-drive-using-python/</link>
      <pubDate>Sat, 19 Aug 2017 16:27:17 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/08/19/updating-thumbnail-of-file-on-google-drive-using-python/</guid>
      <description>Gists
This sample script is for updating thumbnail of file on Google Drive using Python.
This sample supposes that quickstart is used and default quickstart works fine. In order to use this sample, please carry out as follows.
 Replace main() of the default quickstart to this sample.  Script : import base64 # This is used for this sample. def main(): credentials = get_credentials() http = credentials.authorize(httplib2.Http()) service = discovery.</description>
    </item>
    
    <item>
      <title>Error Handling for Subprocess at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python/</link>
      <pubDate>Fri, 09 Jun 2017 14:27:19 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/error-handling-for-subprocess-at-python/</guid>
      <description>This sample is for error handling for subprocess.Popen. It confirms whether the execution file is existing. If the execution file is also not in the path, the error message is shown.
import subprocess res = subprocess.Popen( &amp;quot;application&amp;quot;, # &amp;lt;- Execution file stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True ).communicate() if len(res[1]) == 0: print(&amp;quot;ok: Application is existing.&amp;quot;) else: print(&amp;quot;Error: Application is not found.&amp;quot;)  </description>
    </item>
    
    <item>
      <title>Using Constructor Between Classes at Python</title>
      <link>https://tanaikech.github.io/2017/06/09/using-constructor-between-classes-at-python/</link>
      <pubDate>Fri, 09 Jun 2017 10:52:53 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2017/06/09/using-constructor-between-classes-at-python/</guid>
      <description> This sample is for using constructor between classes at Python.
Sample : class test1: def __init__(self): self.msg = &amp;quot;sample text&amp;quot; class test2: def __init__(self): self.msg = test1().msg print(test2().msg) &amp;gt;&amp;gt;&amp;gt; sample text  </description>
    </item>
    
    <item>
      <title>Python Library - souwapy</title>
      <link>https://tanaikech.github.io/2016/10/30/python-library---souwapy/</link>
      <pubDate>Sun, 30 Oct 2016 13:38:29 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/30/python-library---souwapy/</guid>
      <description>This &amp;ldquo;souwapy&amp;rdquo; is a library for summing array elements with high speed by new algorithm (Pyramid method). The speed is faster than csv and panbdas module of python and v8 engine of node.js. The souwapy module is 2.3 and 3.1 times faster than csv and pandas module, respectively. This was really surprised me. It was found that the theory was correct.
At first, I have created this theory for Google Apps Script.</description>
    </item>
    
    <item>
      <title>Element&#39;s Duplicate Number in Array at Python</title>
      <link>https://tanaikech.github.io/2016/10/21/elements-duplicate-number-in-array-at-python/</link>
      <pubDate>Fri, 21 Oct 2016 12:29:25 +0900</pubDate>
      
      <guid>https://tanaikech.github.io/2016/10/21/elements-duplicate-number-in-array-at-python/</guid>
      <description>Suddenly I had to need this.
This script can get the duplicate number of each element in array at Python. In this script, the duplicate number of each element is obtained and sorted by the duplicate number. This was expressed by the comprehension.
data = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;b&#39;, &#39;c&#39;, &#39;b&#39;] result = sorted({i: data.count(i) for i in set(data)}.items(), key=lambda x: x[1], reverse=True) print(result) &amp;gt;&amp;gt;&amp;gt; [(&#39;b&#39;, 4), (&#39;c&#39;, 3), (&#39;d&#39;, 2), (&#39;a&#39;, 1)]  </description>
    </item>
    
  </channel>
</rss>